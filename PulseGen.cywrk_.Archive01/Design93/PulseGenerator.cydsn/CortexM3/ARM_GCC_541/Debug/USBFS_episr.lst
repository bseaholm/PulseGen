ARM GAS  C:\Users\BRIAN~1.SEA\AppData\Local\Temp\ccVes72R.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"USBFS_episr.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.USBFS_EP_1_ISR,"ax",%progbits
  20              		.align	2
  21              		.global	USBFS_EP_1_ISR
  22              		.thumb
  23              		.thumb_func
  24              		.type	USBFS_EP_1_ISR, %function
  25              	USBFS_EP_1_ISR:
  26              	.LFB0:
  27              		.file 1 "Generated_Source\\PSoC5\\USBFS_episr.c"
   1:Generated_Source\PSoC5/USBFS_episr.c **** /***************************************************************************//**
   2:Generated_Source\PSoC5/USBFS_episr.c **** * \file USBFS_episr.c
   3:Generated_Source\PSoC5/USBFS_episr.c **** * \version 3.10
   4:Generated_Source\PSoC5/USBFS_episr.c **** *
   5:Generated_Source\PSoC5/USBFS_episr.c **** * \brief
   6:Generated_Source\PSoC5/USBFS_episr.c **** *  This file contains the Data endpoint Interrupt Service Routines.
   7:Generated_Source\PSoC5/USBFS_episr.c **** *
   8:Generated_Source\PSoC5/USBFS_episr.c **** ********************************************************************************
   9:Generated_Source\PSoC5/USBFS_episr.c **** * \copyright
  10:Generated_Source\PSoC5/USBFS_episr.c **** * Copyright 2008-2016, Cypress Semiconductor Corporation.  All rights reserved.
  11:Generated_Source\PSoC5/USBFS_episr.c **** * You may use this file only in accordance with the license, terms, conditions,
  12:Generated_Source\PSoC5/USBFS_episr.c **** * disclaimers, and limitations in the end user license agreement accompanying
  13:Generated_Source\PSoC5/USBFS_episr.c **** * the software package with which this file was provided.
  14:Generated_Source\PSoC5/USBFS_episr.c **** *******************************************************************************/
  15:Generated_Source\PSoC5/USBFS_episr.c **** 
  16:Generated_Source\PSoC5/USBFS_episr.c **** #include "USBFS_pvt.h"
  17:Generated_Source\PSoC5/USBFS_episr.c **** #include "USBFS_cydmac.h"
  18:Generated_Source\PSoC5/USBFS_episr.c **** #include "cyapicallbacks.h"
  19:Generated_Source\PSoC5/USBFS_episr.c **** 
  20:Generated_Source\PSoC5/USBFS_episr.c **** 
  21:Generated_Source\PSoC5/USBFS_episr.c **** /***************************************
  22:Generated_Source\PSoC5/USBFS_episr.c **** * Custom Declarations
  23:Generated_Source\PSoC5/USBFS_episr.c **** ***************************************/
  24:Generated_Source\PSoC5/USBFS_episr.c **** /* `#START CUSTOM_DECLARATIONS` Place your declaration here */
  25:Generated_Source\PSoC5/USBFS_episr.c **** 
  26:Generated_Source\PSoC5/USBFS_episr.c **** /* `#END` */
  27:Generated_Source\PSoC5/USBFS_episr.c **** 
  28:Generated_Source\PSoC5/USBFS_episr.c **** 
  29:Generated_Source\PSoC5/USBFS_episr.c **** #if (USBFS_EP1_ISR_ACTIVE)
  30:Generated_Source\PSoC5/USBFS_episr.c ****     /******************************************************************************
ARM GAS  C:\Users\BRIAN~1.SEA\AppData\Local\Temp\ccVes72R.s 			page 2


  31:Generated_Source\PSoC5/USBFS_episr.c ****     * Function Name: USBFS_EP_1_ISR
  32:Generated_Source\PSoC5/USBFS_episr.c ****     ***************************************************************************//**
  33:Generated_Source\PSoC5/USBFS_episr.c ****     *
  34:Generated_Source\PSoC5/USBFS_episr.c ****     *  Endpoint 1 Interrupt Service Routine
  35:Generated_Source\PSoC5/USBFS_episr.c ****     *
  36:Generated_Source\PSoC5/USBFS_episr.c ****     ******************************************************************************/
  37:Generated_Source\PSoC5/USBFS_episr.c ****     CY_ISR(USBFS_EP_1_ISR)
  38:Generated_Source\PSoC5/USBFS_episr.c ****     {
  28              		.loc 1 38 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  39:Generated_Source\PSoC5/USBFS_episr.c **** 
  40:Generated_Source\PSoC5/USBFS_episr.c ****     #ifdef USBFS_EP_1_ISR_ENTRY_CALLBACK
  41:Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_EP_1_ISR_EntryCallback();
  42:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_EP_1_ISR_ENTRY_CALLBACK) */
  43:Generated_Source\PSoC5/USBFS_episr.c **** 
  44:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#START EP1_USER_CODE` Place your code here */
  45:Generated_Source\PSoC5/USBFS_episr.c **** 
  46:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#END` */
  47:Generated_Source\PSoC5/USBFS_episr.c **** 
  48:Generated_Source\PSoC5/USBFS_episr.c ****     #if (CY_PSOC3 && defined(USBFS_ENABLE_MIDI_STREAMING) && \
  49:Generated_Source\PSoC5/USBFS_episr.c ****         !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
  50:Generated_Source\PSoC5/USBFS_episr.c ****         {
  51:Generated_Source\PSoC5/USBFS_episr.c ****             uint8 intEn = EA;
  52:Generated_Source\PSoC5/USBFS_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
  53:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (CY_PSOC3 && USBFS_ISR_SERVICE_MIDI_OUT) */
  54:Generated_Source\PSoC5/USBFS_episr.c ****     
  55:Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_ClearSieEpInterruptSource(USBFS_SIE_INT_EP1_INTR);
  33              		.loc 1 55 0
  34 0000 0122     		movs	r2, #1
  35 0002 094B     		ldr	r3, .L3
  36 0004 1A70     		strb	r2, [r3]
  56:Generated_Source\PSoC5/USBFS_episr.c ****             
  57:Generated_Source\PSoC5/USBFS_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
  58:Generated_Source\PSoC5/USBFS_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
  59:Generated_Source\PSoC5/USBFS_episr.c ****         * OUT endpoint: data is ready to be read from endpoint buffer. 
  60:Generated_Source\PSoC5/USBFS_episr.c ****         */
  61:Generated_Source\PSoC5/USBFS_episr.c ****     #if (CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO)
  62:Generated_Source\PSoC5/USBFS_episr.c ****         if (0u != (USBFS_EP[USBFS_EP1].addr & USBFS_DIR_IN))
  63:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO) */
  64:Generated_Source\PSoC5/USBFS_episr.c ****         {
  65:Generated_Source\PSoC5/USBFS_episr.c ****             /* Read CR0 register to clear SIE lock. */
  66:Generated_Source\PSoC5/USBFS_episr.c ****             (void) USBFS_SIE_EP_BASE.sieEp[USBFS_EP1].epCr0;
  37              		.loc 1 66 0
  38 0006 0F3B     		subs	r3, r3, #15
  39 0008 9B7C     		ldrb	r3, [r3, #18]	@ zero_extendqisi2
  67:Generated_Source\PSoC5/USBFS_episr.c ****             
  68:Generated_Source\PSoC5/USBFS_episr.c ****             /* Toggle all endpoint types except ISOC. */
  69:Generated_Source\PSoC5/USBFS_episr.c ****             if (USBFS_GET_EP_TYPE(USBFS_EP1) != USBFS_EP_TYPE_ISOC)
  40              		.loc 1 69 0
  41 000a 084B     		ldr	r3, .L3+4
  42 000c 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
  43 000e 03F00303 		and	r3, r3, #3
  44 0012 9342     		cmp	r3, r2
  45 0014 04D0     		beq	.L2
ARM GAS  C:\Users\BRIAN~1.SEA\AppData\Local\Temp\ccVes72R.s 			page 3


  70:Generated_Source\PSoC5/USBFS_episr.c ****             {
  71:Generated_Source\PSoC5/USBFS_episr.c ****                 USBFS_EP[USBFS_EP1].epToggle ^= USBFS_EPX_CNT_DATA_TOGGLE;
  46              		.loc 1 71 0
  47 0016 054A     		ldr	r2, .L3+4
  48 0018 D37B     		ldrb	r3, [r2, #15]	@ zero_extendqisi2
  49 001a 83F08003 		eor	r3, r3, #128
  50 001e D373     		strb	r3, [r2, #15]
  51              	.L2:
  72:Generated_Source\PSoC5/USBFS_episr.c ****             }
  73:Generated_Source\PSoC5/USBFS_episr.c **** 
  74:Generated_Source\PSoC5/USBFS_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
  75:Generated_Source\PSoC5/USBFS_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
  76:Generated_Source\PSoC5/USBFS_episr.c ****             * Because last chunk of data is being copied.
  77:Generated_Source\PSoC5/USBFS_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
  78:Generated_Source\PSoC5/USBFS_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
  79:Generated_Source\PSoC5/USBFS_episr.c ****             */
  80:Generated_Source\PSoC5/USBFS_episr.c ****             USBFS_EP[USBFS_EP1].apiEpState = USBFS_EVENT_PENDING;
  52              		.loc 1 80 0
  53 0020 0122     		movs	r2, #1
  54 0022 024B     		ldr	r3, .L3+4
  55 0024 5A73     		strb	r2, [r3, #13]
  56 0026 7047     		bx	lr
  57              	.L4:
  58              		.align	2
  59              	.L3:
  60 0028 0B600040 		.word	1073766411
  61 002c 00000000 		.word	USBFS_EP
  62              		.cfi_endproc
  63              	.LFE0:
  64              		.size	USBFS_EP_1_ISR, .-USBFS_EP_1_ISR
  65              		.section	.text.USBFS_EP_2_ISR,"ax",%progbits
  66              		.align	2
  67              		.global	USBFS_EP_2_ISR
  68              		.thumb
  69              		.thumb_func
  70              		.type	USBFS_EP_2_ISR, %function
  71              	USBFS_EP_2_ISR:
  72              	.LFB1:
  81:Generated_Source\PSoC5/USBFS_episr.c ****         }
  82:Generated_Source\PSoC5/USBFS_episr.c **** 
  83:Generated_Source\PSoC5/USBFS_episr.c ****     #if (!(CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO))
  84:Generated_Source\PSoC5/USBFS_episr.c ****         #if (defined(USBFS_ENABLE_MIDI_STREAMING) && \
  85:Generated_Source\PSoC5/USBFS_episr.c ****             !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
  86:Generated_Source\PSoC5/USBFS_episr.c ****             if (USBFS_midi_out_ep == USBFS_EP1)
  87:Generated_Source\PSoC5/USBFS_episr.c ****             {
  88:Generated_Source\PSoC5/USBFS_episr.c ****                 USBFS_MIDI_OUT_Service();
  89:Generated_Source\PSoC5/USBFS_episr.c ****             }
  90:Generated_Source\PSoC5/USBFS_episr.c ****         #endif /* (USBFS_ISR_SERVICE_MIDI_OUT) */
  91:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (!(CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO)) */
  92:Generated_Source\PSoC5/USBFS_episr.c ****     
  93:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#START EP1_END_USER_CODE` Place your code here */
  94:Generated_Source\PSoC5/USBFS_episr.c **** 
  95:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#END` */
  96:Generated_Source\PSoC5/USBFS_episr.c **** 
  97:Generated_Source\PSoC5/USBFS_episr.c ****     #ifdef USBFS_EP_1_ISR_EXIT_CALLBACK
  98:Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_EP_1_ISR_ExitCallback();
  99:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_EP_1_ISR_EXIT_CALLBACK) */
ARM GAS  C:\Users\BRIAN~1.SEA\AppData\Local\Temp\ccVes72R.s 			page 4


 100:Generated_Source\PSoC5/USBFS_episr.c **** 
 101:Generated_Source\PSoC5/USBFS_episr.c ****     #if (CY_PSOC3 && defined(USBFS_ENABLE_MIDI_STREAMING) && \
 102:Generated_Source\PSoC5/USBFS_episr.c ****         !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 103:Generated_Source\PSoC5/USBFS_episr.c ****         
 104:Generated_Source\PSoC5/USBFS_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 105:Generated_Source\PSoC5/USBFS_episr.c ****         }
 106:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (CY_PSOC3 && USBFS_ISR_SERVICE_MIDI_OUT) */
 107:Generated_Source\PSoC5/USBFS_episr.c ****     }
 108:Generated_Source\PSoC5/USBFS_episr.c **** 
 109:Generated_Source\PSoC5/USBFS_episr.c **** #endif /* (USBFS_EP1_ISR_ACTIVE) */
 110:Generated_Source\PSoC5/USBFS_episr.c **** 
 111:Generated_Source\PSoC5/USBFS_episr.c **** 
 112:Generated_Source\PSoC5/USBFS_episr.c **** #if (USBFS_EP2_ISR_ACTIVE)
 113:Generated_Source\PSoC5/USBFS_episr.c ****     /*******************************************************************************
 114:Generated_Source\PSoC5/USBFS_episr.c ****     * Function Name: USBFS_EP_2_ISR
 115:Generated_Source\PSoC5/USBFS_episr.c ****     ****************************************************************************//**
 116:Generated_Source\PSoC5/USBFS_episr.c ****     *
 117:Generated_Source\PSoC5/USBFS_episr.c ****     *  Endpoint 2 Interrupt Service Routine.
 118:Generated_Source\PSoC5/USBFS_episr.c ****     *
 119:Generated_Source\PSoC5/USBFS_episr.c ****     *******************************************************************************/
 120:Generated_Source\PSoC5/USBFS_episr.c ****     CY_ISR(USBFS_EP_2_ISR)
 121:Generated_Source\PSoC5/USBFS_episr.c ****     {
  73              		.loc 1 121 0
  74              		.cfi_startproc
  75              		@ args = 0, pretend = 0, frame = 0
  76              		@ frame_needed = 0, uses_anonymous_args = 0
  77 0000 08B5     		push	{r3, lr}
  78              		.cfi_def_cfa_offset 8
  79              		.cfi_offset 3, -8
  80              		.cfi_offset 14, -4
 122:Generated_Source\PSoC5/USBFS_episr.c ****     #ifdef USBFS_EP_2_ISR_ENTRY_CALLBACK
 123:Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_EP_2_ISR_EntryCallback();
 124:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_EP_2_ISR_ENTRY_CALLBACK) */
 125:Generated_Source\PSoC5/USBFS_episr.c **** 
 126:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#START EP2_USER_CODE` Place your code here */
 127:Generated_Source\PSoC5/USBFS_episr.c **** 
 128:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#END` */
 129:Generated_Source\PSoC5/USBFS_episr.c **** 
 130:Generated_Source\PSoC5/USBFS_episr.c ****     #if (CY_PSOC3 && defined(USBFS_ENABLE_MIDI_STREAMING) && \
 131:Generated_Source\PSoC5/USBFS_episr.c ****         !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 132:Generated_Source\PSoC5/USBFS_episr.c ****         {
 133:Generated_Source\PSoC5/USBFS_episr.c ****             uint8 intEn = EA;
 134:Generated_Source\PSoC5/USBFS_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
 135:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (CY_PSOC3 && USBFS_ISR_SERVICE_MIDI_OUT) */
 136:Generated_Source\PSoC5/USBFS_episr.c **** 
 137:Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_ClearSieEpInterruptSource(USBFS_SIE_INT_EP2_INTR);
  81              		.loc 1 137 0
  82 0002 0222     		movs	r2, #2
  83 0004 0A4B     		ldr	r3, .L8
  84 0006 1A70     		strb	r2, [r3]
 138:Generated_Source\PSoC5/USBFS_episr.c **** 
 139:Generated_Source\PSoC5/USBFS_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
 140:Generated_Source\PSoC5/USBFS_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
 141:Generated_Source\PSoC5/USBFS_episr.c ****         * OUT endpoint: data is ready to be read from endpoint buffer. 
 142:Generated_Source\PSoC5/USBFS_episr.c ****         */
 143:Generated_Source\PSoC5/USBFS_episr.c ****     #if (CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO)
 144:Generated_Source\PSoC5/USBFS_episr.c ****         if (0u != (USBFS_EP[USBFS_EP2].addr & USBFS_DIR_IN))
ARM GAS  C:\Users\BRIAN~1.SEA\AppData\Local\Temp\ccVes72R.s 			page 5


 145:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO) */
 146:Generated_Source\PSoC5/USBFS_episr.c ****         {            
 147:Generated_Source\PSoC5/USBFS_episr.c ****             /* Read CR0 register to clear SIE lock. */
 148:Generated_Source\PSoC5/USBFS_episr.c ****             (void) USBFS_SIE_EP_BASE.sieEp[USBFS_EP2].epCr0;
  85              		.loc 1 148 0
  86 0008 0F3B     		subs	r3, r3, #15
  87 000a 93F82230 		ldrb	r3, [r3, #34]	@ zero_extendqisi2
 149:Generated_Source\PSoC5/USBFS_episr.c ****             
 150:Generated_Source\PSoC5/USBFS_episr.c ****             /* Toggle all endpoint types except ISOC. */
 151:Generated_Source\PSoC5/USBFS_episr.c ****             if (USBFS_GET_EP_TYPE(USBFS_EP2) != USBFS_EP_TYPE_ISOC)
  88              		.loc 1 151 0
  89 000e 094B     		ldr	r3, .L8+4
  90 0010 1B7E     		ldrb	r3, [r3, #24]	@ zero_extendqisi2
  91 0012 03F00303 		and	r3, r3, #3
  92 0016 012B     		cmp	r3, #1
  93 0018 04D0     		beq	.L6
 152:Generated_Source\PSoC5/USBFS_episr.c ****             {
 153:Generated_Source\PSoC5/USBFS_episr.c ****                 USBFS_EP[USBFS_EP2].epToggle ^= USBFS_EPX_CNT_DATA_TOGGLE;
  94              		.loc 1 153 0
  95 001a 064A     		ldr	r2, .L8+4
  96 001c D37E     		ldrb	r3, [r2, #27]	@ zero_extendqisi2
  97 001e 83F08003 		eor	r3, r3, #128
  98 0022 D376     		strb	r3, [r2, #27]
  99              	.L6:
 154:Generated_Source\PSoC5/USBFS_episr.c ****             }
 155:Generated_Source\PSoC5/USBFS_episr.c **** 
 156:Generated_Source\PSoC5/USBFS_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
 157:Generated_Source\PSoC5/USBFS_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
 158:Generated_Source\PSoC5/USBFS_episr.c ****             * Because last chunk of data is being copied.
 159:Generated_Source\PSoC5/USBFS_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
 160:Generated_Source\PSoC5/USBFS_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
 161:Generated_Source\PSoC5/USBFS_episr.c ****             */
 162:Generated_Source\PSoC5/USBFS_episr.c ****             USBFS_EP[USBFS_EP2].apiEpState = USBFS_EVENT_PENDING;
 100              		.loc 1 162 0
 101 0024 0122     		movs	r2, #1
 102 0026 034B     		ldr	r3, .L8+4
 103 0028 5A76     		strb	r2, [r3, #25]
 163:Generated_Source\PSoC5/USBFS_episr.c ****         }
 164:Generated_Source\PSoC5/USBFS_episr.c **** 
 165:Generated_Source\PSoC5/USBFS_episr.c ****     #if (!(CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO))
 166:Generated_Source\PSoC5/USBFS_episr.c ****         #if (defined(USBFS_ENABLE_MIDI_STREAMING) && \
 167:Generated_Source\PSoC5/USBFS_episr.c ****             !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 168:Generated_Source\PSoC5/USBFS_episr.c ****             if (USBFS_midi_out_ep == USBFS_EP2)
 169:Generated_Source\PSoC5/USBFS_episr.c ****             {
 170:Generated_Source\PSoC5/USBFS_episr.c ****                 USBFS_MIDI_OUT_Service();
 171:Generated_Source\PSoC5/USBFS_episr.c ****             }
 172:Generated_Source\PSoC5/USBFS_episr.c ****         #endif /* (USBFS_ISR_SERVICE_MIDI_OUT) */
 173:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (!(CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO)) */        
 174:Generated_Source\PSoC5/USBFS_episr.c ****     
 175:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#START EP2_END_USER_CODE` Place your code here */
 176:Generated_Source\PSoC5/USBFS_episr.c **** 
 177:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#END` */
 178:Generated_Source\PSoC5/USBFS_episr.c **** 
 179:Generated_Source\PSoC5/USBFS_episr.c ****     #ifdef USBFS_EP_2_ISR_EXIT_CALLBACK
 180:Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_EP_2_ISR_ExitCallback();
 104              		.loc 1 180 0
 105 002a FFF7FEFF 		bl	USBFS_EP_2_ISR_ExitCallback
ARM GAS  C:\Users\BRIAN~1.SEA\AppData\Local\Temp\ccVes72R.s 			page 6


 106              	.LVL0:
 107 002e 08BD     		pop	{r3, pc}
 108              	.L9:
 109              		.align	2
 110              	.L8:
 111 0030 0B600040 		.word	1073766411
 112 0034 00000000 		.word	USBFS_EP
 113              		.cfi_endproc
 114              	.LFE1:
 115              		.size	USBFS_EP_2_ISR, .-USBFS_EP_2_ISR
 116              		.section	.text.USBFS_SOF_ISR,"ax",%progbits
 117              		.align	2
 118              		.global	USBFS_SOF_ISR
 119              		.thumb
 120              		.thumb_func
 121              		.type	USBFS_SOF_ISR, %function
 122              	USBFS_SOF_ISR:
 123              	.LFB2:
 181:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_EP_2_ISR_EXIT_CALLBACK) */
 182:Generated_Source\PSoC5/USBFS_episr.c **** 
 183:Generated_Source\PSoC5/USBFS_episr.c ****     #if (CY_PSOC3 && defined(USBFS_ENABLE_MIDI_STREAMING) && \
 184:Generated_Source\PSoC5/USBFS_episr.c ****         !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 185:Generated_Source\PSoC5/USBFS_episr.c ****         
 186:Generated_Source\PSoC5/USBFS_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 187:Generated_Source\PSoC5/USBFS_episr.c ****         }
 188:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (CY_PSOC3 && USBFS_ISR_SERVICE_MIDI_OUT) */
 189:Generated_Source\PSoC5/USBFS_episr.c ****     }
 190:Generated_Source\PSoC5/USBFS_episr.c **** #endif /* (USBFS_EP2_ISR_ACTIVE) */
 191:Generated_Source\PSoC5/USBFS_episr.c **** 
 192:Generated_Source\PSoC5/USBFS_episr.c **** 
 193:Generated_Source\PSoC5/USBFS_episr.c **** #if (USBFS_EP3_ISR_ACTIVE)
 194:Generated_Source\PSoC5/USBFS_episr.c ****     /*******************************************************************************
 195:Generated_Source\PSoC5/USBFS_episr.c ****     * Function Name: USBFS_EP_3_ISR
 196:Generated_Source\PSoC5/USBFS_episr.c ****     ****************************************************************************//**
 197:Generated_Source\PSoC5/USBFS_episr.c ****     *
 198:Generated_Source\PSoC5/USBFS_episr.c ****     *  Endpoint 3 Interrupt Service Routine.
 199:Generated_Source\PSoC5/USBFS_episr.c ****     *
 200:Generated_Source\PSoC5/USBFS_episr.c ****     *******************************************************************************/
 201:Generated_Source\PSoC5/USBFS_episr.c ****     CY_ISR(USBFS_EP_3_ISR)
 202:Generated_Source\PSoC5/USBFS_episr.c ****     {
 203:Generated_Source\PSoC5/USBFS_episr.c ****     #ifdef USBFS_EP_3_ISR_ENTRY_CALLBACK
 204:Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_EP_3_ISR_EntryCallback();
 205:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_EP_3_ISR_ENTRY_CALLBACK) */
 206:Generated_Source\PSoC5/USBFS_episr.c **** 
 207:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#START EP3_USER_CODE` Place your code here */
 208:Generated_Source\PSoC5/USBFS_episr.c **** 
 209:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#END` */
 210:Generated_Source\PSoC5/USBFS_episr.c **** 
 211:Generated_Source\PSoC5/USBFS_episr.c ****     #if (CY_PSOC3 && defined(USBFS_ENABLE_MIDI_STREAMING) && \
 212:Generated_Source\PSoC5/USBFS_episr.c ****         !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 213:Generated_Source\PSoC5/USBFS_episr.c ****         {
 214:Generated_Source\PSoC5/USBFS_episr.c ****             uint8 intEn = EA;
 215:Generated_Source\PSoC5/USBFS_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
 216:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (CY_PSOC3 && USBFS_ISR_SERVICE_MIDI_OUT) */
 217:Generated_Source\PSoC5/USBFS_episr.c **** 
 218:Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_ClearSieEpInterruptSource(USBFS_SIE_INT_EP3_INTR);    
 219:Generated_Source\PSoC5/USBFS_episr.c **** 
ARM GAS  C:\Users\BRIAN~1.SEA\AppData\Local\Temp\ccVes72R.s 			page 7


 220:Generated_Source\PSoC5/USBFS_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
 221:Generated_Source\PSoC5/USBFS_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
 222:Generated_Source\PSoC5/USBFS_episr.c ****         * OUT endpoint: data is ready to be read from endpoint buffer. 
 223:Generated_Source\PSoC5/USBFS_episr.c ****         */
 224:Generated_Source\PSoC5/USBFS_episr.c ****     #if (CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO)
 225:Generated_Source\PSoC5/USBFS_episr.c ****         if (0u != (USBFS_EP[USBFS_EP3].addr & USBFS_DIR_IN))
 226:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_EP_MANAGEMENT_DMA_AUTO) */
 227:Generated_Source\PSoC5/USBFS_episr.c ****         {            
 228:Generated_Source\PSoC5/USBFS_episr.c ****             /* Read CR0 register to clear SIE lock. */
 229:Generated_Source\PSoC5/USBFS_episr.c ****             (void) USBFS_SIE_EP_BASE.sieEp[USBFS_EP3].epCr0;
 230:Generated_Source\PSoC5/USBFS_episr.c **** 
 231:Generated_Source\PSoC5/USBFS_episr.c ****             /* Toggle all endpoint types except ISOC. */
 232:Generated_Source\PSoC5/USBFS_episr.c ****             if (USBFS_GET_EP_TYPE(USBFS_EP3) != USBFS_EP_TYPE_ISOC)
 233:Generated_Source\PSoC5/USBFS_episr.c ****             {
 234:Generated_Source\PSoC5/USBFS_episr.c ****                 USBFS_EP[USBFS_EP3].epToggle ^= USBFS_EPX_CNT_DATA_TOGGLE;
 235:Generated_Source\PSoC5/USBFS_episr.c ****             }
 236:Generated_Source\PSoC5/USBFS_episr.c **** 
 237:Generated_Source\PSoC5/USBFS_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
 238:Generated_Source\PSoC5/USBFS_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
 239:Generated_Source\PSoC5/USBFS_episr.c ****             * Because last chunk of data is being copied.
 240:Generated_Source\PSoC5/USBFS_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
 241:Generated_Source\PSoC5/USBFS_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
 242:Generated_Source\PSoC5/USBFS_episr.c ****             */
 243:Generated_Source\PSoC5/USBFS_episr.c ****             USBFS_EP[USBFS_EP3].apiEpState = USBFS_EVENT_PENDING;
 244:Generated_Source\PSoC5/USBFS_episr.c ****         }
 245:Generated_Source\PSoC5/USBFS_episr.c **** 
 246:Generated_Source\PSoC5/USBFS_episr.c ****     #if (!(CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO))
 247:Generated_Source\PSoC5/USBFS_episr.c ****         #if (defined(USBFS_ENABLE_MIDI_STREAMING) && \
 248:Generated_Source\PSoC5/USBFS_episr.c ****             !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 249:Generated_Source\PSoC5/USBFS_episr.c ****             if (USBFS_midi_out_ep == USBFS_EP3)
 250:Generated_Source\PSoC5/USBFS_episr.c ****             {
 251:Generated_Source\PSoC5/USBFS_episr.c ****                 USBFS_MIDI_OUT_Service();
 252:Generated_Source\PSoC5/USBFS_episr.c ****             }
 253:Generated_Source\PSoC5/USBFS_episr.c ****         #endif /* (USBFS_ISR_SERVICE_MIDI_OUT) */
 254:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (!(CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO)) */        
 255:Generated_Source\PSoC5/USBFS_episr.c **** 
 256:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#START EP3_END_USER_CODE` Place your code here */
 257:Generated_Source\PSoC5/USBFS_episr.c **** 
 258:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#END` */
 259:Generated_Source\PSoC5/USBFS_episr.c **** 
 260:Generated_Source\PSoC5/USBFS_episr.c ****     #ifdef USBFS_EP_3_ISR_EXIT_CALLBACK
 261:Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_EP_3_ISR_ExitCallback();
 262:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_EP_3_ISR_EXIT_CALLBACK) */
 263:Generated_Source\PSoC5/USBFS_episr.c **** 
 264:Generated_Source\PSoC5/USBFS_episr.c ****     #if (CY_PSOC3 && defined(USBFS_ENABLE_MIDI_STREAMING) && \
 265:Generated_Source\PSoC5/USBFS_episr.c ****         !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 266:Generated_Source\PSoC5/USBFS_episr.c ****         
 267:Generated_Source\PSoC5/USBFS_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 268:Generated_Source\PSoC5/USBFS_episr.c ****         }
 269:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (CY_PSOC3 && USBFS_ISR_SERVICE_MIDI_OUT) */
 270:Generated_Source\PSoC5/USBFS_episr.c ****     }
 271:Generated_Source\PSoC5/USBFS_episr.c **** #endif /* (USBFS_EP3_ISR_ACTIVE) */
 272:Generated_Source\PSoC5/USBFS_episr.c **** 
 273:Generated_Source\PSoC5/USBFS_episr.c **** 
 274:Generated_Source\PSoC5/USBFS_episr.c **** #if (USBFS_EP4_ISR_ACTIVE)
 275:Generated_Source\PSoC5/USBFS_episr.c ****     /*******************************************************************************
 276:Generated_Source\PSoC5/USBFS_episr.c ****     * Function Name: USBFS_EP_4_ISR
ARM GAS  C:\Users\BRIAN~1.SEA\AppData\Local\Temp\ccVes72R.s 			page 8


 277:Generated_Source\PSoC5/USBFS_episr.c ****     ****************************************************************************//**
 278:Generated_Source\PSoC5/USBFS_episr.c ****     *
 279:Generated_Source\PSoC5/USBFS_episr.c ****     *  Endpoint 4 Interrupt Service Routine.
 280:Generated_Source\PSoC5/USBFS_episr.c ****     *
 281:Generated_Source\PSoC5/USBFS_episr.c ****     *******************************************************************************/
 282:Generated_Source\PSoC5/USBFS_episr.c ****     CY_ISR(USBFS_EP_4_ISR)
 283:Generated_Source\PSoC5/USBFS_episr.c ****     {
 284:Generated_Source\PSoC5/USBFS_episr.c ****     #ifdef USBFS_EP_4_ISR_ENTRY_CALLBACK
 285:Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_EP_4_ISR_EntryCallback();
 286:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_EP_4_ISR_ENTRY_CALLBACK) */
 287:Generated_Source\PSoC5/USBFS_episr.c **** 
 288:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#START EP4_USER_CODE` Place your code here */
 289:Generated_Source\PSoC5/USBFS_episr.c **** 
 290:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#END` */
 291:Generated_Source\PSoC5/USBFS_episr.c **** 
 292:Generated_Source\PSoC5/USBFS_episr.c ****     #if (CY_PSOC3 && defined(USBFS_ENABLE_MIDI_STREAMING) && \
 293:Generated_Source\PSoC5/USBFS_episr.c ****         !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 294:Generated_Source\PSoC5/USBFS_episr.c ****         {
 295:Generated_Source\PSoC5/USBFS_episr.c ****             uint8 intEn = EA;
 296:Generated_Source\PSoC5/USBFS_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
 297:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (CY_PSOC3 && USBFS_ISR_SERVICE_MIDI_OUT) */
 298:Generated_Source\PSoC5/USBFS_episr.c **** 
 299:Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_ClearSieEpInterruptSource(USBFS_SIE_INT_EP4_INTR);
 300:Generated_Source\PSoC5/USBFS_episr.c ****         
 301:Generated_Source\PSoC5/USBFS_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
 302:Generated_Source\PSoC5/USBFS_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
 303:Generated_Source\PSoC5/USBFS_episr.c ****         * OUT endpoint: data is ready to read from endpoint buffer. 
 304:Generated_Source\PSoC5/USBFS_episr.c ****         */
 305:Generated_Source\PSoC5/USBFS_episr.c ****     #if (CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO)
 306:Generated_Source\PSoC5/USBFS_episr.c ****         if (0u != (USBFS_EP[USBFS_EP4].addr & USBFS_DIR_IN))
 307:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_EP_MANAGEMENT_DMA_AUTO) */
 308:Generated_Source\PSoC5/USBFS_episr.c ****         {
 309:Generated_Source\PSoC5/USBFS_episr.c ****             /* Read CR0 register to clear SIE lock. */
 310:Generated_Source\PSoC5/USBFS_episr.c ****             (void) USBFS_SIE_EP_BASE.sieEp[USBFS_EP4].epCr0;
 311:Generated_Source\PSoC5/USBFS_episr.c **** 
 312:Generated_Source\PSoC5/USBFS_episr.c ****             /* Toggle all endpoint types except ISOC. */
 313:Generated_Source\PSoC5/USBFS_episr.c ****             if (USBFS_GET_EP_TYPE(USBFS_EP4) != USBFS_EP_TYPE_ISOC)
 314:Generated_Source\PSoC5/USBFS_episr.c ****             {
 315:Generated_Source\PSoC5/USBFS_episr.c ****                 USBFS_EP[USBFS_EP4].epToggle ^= USBFS_EPX_CNT_DATA_TOGGLE;
 316:Generated_Source\PSoC5/USBFS_episr.c ****             }
 317:Generated_Source\PSoC5/USBFS_episr.c **** 
 318:Generated_Source\PSoC5/USBFS_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
 319:Generated_Source\PSoC5/USBFS_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
 320:Generated_Source\PSoC5/USBFS_episr.c ****             * Because last chunk of data is being copied.
 321:Generated_Source\PSoC5/USBFS_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
 322:Generated_Source\PSoC5/USBFS_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
 323:Generated_Source\PSoC5/USBFS_episr.c ****             */
 324:Generated_Source\PSoC5/USBFS_episr.c ****             USBFS_EP[USBFS_EP4].apiEpState = USBFS_EVENT_PENDING;
 325:Generated_Source\PSoC5/USBFS_episr.c ****         }
 326:Generated_Source\PSoC5/USBFS_episr.c **** 
 327:Generated_Source\PSoC5/USBFS_episr.c ****     #if (!(CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO))
 328:Generated_Source\PSoC5/USBFS_episr.c ****         #if (defined(USBFS_ENABLE_MIDI_STREAMING) && \
 329:Generated_Source\PSoC5/USBFS_episr.c ****             !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 330:Generated_Source\PSoC5/USBFS_episr.c ****             if(USBFS_midi_out_ep == USBFS_EP4)
 331:Generated_Source\PSoC5/USBFS_episr.c ****             {
 332:Generated_Source\PSoC5/USBFS_episr.c ****                 USBFS_MIDI_OUT_Service();
 333:Generated_Source\PSoC5/USBFS_episr.c ****             }
ARM GAS  C:\Users\BRIAN~1.SEA\AppData\Local\Temp\ccVes72R.s 			page 9


 334:Generated_Source\PSoC5/USBFS_episr.c ****         #endif /* (USBFS_ISR_SERVICE_MIDI_OUT) */
 335:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (!(CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO)) */        
 336:Generated_Source\PSoC5/USBFS_episr.c **** 
 337:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#START EP4_END_USER_CODE` Place your code here */
 338:Generated_Source\PSoC5/USBFS_episr.c **** 
 339:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#END` */
 340:Generated_Source\PSoC5/USBFS_episr.c **** 
 341:Generated_Source\PSoC5/USBFS_episr.c ****     #ifdef USBFS_EP_4_ISR_EXIT_CALLBACK
 342:Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_EP_4_ISR_ExitCallback();
 343:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_EP_4_ISR_EXIT_CALLBACK) */
 344:Generated_Source\PSoC5/USBFS_episr.c **** 
 345:Generated_Source\PSoC5/USBFS_episr.c ****     #if (CY_PSOC3 && defined(USBFS_ENABLE_MIDI_STREAMING) && \
 346:Generated_Source\PSoC5/USBFS_episr.c ****         !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 347:Generated_Source\PSoC5/USBFS_episr.c ****         
 348:Generated_Source\PSoC5/USBFS_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 349:Generated_Source\PSoC5/USBFS_episr.c ****         }
 350:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (CY_PSOC3 && USBFS_ISR_SERVICE_MIDI_OUT) */
 351:Generated_Source\PSoC5/USBFS_episr.c ****     }
 352:Generated_Source\PSoC5/USBFS_episr.c **** #endif /* (USBFS_EP4_ISR_ACTIVE) */
 353:Generated_Source\PSoC5/USBFS_episr.c **** 
 354:Generated_Source\PSoC5/USBFS_episr.c **** 
 355:Generated_Source\PSoC5/USBFS_episr.c **** #if (USBFS_EP5_ISR_ACTIVE)
 356:Generated_Source\PSoC5/USBFS_episr.c ****     /*******************************************************************************
 357:Generated_Source\PSoC5/USBFS_episr.c ****     * Function Name: USBFS_EP_5_ISR
 358:Generated_Source\PSoC5/USBFS_episr.c ****     ****************************************************************************//**
 359:Generated_Source\PSoC5/USBFS_episr.c ****     *
 360:Generated_Source\PSoC5/USBFS_episr.c ****     *  Endpoint 5 Interrupt Service Routine
 361:Generated_Source\PSoC5/USBFS_episr.c ****     *
 362:Generated_Source\PSoC5/USBFS_episr.c ****     *
 363:Generated_Source\PSoC5/USBFS_episr.c ****     *******************************************************************************/
 364:Generated_Source\PSoC5/USBFS_episr.c ****     CY_ISR(USBFS_EP_5_ISR)
 365:Generated_Source\PSoC5/USBFS_episr.c ****     {
 366:Generated_Source\PSoC5/USBFS_episr.c ****     #ifdef USBFS_EP_5_ISR_ENTRY_CALLBACK
 367:Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_EP_5_ISR_EntryCallback();
 368:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_EP_5_ISR_ENTRY_CALLBACK) */
 369:Generated_Source\PSoC5/USBFS_episr.c **** 
 370:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#START EP5_USER_CODE` Place your code here */
 371:Generated_Source\PSoC5/USBFS_episr.c **** 
 372:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#END` */
 373:Generated_Source\PSoC5/USBFS_episr.c **** 
 374:Generated_Source\PSoC5/USBFS_episr.c ****     #if (defined(USBFS_ENABLE_MIDI_STREAMING) && !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && \
 375:Generated_Source\PSoC5/USBFS_episr.c ****                  USBFS_ISR_SERVICE_MIDI_OUT && CY_PSOC3)
 376:Generated_Source\PSoC5/USBFS_episr.c ****         {
 377:Generated_Source\PSoC5/USBFS_episr.c ****             uint8 intEn = EA;
 378:Generated_Source\PSoC5/USBFS_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
 379:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (CY_PSOC3 && USBFS_ISR_SERVICE_MIDI_OUT) */
 380:Generated_Source\PSoC5/USBFS_episr.c **** 
 381:Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_ClearSieEpInterruptSource(USBFS_SIE_INT_EP5_INTR);
 382:Generated_Source\PSoC5/USBFS_episr.c ****     
 383:Generated_Source\PSoC5/USBFS_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
 384:Generated_Source\PSoC5/USBFS_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
 385:Generated_Source\PSoC5/USBFS_episr.c ****         * OUT endpoint: data is ready to read from endpoint buffer. 
 386:Generated_Source\PSoC5/USBFS_episr.c ****         */
 387:Generated_Source\PSoC5/USBFS_episr.c ****     #if (CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO)
 388:Generated_Source\PSoC5/USBFS_episr.c ****         if (0u != (USBFS_EP[USBFS_EP5].addr & USBFS_DIR_IN))
 389:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_EP_MANAGEMENT_DMA_AUTO) */
 390:Generated_Source\PSoC5/USBFS_episr.c ****         {            
ARM GAS  C:\Users\BRIAN~1.SEA\AppData\Local\Temp\ccVes72R.s 			page 10


 391:Generated_Source\PSoC5/USBFS_episr.c ****             /* Read CR0 register to clear SIE lock. */
 392:Generated_Source\PSoC5/USBFS_episr.c ****             (void) USBFS_SIE_EP_BASE.sieEp[USBFS_EP5].epCr0;
 393:Generated_Source\PSoC5/USBFS_episr.c **** 
 394:Generated_Source\PSoC5/USBFS_episr.c ****             /* Toggle all endpoint types except ISOC. */
 395:Generated_Source\PSoC5/USBFS_episr.c ****             if (USBFS_GET_EP_TYPE(USBFS_EP5) != USBFS_EP_TYPE_ISOC)
 396:Generated_Source\PSoC5/USBFS_episr.c ****             {
 397:Generated_Source\PSoC5/USBFS_episr.c ****                 USBFS_EP[USBFS_EP5].epToggle ^= USBFS_EPX_CNT_DATA_TOGGLE;
 398:Generated_Source\PSoC5/USBFS_episr.c ****             }
 399:Generated_Source\PSoC5/USBFS_episr.c **** 
 400:Generated_Source\PSoC5/USBFS_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
 401:Generated_Source\PSoC5/USBFS_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
 402:Generated_Source\PSoC5/USBFS_episr.c ****             * Because last chunk of data is being copied.
 403:Generated_Source\PSoC5/USBFS_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
 404:Generated_Source\PSoC5/USBFS_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
 405:Generated_Source\PSoC5/USBFS_episr.c ****             */
 406:Generated_Source\PSoC5/USBFS_episr.c ****             USBFS_EP[USBFS_EP5].apiEpState = USBFS_EVENT_PENDING;
 407:Generated_Source\PSoC5/USBFS_episr.c ****         }
 408:Generated_Source\PSoC5/USBFS_episr.c **** 
 409:Generated_Source\PSoC5/USBFS_episr.c ****     #if (!(CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO))        
 410:Generated_Source\PSoC5/USBFS_episr.c ****         #if (defined(USBFS_ENABLE_MIDI_STREAMING) && \
 411:Generated_Source\PSoC5/USBFS_episr.c ****             !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 412:Generated_Source\PSoC5/USBFS_episr.c ****             if (USBFS_midi_out_ep == USBFS_EP5)
 413:Generated_Source\PSoC5/USBFS_episr.c ****             {
 414:Generated_Source\PSoC5/USBFS_episr.c ****                 USBFS_MIDI_OUT_Service();
 415:Generated_Source\PSoC5/USBFS_episr.c ****             }
 416:Generated_Source\PSoC5/USBFS_episr.c ****         #endif /* (USBFS_ISR_SERVICE_MIDI_OUT) */
 417:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (!(CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO)) */
 418:Generated_Source\PSoC5/USBFS_episr.c **** 
 419:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#START EP5_END_USER_CODE` Place your code here */
 420:Generated_Source\PSoC5/USBFS_episr.c **** 
 421:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#END` */
 422:Generated_Source\PSoC5/USBFS_episr.c **** 
 423:Generated_Source\PSoC5/USBFS_episr.c ****     #ifdef USBFS_EP_5_ISR_EXIT_CALLBACK
 424:Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_EP_5_ISR_ExitCallback();
 425:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_EP_5_ISR_EXIT_CALLBACK) */
 426:Generated_Source\PSoC5/USBFS_episr.c **** 
 427:Generated_Source\PSoC5/USBFS_episr.c ****     #if (CY_PSOC3 && defined(USBFS_ENABLE_MIDI_STREAMING) && \
 428:Generated_Source\PSoC5/USBFS_episr.c ****         !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 429:Generated_Source\PSoC5/USBFS_episr.c ****         
 430:Generated_Source\PSoC5/USBFS_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 431:Generated_Source\PSoC5/USBFS_episr.c ****         }
 432:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (CY_PSOC3 && USBFS_ISR_SERVICE_MIDI_OUT) */
 433:Generated_Source\PSoC5/USBFS_episr.c ****     }
 434:Generated_Source\PSoC5/USBFS_episr.c **** #endif /* (USBFS_EP5_ISR_ACTIVE) */
 435:Generated_Source\PSoC5/USBFS_episr.c **** 
 436:Generated_Source\PSoC5/USBFS_episr.c **** 
 437:Generated_Source\PSoC5/USBFS_episr.c **** #if (USBFS_EP6_ISR_ACTIVE)
 438:Generated_Source\PSoC5/USBFS_episr.c ****     /*******************************************************************************
 439:Generated_Source\PSoC5/USBFS_episr.c ****     * Function Name: USBFS_EP_6_ISR
 440:Generated_Source\PSoC5/USBFS_episr.c ****     ****************************************************************************//**
 441:Generated_Source\PSoC5/USBFS_episr.c ****     *
 442:Generated_Source\PSoC5/USBFS_episr.c ****     *  Endpoint 6 Interrupt Service Routine.
 443:Generated_Source\PSoC5/USBFS_episr.c ****     *
 444:Generated_Source\PSoC5/USBFS_episr.c ****     *
 445:Generated_Source\PSoC5/USBFS_episr.c ****     *******************************************************************************/
 446:Generated_Source\PSoC5/USBFS_episr.c ****     CY_ISR(USBFS_EP_6_ISR)
 447:Generated_Source\PSoC5/USBFS_episr.c ****     {
ARM GAS  C:\Users\BRIAN~1.SEA\AppData\Local\Temp\ccVes72R.s 			page 11


 448:Generated_Source\PSoC5/USBFS_episr.c ****     #ifdef USBFS_EP_6_ISR_ENTRY_CALLBACK
 449:Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_EP_6_ISR_EntryCallback();
 450:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_EP_6_ISR_ENTRY_CALLBACK) */
 451:Generated_Source\PSoC5/USBFS_episr.c **** 
 452:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#START EP6_USER_CODE` Place your code here */
 453:Generated_Source\PSoC5/USBFS_episr.c **** 
 454:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#END` */
 455:Generated_Source\PSoC5/USBFS_episr.c **** 
 456:Generated_Source\PSoC5/USBFS_episr.c ****     #if (CY_PSOC3 && defined(USBFS_ENABLE_MIDI_STREAMING) && \
 457:Generated_Source\PSoC5/USBFS_episr.c ****         !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 458:Generated_Source\PSoC5/USBFS_episr.c ****         {
 459:Generated_Source\PSoC5/USBFS_episr.c ****             uint8 intEn = EA;
 460:Generated_Source\PSoC5/USBFS_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
 461:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (CY_PSOC3 && USBFS_ISR_SERVICE_MIDI_OUT) */
 462:Generated_Source\PSoC5/USBFS_episr.c **** 
 463:Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_ClearSieEpInterruptSource(USBFS_SIE_INT_EP6_INTR);
 464:Generated_Source\PSoC5/USBFS_episr.c ****         
 465:Generated_Source\PSoC5/USBFS_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
 466:Generated_Source\PSoC5/USBFS_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
 467:Generated_Source\PSoC5/USBFS_episr.c ****         * OUT endpoint: data is ready to read from endpoint buffer. 
 468:Generated_Source\PSoC5/USBFS_episr.c ****         */
 469:Generated_Source\PSoC5/USBFS_episr.c ****     #if (CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO)
 470:Generated_Source\PSoC5/USBFS_episr.c ****         if (0u != (USBFS_EP[USBFS_EP6].addr & USBFS_DIR_IN))
 471:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_EP_MANAGEMENT_DMA_AUTO) */
 472:Generated_Source\PSoC5/USBFS_episr.c ****         {
 473:Generated_Source\PSoC5/USBFS_episr.c ****             /* Read CR0 register to clear SIE lock. */
 474:Generated_Source\PSoC5/USBFS_episr.c ****             (void) USBFS_SIE_EP_BASE.sieEp[USBFS_EP6].epCr0;
 475:Generated_Source\PSoC5/USBFS_episr.c **** 
 476:Generated_Source\PSoC5/USBFS_episr.c ****             /* Toggle all endpoint types except ISOC. */
 477:Generated_Source\PSoC5/USBFS_episr.c ****             if (USBFS_GET_EP_TYPE(USBFS_EP6) != USBFS_EP_TYPE_ISOC)
 478:Generated_Source\PSoC5/USBFS_episr.c ****             {
 479:Generated_Source\PSoC5/USBFS_episr.c ****                 USBFS_EP[USBFS_EP6].epToggle ^= USBFS_EPX_CNT_DATA_TOGGLE;
 480:Generated_Source\PSoC5/USBFS_episr.c ****             }
 481:Generated_Source\PSoC5/USBFS_episr.c ****             
 482:Generated_Source\PSoC5/USBFS_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
 483:Generated_Source\PSoC5/USBFS_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
 484:Generated_Source\PSoC5/USBFS_episr.c ****             * Because last chunk of data is being copied.
 485:Generated_Source\PSoC5/USBFS_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
 486:Generated_Source\PSoC5/USBFS_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
 487:Generated_Source\PSoC5/USBFS_episr.c ****             */
 488:Generated_Source\PSoC5/USBFS_episr.c ****             USBFS_EP[USBFS_EP6].apiEpState = USBFS_EVENT_PENDING;
 489:Generated_Source\PSoC5/USBFS_episr.c ****         }
 490:Generated_Source\PSoC5/USBFS_episr.c **** 
 491:Generated_Source\PSoC5/USBFS_episr.c ****     #if (!(CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO))
 492:Generated_Source\PSoC5/USBFS_episr.c ****         #if (defined(USBFS_ENABLE_MIDI_STREAMING) && \
 493:Generated_Source\PSoC5/USBFS_episr.c ****             !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 494:Generated_Source\PSoC5/USBFS_episr.c ****             if (USBFS_midi_out_ep == USBFS_EP6)
 495:Generated_Source\PSoC5/USBFS_episr.c ****             {
 496:Generated_Source\PSoC5/USBFS_episr.c ****                 USBFS_MIDI_OUT_Service();
 497:Generated_Source\PSoC5/USBFS_episr.c ****             }
 498:Generated_Source\PSoC5/USBFS_episr.c ****         #endif /* (USBFS_ISR_SERVICE_MIDI_OUT) */
 499:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (!(CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO)) */
 500:Generated_Source\PSoC5/USBFS_episr.c **** 
 501:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#START EP6_END_USER_CODE` Place your code here */
 502:Generated_Source\PSoC5/USBFS_episr.c **** 
 503:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#END` */
 504:Generated_Source\PSoC5/USBFS_episr.c **** 
ARM GAS  C:\Users\BRIAN~1.SEA\AppData\Local\Temp\ccVes72R.s 			page 12


 505:Generated_Source\PSoC5/USBFS_episr.c ****     #ifdef USBFS_EP_6_ISR_EXIT_CALLBACK
 506:Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_EP_6_ISR_ExitCallback();
 507:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_EP_6_ISR_EXIT_CALLBACK) */
 508:Generated_Source\PSoC5/USBFS_episr.c **** 
 509:Generated_Source\PSoC5/USBFS_episr.c ****     #if (CY_PSOC3 && defined(USBFS_ENABLE_MIDI_STREAMING) && \
 510:Generated_Source\PSoC5/USBFS_episr.c ****         !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 511:Generated_Source\PSoC5/USBFS_episr.c ****         
 512:Generated_Source\PSoC5/USBFS_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 513:Generated_Source\PSoC5/USBFS_episr.c ****         }
 514:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (CY_PSOC3 && USBFS_ISR_SERVICE_MIDI_OUT) */
 515:Generated_Source\PSoC5/USBFS_episr.c ****     }
 516:Generated_Source\PSoC5/USBFS_episr.c **** #endif /* (USBFS_EP6_ISR_ACTIVE) */
 517:Generated_Source\PSoC5/USBFS_episr.c **** 
 518:Generated_Source\PSoC5/USBFS_episr.c **** 
 519:Generated_Source\PSoC5/USBFS_episr.c **** #if (USBFS_EP7_ISR_ACTIVE)
 520:Generated_Source\PSoC5/USBFS_episr.c ****     /*******************************************************************************
 521:Generated_Source\PSoC5/USBFS_episr.c ****     * Function Name: USBFS_EP_7_ISR
 522:Generated_Source\PSoC5/USBFS_episr.c ****     ****************************************************************************//**
 523:Generated_Source\PSoC5/USBFS_episr.c ****     *
 524:Generated_Source\PSoC5/USBFS_episr.c ****     *  Endpoint 7 Interrupt Service Routine.
 525:Generated_Source\PSoC5/USBFS_episr.c ****     *
 526:Generated_Source\PSoC5/USBFS_episr.c ****     *
 527:Generated_Source\PSoC5/USBFS_episr.c ****     *******************************************************************************/
 528:Generated_Source\PSoC5/USBFS_episr.c ****     CY_ISR(USBFS_EP_7_ISR)
 529:Generated_Source\PSoC5/USBFS_episr.c ****     {
 530:Generated_Source\PSoC5/USBFS_episr.c ****     #ifdef USBFS_EP_7_ISR_ENTRY_CALLBACK
 531:Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_EP_7_ISR_EntryCallback();
 532:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_EP_7_ISR_ENTRY_CALLBACK) */
 533:Generated_Source\PSoC5/USBFS_episr.c **** 
 534:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#START EP7_USER_CODE` Place your code here */
 535:Generated_Source\PSoC5/USBFS_episr.c **** 
 536:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#END` */
 537:Generated_Source\PSoC5/USBFS_episr.c **** 
 538:Generated_Source\PSoC5/USBFS_episr.c ****     #if (CY_PSOC3 && defined(USBFS_ENABLE_MIDI_STREAMING) && \
 539:Generated_Source\PSoC5/USBFS_episr.c ****         !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 540:Generated_Source\PSoC5/USBFS_episr.c ****         {
 541:Generated_Source\PSoC5/USBFS_episr.c ****             uint8 intEn = EA;
 542:Generated_Source\PSoC5/USBFS_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
 543:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (CY_PSOC3 && USBFS_ISR_SERVICE_MIDI_OUT) */
 544:Generated_Source\PSoC5/USBFS_episr.c ****     
 545:Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_ClearSieEpInterruptSource(USBFS_SIE_INT_EP7_INTR);
 546:Generated_Source\PSoC5/USBFS_episr.c ****         
 547:Generated_Source\PSoC5/USBFS_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
 548:Generated_Source\PSoC5/USBFS_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
 549:Generated_Source\PSoC5/USBFS_episr.c ****         * OUT endpoint: data is ready to read from endpoint buffer. 
 550:Generated_Source\PSoC5/USBFS_episr.c ****         */
 551:Generated_Source\PSoC5/USBFS_episr.c ****     #if (CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO)
 552:Generated_Source\PSoC5/USBFS_episr.c ****         if (0u != (USBFS_EP[USBFS_EP7].addr & USBFS_DIR_IN))
 553:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_EP_MANAGEMENT_DMA_AUTO) */
 554:Generated_Source\PSoC5/USBFS_episr.c ****         {           
 555:Generated_Source\PSoC5/USBFS_episr.c ****             /* Read CR0 register to clear SIE lock. */
 556:Generated_Source\PSoC5/USBFS_episr.c ****             (void) USBFS_SIE_EP_BASE.sieEp[USBFS_EP7].epCr0;
 557:Generated_Source\PSoC5/USBFS_episr.c **** 
 558:Generated_Source\PSoC5/USBFS_episr.c ****             /* Toggle all endpoint types except ISOC. */
 559:Generated_Source\PSoC5/USBFS_episr.c ****             if (USBFS_GET_EP_TYPE(USBFS_EP7) != USBFS_EP_TYPE_ISOC)
 560:Generated_Source\PSoC5/USBFS_episr.c ****             {
 561:Generated_Source\PSoC5/USBFS_episr.c ****                 USBFS_EP[USBFS_EP7].epToggle ^= USBFS_EPX_CNT_DATA_TOGGLE;
ARM GAS  C:\Users\BRIAN~1.SEA\AppData\Local\Temp\ccVes72R.s 			page 13


 562:Generated_Source\PSoC5/USBFS_episr.c ****             }
 563:Generated_Source\PSoC5/USBFS_episr.c ****             
 564:Generated_Source\PSoC5/USBFS_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
 565:Generated_Source\PSoC5/USBFS_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
 566:Generated_Source\PSoC5/USBFS_episr.c ****             * Because last chunk of data is being copied.
 567:Generated_Source\PSoC5/USBFS_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
 568:Generated_Source\PSoC5/USBFS_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
 569:Generated_Source\PSoC5/USBFS_episr.c ****             */
 570:Generated_Source\PSoC5/USBFS_episr.c ****             USBFS_EP[USBFS_EP7].apiEpState = USBFS_EVENT_PENDING;
 571:Generated_Source\PSoC5/USBFS_episr.c ****         }
 572:Generated_Source\PSoC5/USBFS_episr.c **** 
 573:Generated_Source\PSoC5/USBFS_episr.c **** 
 574:Generated_Source\PSoC5/USBFS_episr.c ****     #if (!(CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO))
 575:Generated_Source\PSoC5/USBFS_episr.c ****         #if (defined(USBFS_ENABLE_MIDI_STREAMING) && \
 576:Generated_Source\PSoC5/USBFS_episr.c ****             !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 577:Generated_Source\PSoC5/USBFS_episr.c ****             if(USBFS_midi_out_ep == USBFS_EP7)
 578:Generated_Source\PSoC5/USBFS_episr.c ****             {
 579:Generated_Source\PSoC5/USBFS_episr.c ****                 USBFS_MIDI_OUT_Service();
 580:Generated_Source\PSoC5/USBFS_episr.c ****             }
 581:Generated_Source\PSoC5/USBFS_episr.c ****         #endif /* (USBFS_ISR_SERVICE_MIDI_OUT) */
 582:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (!(CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO)) */
 583:Generated_Source\PSoC5/USBFS_episr.c **** 
 584:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#START EP7_END_USER_CODE` Place your code here */
 585:Generated_Source\PSoC5/USBFS_episr.c **** 
 586:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#END` */
 587:Generated_Source\PSoC5/USBFS_episr.c **** 
 588:Generated_Source\PSoC5/USBFS_episr.c ****     #ifdef USBFS_EP_7_ISR_EXIT_CALLBACK
 589:Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_EP_7_ISR_ExitCallback();
 590:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_EP_7_ISR_EXIT_CALLBACK) */
 591:Generated_Source\PSoC5/USBFS_episr.c **** 
 592:Generated_Source\PSoC5/USBFS_episr.c ****     #if (CY_PSOC3 && defined(USBFS_ENABLE_MIDI_STREAMING) && \
 593:Generated_Source\PSoC5/USBFS_episr.c ****         !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 594:Generated_Source\PSoC5/USBFS_episr.c ****         
 595:Generated_Source\PSoC5/USBFS_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 596:Generated_Source\PSoC5/USBFS_episr.c ****         }
 597:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (CY_PSOC3 && USBFS_ISR_SERVICE_MIDI_OUT) */
 598:Generated_Source\PSoC5/USBFS_episr.c ****     }
 599:Generated_Source\PSoC5/USBFS_episr.c **** #endif /* (USBFS_EP7_ISR_ACTIVE) */
 600:Generated_Source\PSoC5/USBFS_episr.c **** 
 601:Generated_Source\PSoC5/USBFS_episr.c **** 
 602:Generated_Source\PSoC5/USBFS_episr.c **** #if (USBFS_EP8_ISR_ACTIVE)
 603:Generated_Source\PSoC5/USBFS_episr.c ****     /*******************************************************************************
 604:Generated_Source\PSoC5/USBFS_episr.c ****     * Function Name: USBFS_EP_8_ISR
 605:Generated_Source\PSoC5/USBFS_episr.c ****     ****************************************************************************//**
 606:Generated_Source\PSoC5/USBFS_episr.c ****     *
 607:Generated_Source\PSoC5/USBFS_episr.c ****     *  Endpoint 8 Interrupt Service Routine
 608:Generated_Source\PSoC5/USBFS_episr.c ****     *
 609:Generated_Source\PSoC5/USBFS_episr.c ****     *
 610:Generated_Source\PSoC5/USBFS_episr.c ****     *******************************************************************************/
 611:Generated_Source\PSoC5/USBFS_episr.c ****     CY_ISR(USBFS_EP_8_ISR)
 612:Generated_Source\PSoC5/USBFS_episr.c ****     {
 613:Generated_Source\PSoC5/USBFS_episr.c ****     #ifdef USBFS_EP_8_ISR_ENTRY_CALLBACK
 614:Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_EP_8_ISR_EntryCallback();
 615:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_EP_8_ISR_ENTRY_CALLBACK) */
 616:Generated_Source\PSoC5/USBFS_episr.c **** 
 617:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#START EP8_USER_CODE` Place your code here */
 618:Generated_Source\PSoC5/USBFS_episr.c **** 
ARM GAS  C:\Users\BRIAN~1.SEA\AppData\Local\Temp\ccVes72R.s 			page 14


 619:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#END` */
 620:Generated_Source\PSoC5/USBFS_episr.c **** 
 621:Generated_Source\PSoC5/USBFS_episr.c ****     #if (CY_PSOC3 && defined(USBFS_ENABLE_MIDI_STREAMING) && \
 622:Generated_Source\PSoC5/USBFS_episr.c ****         !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 623:Generated_Source\PSoC5/USBFS_episr.c ****         {
 624:Generated_Source\PSoC5/USBFS_episr.c ****             uint8 intEn = EA;
 625:Generated_Source\PSoC5/USBFS_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
 626:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (CY_PSOC3 && USBFS_ISR_SERVICE_MIDI_OUT) */
 627:Generated_Source\PSoC5/USBFS_episr.c **** 
 628:Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_ClearSieEpInterruptSource(USBFS_SIE_INT_EP8_INTR);
 629:Generated_Source\PSoC5/USBFS_episr.c ****         
 630:Generated_Source\PSoC5/USBFS_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
 631:Generated_Source\PSoC5/USBFS_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
 632:Generated_Source\PSoC5/USBFS_episr.c ****         * OUT endpoint: data is ready to read from endpoint buffer. 
 633:Generated_Source\PSoC5/USBFS_episr.c ****         */
 634:Generated_Source\PSoC5/USBFS_episr.c ****     #if (CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO)
 635:Generated_Source\PSoC5/USBFS_episr.c ****         if (0u != (USBFS_EP[USBFS_EP8].addr & USBFS_DIR_IN))
 636:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_EP_MANAGEMENT_DMA_AUTO) */
 637:Generated_Source\PSoC5/USBFS_episr.c ****         {
 638:Generated_Source\PSoC5/USBFS_episr.c ****             /* Read CR0 register to clear SIE lock. */
 639:Generated_Source\PSoC5/USBFS_episr.c ****             (void) USBFS_SIE_EP_BASE.sieEp[USBFS_EP8].epCr0;
 640:Generated_Source\PSoC5/USBFS_episr.c **** 
 641:Generated_Source\PSoC5/USBFS_episr.c ****             /* Toggle all endpoint types except ISOC. */
 642:Generated_Source\PSoC5/USBFS_episr.c ****             if (USBFS_GET_EP_TYPE(USBFS_EP8) != USBFS_EP_TYPE_ISOC)
 643:Generated_Source\PSoC5/USBFS_episr.c ****             {
 644:Generated_Source\PSoC5/USBFS_episr.c ****                 USBFS_EP[USBFS_EP8].epToggle ^= USBFS_EPX_CNT_DATA_TOGGLE;
 645:Generated_Source\PSoC5/USBFS_episr.c ****             }
 646:Generated_Source\PSoC5/USBFS_episr.c **** 
 647:Generated_Source\PSoC5/USBFS_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
 648:Generated_Source\PSoC5/USBFS_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
 649:Generated_Source\PSoC5/USBFS_episr.c ****             * Because last chunk of data is being copied.
 650:Generated_Source\PSoC5/USBFS_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
 651:Generated_Source\PSoC5/USBFS_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
 652:Generated_Source\PSoC5/USBFS_episr.c ****             */
 653:Generated_Source\PSoC5/USBFS_episr.c ****             USBFS_EP[USBFS_EP8].apiEpState = USBFS_EVENT_PENDING;
 654:Generated_Source\PSoC5/USBFS_episr.c ****         }
 655:Generated_Source\PSoC5/USBFS_episr.c **** 
 656:Generated_Source\PSoC5/USBFS_episr.c ****     #if (!(CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO))
 657:Generated_Source\PSoC5/USBFS_episr.c ****         #if (defined(USBFS_ENABLE_MIDI_STREAMING) && \
 658:Generated_Source\PSoC5/USBFS_episr.c ****             !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 659:Generated_Source\PSoC5/USBFS_episr.c ****             if (USBFS_midi_out_ep == USBFS_EP8)
 660:Generated_Source\PSoC5/USBFS_episr.c ****             {
 661:Generated_Source\PSoC5/USBFS_episr.c ****                 USBFS_MIDI_OUT_Service();
 662:Generated_Source\PSoC5/USBFS_episr.c ****             }
 663:Generated_Source\PSoC5/USBFS_episr.c ****         #endif /* (USBFS_ISR_SERVICE_MIDI_OUT) */
 664:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (!(CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO)) */
 665:Generated_Source\PSoC5/USBFS_episr.c **** 
 666:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#START EP8_END_USER_CODE` Place your code here */
 667:Generated_Source\PSoC5/USBFS_episr.c **** 
 668:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#END` */
 669:Generated_Source\PSoC5/USBFS_episr.c **** 
 670:Generated_Source\PSoC5/USBFS_episr.c ****     #ifdef USBFS_EP_8_ISR_EXIT_CALLBACK
 671:Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_EP_8_ISR_ExitCallback();
 672:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_EP_8_ISR_EXIT_CALLBACK) */
 673:Generated_Source\PSoC5/USBFS_episr.c **** 
 674:Generated_Source\PSoC5/USBFS_episr.c ****     #if (CY_PSOC3 && defined(USBFS_ENABLE_MIDI_STREAMING) && \
 675:Generated_Source\PSoC5/USBFS_episr.c ****         !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
ARM GAS  C:\Users\BRIAN~1.SEA\AppData\Local\Temp\ccVes72R.s 			page 15


 676:Generated_Source\PSoC5/USBFS_episr.c ****         
 677:Generated_Source\PSoC5/USBFS_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 678:Generated_Source\PSoC5/USBFS_episr.c ****         }
 679:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (CY_PSOC3 && USBFS_ISR_SERVICE_MIDI_OUT) */
 680:Generated_Source\PSoC5/USBFS_episr.c ****     }
 681:Generated_Source\PSoC5/USBFS_episr.c **** #endif /* (USBFS_EP8_ISR_ACTIVE) */
 682:Generated_Source\PSoC5/USBFS_episr.c **** 
 683:Generated_Source\PSoC5/USBFS_episr.c **** 
 684:Generated_Source\PSoC5/USBFS_episr.c **** #if (USBFS_SOF_ISR_ACTIVE)
 685:Generated_Source\PSoC5/USBFS_episr.c ****     /*******************************************************************************
 686:Generated_Source\PSoC5/USBFS_episr.c ****     * Function Name: USBFS_SOF_ISR
 687:Generated_Source\PSoC5/USBFS_episr.c ****     ****************************************************************************//**
 688:Generated_Source\PSoC5/USBFS_episr.c ****     *
 689:Generated_Source\PSoC5/USBFS_episr.c ****     *  Start of Frame Interrupt Service Routine.
 690:Generated_Source\PSoC5/USBFS_episr.c ****     *
 691:Generated_Source\PSoC5/USBFS_episr.c ****     *
 692:Generated_Source\PSoC5/USBFS_episr.c ****     *******************************************************************************/
 693:Generated_Source\PSoC5/USBFS_episr.c ****     CY_ISR(USBFS_SOF_ISR)
 694:Generated_Source\PSoC5/USBFS_episr.c ****     {
 124              		.loc 1 694 0
 125              		.cfi_startproc
 126              		@ args = 0, pretend = 0, frame = 0
 127              		@ frame_needed = 0, uses_anonymous_args = 0
 128              		@ link register save eliminated.
 129 0000 7047     		bx	lr
 130              		.cfi_endproc
 131              	.LFE2:
 132              		.size	USBFS_SOF_ISR, .-USBFS_SOF_ISR
 133 0002 00BF     		.section	.text.USBFS_BUS_RESET_ISR,"ax",%progbits
 134              		.align	2
 135              		.global	USBFS_BUS_RESET_ISR
 136              		.thumb
 137              		.thumb_func
 138              		.type	USBFS_BUS_RESET_ISR, %function
 139              	USBFS_BUS_RESET_ISR:
 140              	.LFB3:
 695:Generated_Source\PSoC5/USBFS_episr.c ****     #ifdef USBFS_SOF_ISR_ENTRY_CALLBACK
 696:Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_SOF_ISR_EntryCallback();
 697:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_SOF_ISR_ENTRY_CALLBACK) */
 698:Generated_Source\PSoC5/USBFS_episr.c **** 
 699:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#START SOF_USER_CODE` Place your code here */
 700:Generated_Source\PSoC5/USBFS_episr.c **** 
 701:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#END` */
 702:Generated_Source\PSoC5/USBFS_episr.c **** 
 703:Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_ClearSieInterruptSource(USBFS_INTR_SIE_SOF_INTR);
 704:Generated_Source\PSoC5/USBFS_episr.c **** 
 705:Generated_Source\PSoC5/USBFS_episr.c ****     #ifdef USBFS_SOF_ISR_EXIT_CALLBACK
 706:Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_SOF_ISR_ExitCallback();
 707:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_SOF_ISR_EXIT_CALLBACK) */
 708:Generated_Source\PSoC5/USBFS_episr.c ****     }
 709:Generated_Source\PSoC5/USBFS_episr.c **** #endif /* (USBFS_SOF_ISR_ACTIVE) */
 710:Generated_Source\PSoC5/USBFS_episr.c **** 
 711:Generated_Source\PSoC5/USBFS_episr.c **** 
 712:Generated_Source\PSoC5/USBFS_episr.c **** #if (USBFS_BUS_RESET_ISR_ACTIVE)
 713:Generated_Source\PSoC5/USBFS_episr.c **** /*******************************************************************************
 714:Generated_Source\PSoC5/USBFS_episr.c **** * Function Name: USBFS_BUS_RESET_ISR
 715:Generated_Source\PSoC5/USBFS_episr.c **** ****************************************************************************//**
ARM GAS  C:\Users\BRIAN~1.SEA\AppData\Local\Temp\ccVes72R.s 			page 16


 716:Generated_Source\PSoC5/USBFS_episr.c **** *
 717:Generated_Source\PSoC5/USBFS_episr.c **** *  USB Bus Reset Interrupt Service Routine.  Calls _Start with the same
 718:Generated_Source\PSoC5/USBFS_episr.c **** *  parameters as the last USER call to _Start
 719:Generated_Source\PSoC5/USBFS_episr.c **** *
 720:Generated_Source\PSoC5/USBFS_episr.c **** *
 721:Generated_Source\PSoC5/USBFS_episr.c **** *******************************************************************************/
 722:Generated_Source\PSoC5/USBFS_episr.c **** CY_ISR(USBFS_BUS_RESET_ISR)
 723:Generated_Source\PSoC5/USBFS_episr.c **** {
 141              		.loc 1 723 0
 142              		.cfi_startproc
 143              		@ args = 0, pretend = 0, frame = 0
 144              		@ frame_needed = 0, uses_anonymous_args = 0
 145              		.loc 1 723 0
 146 0000 08B5     		push	{r3, lr}
 147              		.cfi_def_cfa_offset 8
 148              		.cfi_offset 3, -8
 149              		.cfi_offset 14, -4
 724:Generated_Source\PSoC5/USBFS_episr.c **** #ifdef USBFS_BUS_RESET_ISR_ENTRY_CALLBACK
 725:Generated_Source\PSoC5/USBFS_episr.c ****     USBFS_BUS_RESET_ISR_EntryCallback();
 726:Generated_Source\PSoC5/USBFS_episr.c **** #endif /* (USBFS_BUS_RESET_ISR_ENTRY_CALLBACK) */
 727:Generated_Source\PSoC5/USBFS_episr.c **** 
 728:Generated_Source\PSoC5/USBFS_episr.c ****     /* `#START BUS_RESET_USER_CODE` Place your code here */
 729:Generated_Source\PSoC5/USBFS_episr.c **** 
 730:Generated_Source\PSoC5/USBFS_episr.c ****     /* `#END` */
 731:Generated_Source\PSoC5/USBFS_episr.c **** 
 732:Generated_Source\PSoC5/USBFS_episr.c ****     USBFS_ClearSieInterruptSource(USBFS_INTR_SIE_BUS_RESET_INTR);
 733:Generated_Source\PSoC5/USBFS_episr.c **** 
 734:Generated_Source\PSoC5/USBFS_episr.c ****     USBFS_ReInitComponent();
 150              		.loc 1 734 0
 151 0002 FFF7FEFF 		bl	USBFS_ReInitComponent
 152              	.LVL1:
 153 0006 08BD     		pop	{r3, pc}
 154              		.cfi_endproc
 155              	.LFE3:
 156              		.size	USBFS_BUS_RESET_ISR, .-USBFS_BUS_RESET_ISR
 157              		.text
 158              	.Letext0:
 159              		.file 2 "Generated_Source\\PSoC5\\cytypes.h"
 160              		.file 3 "Generated_Source\\PSoC5\\USBFS.h"
 161              		.file 4 "./cyapicallbacks.h"
 162              		.file 5 "Generated_Source\\PSoC5\\USBFS_pvt.h"
 163              		.section	.debug_info,"",%progbits
 164              	.Ldebug_info0:
 165 0000 56020000 		.4byte	0x256
 166 0004 0400     		.2byte	0x4
 167 0006 00000000 		.4byte	.Ldebug_abbrev0
 168 000a 04       		.byte	0x4
 169 000b 01       		.uleb128 0x1
 170 000c AF000000 		.4byte	.LASF39
 171 0010 0C       		.byte	0xc
 172 0011 35000000 		.4byte	.LASF40
 173 0015 64020000 		.4byte	.LASF41
 174 0019 00000000 		.4byte	.Ldebug_ranges0+0
 175 001d 00000000 		.4byte	0
 176 0021 00000000 		.4byte	.Ldebug_line0
 177 0025 02       		.uleb128 0x2
 178 0026 01       		.byte	0x1
ARM GAS  C:\Users\BRIAN~1.SEA\AppData\Local\Temp\ccVes72R.s 			page 17


 179 0027 06       		.byte	0x6
 180 0028 E2020000 		.4byte	.LASF0
 181 002c 02       		.uleb128 0x2
 182 002d 01       		.byte	0x1
 183 002e 08       		.byte	0x8
 184 002f A1000000 		.4byte	.LASF1
 185 0033 02       		.uleb128 0x2
 186 0034 02       		.byte	0x2
 187 0035 05       		.byte	0x5
 188 0036 4A020000 		.4byte	.LASF2
 189 003a 02       		.uleb128 0x2
 190 003b 02       		.byte	0x2
 191 003c 07       		.byte	0x7
 192 003d 22000000 		.4byte	.LASF3
 193 0041 02       		.uleb128 0x2
 194 0042 04       		.byte	0x4
 195 0043 05       		.byte	0x5
 196 0044 BE020000 		.4byte	.LASF4
 197 0048 02       		.uleb128 0x2
 198 0049 04       		.byte	0x4
 199 004a 07       		.byte	0x7
 200 004b 4D010000 		.4byte	.LASF5
 201 004f 02       		.uleb128 0x2
 202 0050 08       		.byte	0x8
 203 0051 05       		.byte	0x5
 204 0052 2C020000 		.4byte	.LASF6
 205 0056 02       		.uleb128 0x2
 206 0057 08       		.byte	0x8
 207 0058 07       		.byte	0x7
 208 0059 E5010000 		.4byte	.LASF7
 209 005d 03       		.uleb128 0x3
 210 005e 04       		.byte	0x4
 211 005f 05       		.byte	0x5
 212 0060 696E7400 		.ascii	"int\000"
 213 0064 02       		.uleb128 0x2
 214 0065 04       		.byte	0x4
 215 0066 07       		.byte	0x7
 216 0067 D8010000 		.4byte	.LASF8
 217 006b 04       		.uleb128 0x4
 218 006c 54020000 		.4byte	.LASF9
 219 0070 02       		.byte	0x2
 220 0071 B4       		.byte	0xb4
 221 0072 2C000000 		.4byte	0x2c
 222 0076 04       		.uleb128 0x4
 223 0077 A7010000 		.4byte	.LASF10
 224 007b 02       		.byte	0x2
 225 007c B5       		.byte	0xb5
 226 007d 3A000000 		.4byte	0x3a
 227 0081 02       		.uleb128 0x2
 228 0082 04       		.byte	0x4
 229 0083 04       		.byte	0x4
 230 0084 1C000000 		.4byte	.LASF11
 231 0088 02       		.uleb128 0x2
 232 0089 08       		.byte	0x8
 233 008a 04       		.byte	0x4
 234 008b 81010000 		.4byte	.LASF12
 235 008f 02       		.uleb128 0x2
ARM GAS  C:\Users\BRIAN~1.SEA\AppData\Local\Temp\ccVes72R.s 			page 18


 236 0090 01       		.byte	0x1
 237 0091 08       		.byte	0x8
 238 0092 3A020000 		.4byte	.LASF13
 239 0096 05       		.uleb128 0x5
 240 0097 3D010000 		.4byte	.LASF14
 241 009b 02       		.byte	0x2
 242 009c 5E01     		.2byte	0x15e
 243 009e A2000000 		.4byte	0xa2
 244 00a2 06       		.uleb128 0x6
 245 00a3 6B000000 		.4byte	0x6b
 246 00a7 02       		.uleb128 0x2
 247 00a8 08       		.byte	0x8
 248 00a9 04       		.byte	0x4
 249 00aa D6020000 		.4byte	.LASF15
 250 00ae 02       		.uleb128 0x2
 251 00af 04       		.byte	0x4
 252 00b0 07       		.byte	0x7
 253 00b1 15020000 		.4byte	.LASF16
 254 00b5 07       		.uleb128 0x7
 255 00b6 0C       		.byte	0xc
 256 00b7 03       		.byte	0x3
 257 00b8 92       		.byte	0x92
 258 00b9 2A010000 		.4byte	0x12a
 259 00bd 08       		.uleb128 0x8
 260 00be 1E020000 		.4byte	.LASF17
 261 00c2 03       		.byte	0x3
 262 00c3 94       		.byte	0x94
 263 00c4 6B000000 		.4byte	0x6b
 264 00c8 00       		.byte	0
 265 00c9 08       		.uleb128 0x8
 266 00ca 42010000 		.4byte	.LASF18
 267 00ce 03       		.byte	0x3
 268 00cf 95       		.byte	0x95
 269 00d0 6B000000 		.4byte	0x6b
 270 00d4 01       		.byte	0x1
 271 00d5 08       		.uleb128 0x8
 272 00d6 FC010000 		.4byte	.LASF19
 273 00da 03       		.byte	0x3
 274 00db 96       		.byte	0x96
 275 00dc 6B000000 		.4byte	0x6b
 276 00e0 02       		.byte	0x2
 277 00e1 08       		.uleb128 0x8
 278 00e2 98000000 		.4byte	.LASF20
 279 00e6 03       		.byte	0x3
 280 00e7 97       		.byte	0x97
 281 00e8 6B000000 		.4byte	0x6b
 282 00ec 03       		.byte	0x3
 283 00ed 08       		.uleb128 0x8
 284 00ee 5F010000 		.4byte	.LASF21
 285 00f2 03       		.byte	0x3
 286 00f3 98       		.byte	0x98
 287 00f4 6B000000 		.4byte	0x6b
 288 00f8 04       		.byte	0x4
 289 00f9 08       		.uleb128 0x8
 290 00fa 25020000 		.4byte	.LASF22
 291 00fe 03       		.byte	0x3
 292 00ff 99       		.byte	0x99
ARM GAS  C:\Users\BRIAN~1.SEA\AppData\Local\Temp\ccVes72R.s 			page 19


 293 0100 6B000000 		.4byte	0x6b
 294 0104 05       		.byte	0x5
 295 0105 08       		.uleb128 0x8
 296 0106 9C010000 		.4byte	.LASF23
 297 010a 03       		.byte	0x3
 298 010b 9A       		.byte	0x9a
 299 010c 76000000 		.4byte	0x76
 300 0110 06       		.byte	0x6
 301 0111 08       		.uleb128 0x8
 302 0112 3F020000 		.4byte	.LASF24
 303 0116 03       		.byte	0x3
 304 0117 9B       		.byte	0x9b
 305 0118 76000000 		.4byte	0x76
 306 011c 08       		.byte	0x8
 307 011d 08       		.uleb128 0x8
 308 011e 5A020000 		.4byte	.LASF25
 309 0122 03       		.byte	0x3
 310 0123 9C       		.byte	0x9c
 311 0124 6B000000 		.4byte	0x6b
 312 0128 0A       		.byte	0xa
 313 0129 00       		.byte	0
 314 012a 04       		.uleb128 0x4
 315 012b C3010000 		.4byte	.LASF26
 316 012f 03       		.byte	0x3
 317 0130 9D       		.byte	0x9d
 318 0131 B5000000 		.4byte	0xb5
 319 0135 07       		.uleb128 0x7
 320 0136 10       		.byte	0x10
 321 0137 03       		.byte	0x3
 322 0138 D9       		.byte	0xd9
 323 0139 6E010000 		.4byte	0x16e
 324 013d 08       		.uleb128 0x8
 325 013e 8A000000 		.4byte	.LASF27
 326 0142 03       		.byte	0x3
 327 0143 DB       		.byte	0xdb
 328 0144 6B000000 		.4byte	0x6b
 329 0148 00       		.byte	0
 330 0149 08       		.uleb128 0x8
 331 014a 91000000 		.4byte	.LASF28
 332 014e 03       		.byte	0x3
 333 014f DC       		.byte	0xdc
 334 0150 6B000000 		.4byte	0x6b
 335 0154 01       		.byte	0x1
 336 0155 08       		.uleb128 0x8
 337 0156 16000000 		.4byte	.LASF29
 338 015a 03       		.byte	0x3
 339 015b DD       		.byte	0xdd
 340 015c 6B000000 		.4byte	0x6b
 341 0160 02       		.byte	0x2
 342 0161 09       		.uleb128 0x9
 343 0162 67617000 		.ascii	"gap\000"
 344 0166 03       		.byte	0x3
 345 0167 DE       		.byte	0xde
 346 0168 6E010000 		.4byte	0x16e
 347 016c 03       		.byte	0x3
 348 016d 00       		.byte	0
 349 016e 0A       		.uleb128 0xa
ARM GAS  C:\Users\BRIAN~1.SEA\AppData\Local\Temp\ccVes72R.s 			page 20


 350 016f 6B000000 		.4byte	0x6b
 351 0173 7E010000 		.4byte	0x17e
 352 0177 0B       		.uleb128 0xb
 353 0178 AE000000 		.4byte	0xae
 354 017c 0C       		.byte	0xc
 355 017d 00       		.byte	0
 356 017e 04       		.uleb128 0x4
 357 017f 88010000 		.4byte	.LASF30
 358 0183 03       		.byte	0x3
 359 0184 DF       		.byte	0xdf
 360 0185 35010000 		.4byte	0x135
 361 0189 0C       		.uleb128 0xc
 362 018a 90       		.byte	0x90
 363 018b 03       		.byte	0x3
 364 018c 1301     		.2byte	0x113
 365 018e A0010000 		.4byte	0x1a0
 366 0192 0D       		.uleb128 0xd
 367 0193 72010000 		.4byte	.LASF31
 368 0197 03       		.byte	0x3
 369 0198 1501     		.2byte	0x115
 370 019a A0010000 		.4byte	0x1a0
 371 019e 00       		.byte	0
 372 019f 00       		.byte	0
 373 01a0 0A       		.uleb128 0xa
 374 01a1 7E010000 		.4byte	0x17e
 375 01a5 B0010000 		.4byte	0x1b0
 376 01a9 0B       		.uleb128 0xb
 377 01aa AE000000 		.4byte	0xae
 378 01ae 08       		.byte	0x8
 379 01af 00       		.byte	0
 380 01b0 05       		.uleb128 0x5
 381 01b1 AE010000 		.4byte	.LASF32
 382 01b5 03       		.byte	0x3
 383 01b6 1601     		.2byte	0x116
 384 01b8 89010000 		.4byte	0x189
 385 01bc 0E       		.uleb128 0xe
 386 01bd 06020000 		.4byte	.LASF33
 387 01c1 01       		.byte	0x1
 388 01c2 25       		.byte	0x25
 389 01c3 00000000 		.4byte	.LFB0
 390 01c7 30000000 		.4byte	.LFE0-.LFB0
 391 01cb 01       		.uleb128 0x1
 392 01cc 9C       		.byte	0x9c
 393 01cd 0F       		.uleb128 0xf
 394 01ce C7020000 		.4byte	.LASF35
 395 01d2 01       		.byte	0x1
 396 01d3 78       		.byte	0x78
 397 01d4 00000000 		.4byte	.LFB1
 398 01d8 38000000 		.4byte	.LFE1-.LFB1
 399 01dc 01       		.uleb128 0x1
 400 01dd 9C       		.byte	0x9c
 401 01de EC010000 		.4byte	0x1ec
 402 01e2 10       		.uleb128 0x10
 403 01e3 2E000000 		.4byte	.LVL0
 404 01e7 43020000 		.4byte	0x243
 405 01eb 00       		.byte	0
 406 01ec 11       		.uleb128 0x11
ARM GAS  C:\Users\BRIAN~1.SEA\AppData\Local\Temp\ccVes72R.s 			page 21


 407 01ed 64010000 		.4byte	.LASF34
 408 01f1 01       		.byte	0x1
 409 01f2 B502     		.2byte	0x2b5
 410 01f4 00000000 		.4byte	.LFB2
 411 01f8 02000000 		.4byte	.LFE2-.LFB2
 412 01fc 01       		.uleb128 0x1
 413 01fd 9C       		.byte	0x9c
 414 01fe 12       		.uleb128 0x12
 415 01ff 76000000 		.4byte	.LASF36
 416 0203 01       		.byte	0x1
 417 0204 D202     		.2byte	0x2d2
 418 0206 00000000 		.4byte	.LFB3
 419 020a 08000000 		.4byte	.LFE3-.LFB3
 420 020e 01       		.uleb128 0x1
 421 020f 9C       		.byte	0x9c
 422 0210 1E020000 		.4byte	0x21e
 423 0214 10       		.uleb128 0x10
 424 0215 06000000 		.4byte	.LVL1
 425 0219 4E020000 		.4byte	0x24e
 426 021d 00       		.byte	0
 427 021e 0A       		.uleb128 0xa
 428 021f 2E020000 		.4byte	0x22e
 429 0223 2E020000 		.4byte	0x22e
 430 0227 0B       		.uleb128 0xb
 431 0228 AE000000 		.4byte	0xae
 432 022c 08       		.byte	0x8
 433 022d 00       		.byte	0
 434 022e 06       		.uleb128 0x6
 435 022f 2A010000 		.4byte	0x12a
 436 0233 13       		.uleb128 0x13
 437 0234 78010000 		.4byte	.LASF42
 438 0238 05       		.byte	0x5
 439 0239 83       		.byte	0x83
 440 023a 3E020000 		.4byte	0x23e
 441 023e 06       		.uleb128 0x6
 442 023f 1E020000 		.4byte	0x21e
 443 0243 14       		.uleb128 0x14
 444 0244 5A000000 		.4byte	.LASF37
 445 0248 5A000000 		.4byte	.LASF37
 446 024c 04       		.byte	0x4
 447 024d 13       		.byte	0x13
 448 024e 14       		.uleb128 0x14
 449 024f 00000000 		.4byte	.LASF38
 450 0253 00000000 		.4byte	.LASF38
 451 0257 05       		.byte	0x5
 452 0258 AE       		.byte	0xae
 453 0259 00       		.byte	0
 454              		.section	.debug_abbrev,"",%progbits
 455              	.Ldebug_abbrev0:
 456 0000 01       		.uleb128 0x1
 457 0001 11       		.uleb128 0x11
 458 0002 01       		.byte	0x1
 459 0003 25       		.uleb128 0x25
 460 0004 0E       		.uleb128 0xe
 461 0005 13       		.uleb128 0x13
 462 0006 0B       		.uleb128 0xb
 463 0007 03       		.uleb128 0x3
ARM GAS  C:\Users\BRIAN~1.SEA\AppData\Local\Temp\ccVes72R.s 			page 22


 464 0008 0E       		.uleb128 0xe
 465 0009 1B       		.uleb128 0x1b
 466 000a 0E       		.uleb128 0xe
 467 000b 55       		.uleb128 0x55
 468 000c 17       		.uleb128 0x17
 469 000d 11       		.uleb128 0x11
 470 000e 01       		.uleb128 0x1
 471 000f 10       		.uleb128 0x10
 472 0010 17       		.uleb128 0x17
 473 0011 00       		.byte	0
 474 0012 00       		.byte	0
 475 0013 02       		.uleb128 0x2
 476 0014 24       		.uleb128 0x24
 477 0015 00       		.byte	0
 478 0016 0B       		.uleb128 0xb
 479 0017 0B       		.uleb128 0xb
 480 0018 3E       		.uleb128 0x3e
 481 0019 0B       		.uleb128 0xb
 482 001a 03       		.uleb128 0x3
 483 001b 0E       		.uleb128 0xe
 484 001c 00       		.byte	0
 485 001d 00       		.byte	0
 486 001e 03       		.uleb128 0x3
 487 001f 24       		.uleb128 0x24
 488 0020 00       		.byte	0
 489 0021 0B       		.uleb128 0xb
 490 0022 0B       		.uleb128 0xb
 491 0023 3E       		.uleb128 0x3e
 492 0024 0B       		.uleb128 0xb
 493 0025 03       		.uleb128 0x3
 494 0026 08       		.uleb128 0x8
 495 0027 00       		.byte	0
 496 0028 00       		.byte	0
 497 0029 04       		.uleb128 0x4
 498 002a 16       		.uleb128 0x16
 499 002b 00       		.byte	0
 500 002c 03       		.uleb128 0x3
 501 002d 0E       		.uleb128 0xe
 502 002e 3A       		.uleb128 0x3a
 503 002f 0B       		.uleb128 0xb
 504 0030 3B       		.uleb128 0x3b
 505 0031 0B       		.uleb128 0xb
 506 0032 49       		.uleb128 0x49
 507 0033 13       		.uleb128 0x13
 508 0034 00       		.byte	0
 509 0035 00       		.byte	0
 510 0036 05       		.uleb128 0x5
 511 0037 16       		.uleb128 0x16
 512 0038 00       		.byte	0
 513 0039 03       		.uleb128 0x3
 514 003a 0E       		.uleb128 0xe
 515 003b 3A       		.uleb128 0x3a
 516 003c 0B       		.uleb128 0xb
 517 003d 3B       		.uleb128 0x3b
 518 003e 05       		.uleb128 0x5
 519 003f 49       		.uleb128 0x49
 520 0040 13       		.uleb128 0x13
ARM GAS  C:\Users\BRIAN~1.SEA\AppData\Local\Temp\ccVes72R.s 			page 23


 521 0041 00       		.byte	0
 522 0042 00       		.byte	0
 523 0043 06       		.uleb128 0x6
 524 0044 35       		.uleb128 0x35
 525 0045 00       		.byte	0
 526 0046 49       		.uleb128 0x49
 527 0047 13       		.uleb128 0x13
 528 0048 00       		.byte	0
 529 0049 00       		.byte	0
 530 004a 07       		.uleb128 0x7
 531 004b 13       		.uleb128 0x13
 532 004c 01       		.byte	0x1
 533 004d 0B       		.uleb128 0xb
 534 004e 0B       		.uleb128 0xb
 535 004f 3A       		.uleb128 0x3a
 536 0050 0B       		.uleb128 0xb
 537 0051 3B       		.uleb128 0x3b
 538 0052 0B       		.uleb128 0xb
 539 0053 01       		.uleb128 0x1
 540 0054 13       		.uleb128 0x13
 541 0055 00       		.byte	0
 542 0056 00       		.byte	0
 543 0057 08       		.uleb128 0x8
 544 0058 0D       		.uleb128 0xd
 545 0059 00       		.byte	0
 546 005a 03       		.uleb128 0x3
 547 005b 0E       		.uleb128 0xe
 548 005c 3A       		.uleb128 0x3a
 549 005d 0B       		.uleb128 0xb
 550 005e 3B       		.uleb128 0x3b
 551 005f 0B       		.uleb128 0xb
 552 0060 49       		.uleb128 0x49
 553 0061 13       		.uleb128 0x13
 554 0062 38       		.uleb128 0x38
 555 0063 0B       		.uleb128 0xb
 556 0064 00       		.byte	0
 557 0065 00       		.byte	0
 558 0066 09       		.uleb128 0x9
 559 0067 0D       		.uleb128 0xd
 560 0068 00       		.byte	0
 561 0069 03       		.uleb128 0x3
 562 006a 08       		.uleb128 0x8
 563 006b 3A       		.uleb128 0x3a
 564 006c 0B       		.uleb128 0xb
 565 006d 3B       		.uleb128 0x3b
 566 006e 0B       		.uleb128 0xb
 567 006f 49       		.uleb128 0x49
 568 0070 13       		.uleb128 0x13
 569 0071 38       		.uleb128 0x38
 570 0072 0B       		.uleb128 0xb
 571 0073 00       		.byte	0
 572 0074 00       		.byte	0
 573 0075 0A       		.uleb128 0xa
 574 0076 01       		.uleb128 0x1
 575 0077 01       		.byte	0x1
 576 0078 49       		.uleb128 0x49
 577 0079 13       		.uleb128 0x13
ARM GAS  C:\Users\BRIAN~1.SEA\AppData\Local\Temp\ccVes72R.s 			page 24


 578 007a 01       		.uleb128 0x1
 579 007b 13       		.uleb128 0x13
 580 007c 00       		.byte	0
 581 007d 00       		.byte	0
 582 007e 0B       		.uleb128 0xb
 583 007f 21       		.uleb128 0x21
 584 0080 00       		.byte	0
 585 0081 49       		.uleb128 0x49
 586 0082 13       		.uleb128 0x13
 587 0083 2F       		.uleb128 0x2f
 588 0084 0B       		.uleb128 0xb
 589 0085 00       		.byte	0
 590 0086 00       		.byte	0
 591 0087 0C       		.uleb128 0xc
 592 0088 13       		.uleb128 0x13
 593 0089 01       		.byte	0x1
 594 008a 0B       		.uleb128 0xb
 595 008b 0B       		.uleb128 0xb
 596 008c 3A       		.uleb128 0x3a
 597 008d 0B       		.uleb128 0xb
 598 008e 3B       		.uleb128 0x3b
 599 008f 05       		.uleb128 0x5
 600 0090 01       		.uleb128 0x1
 601 0091 13       		.uleb128 0x13
 602 0092 00       		.byte	0
 603 0093 00       		.byte	0
 604 0094 0D       		.uleb128 0xd
 605 0095 0D       		.uleb128 0xd
 606 0096 00       		.byte	0
 607 0097 03       		.uleb128 0x3
 608 0098 0E       		.uleb128 0xe
 609 0099 3A       		.uleb128 0x3a
 610 009a 0B       		.uleb128 0xb
 611 009b 3B       		.uleb128 0x3b
 612 009c 05       		.uleb128 0x5
 613 009d 49       		.uleb128 0x49
 614 009e 13       		.uleb128 0x13
 615 009f 38       		.uleb128 0x38
 616 00a0 0B       		.uleb128 0xb
 617 00a1 00       		.byte	0
 618 00a2 00       		.byte	0
 619 00a3 0E       		.uleb128 0xe
 620 00a4 2E       		.uleb128 0x2e
 621 00a5 00       		.byte	0
 622 00a6 3F       		.uleb128 0x3f
 623 00a7 19       		.uleb128 0x19
 624 00a8 03       		.uleb128 0x3
 625 00a9 0E       		.uleb128 0xe
 626 00aa 3A       		.uleb128 0x3a
 627 00ab 0B       		.uleb128 0xb
 628 00ac 3B       		.uleb128 0x3b
 629 00ad 0B       		.uleb128 0xb
 630 00ae 27       		.uleb128 0x27
 631 00af 19       		.uleb128 0x19
 632 00b0 11       		.uleb128 0x11
 633 00b1 01       		.uleb128 0x1
 634 00b2 12       		.uleb128 0x12
ARM GAS  C:\Users\BRIAN~1.SEA\AppData\Local\Temp\ccVes72R.s 			page 25


 635 00b3 06       		.uleb128 0x6
 636 00b4 40       		.uleb128 0x40
 637 00b5 18       		.uleb128 0x18
 638 00b6 9742     		.uleb128 0x2117
 639 00b8 19       		.uleb128 0x19
 640 00b9 00       		.byte	0
 641 00ba 00       		.byte	0
 642 00bb 0F       		.uleb128 0xf
 643 00bc 2E       		.uleb128 0x2e
 644 00bd 01       		.byte	0x1
 645 00be 3F       		.uleb128 0x3f
 646 00bf 19       		.uleb128 0x19
 647 00c0 03       		.uleb128 0x3
 648 00c1 0E       		.uleb128 0xe
 649 00c2 3A       		.uleb128 0x3a
 650 00c3 0B       		.uleb128 0xb
 651 00c4 3B       		.uleb128 0x3b
 652 00c5 0B       		.uleb128 0xb
 653 00c6 27       		.uleb128 0x27
 654 00c7 19       		.uleb128 0x19
 655 00c8 11       		.uleb128 0x11
 656 00c9 01       		.uleb128 0x1
 657 00ca 12       		.uleb128 0x12
 658 00cb 06       		.uleb128 0x6
 659 00cc 40       		.uleb128 0x40
 660 00cd 18       		.uleb128 0x18
 661 00ce 9742     		.uleb128 0x2117
 662 00d0 19       		.uleb128 0x19
 663 00d1 01       		.uleb128 0x1
 664 00d2 13       		.uleb128 0x13
 665 00d3 00       		.byte	0
 666 00d4 00       		.byte	0
 667 00d5 10       		.uleb128 0x10
 668 00d6 898201   		.uleb128 0x4109
 669 00d9 00       		.byte	0
 670 00da 11       		.uleb128 0x11
 671 00db 01       		.uleb128 0x1
 672 00dc 31       		.uleb128 0x31
 673 00dd 13       		.uleb128 0x13
 674 00de 00       		.byte	0
 675 00df 00       		.byte	0
 676 00e0 11       		.uleb128 0x11
 677 00e1 2E       		.uleb128 0x2e
 678 00e2 00       		.byte	0
 679 00e3 3F       		.uleb128 0x3f
 680 00e4 19       		.uleb128 0x19
 681 00e5 03       		.uleb128 0x3
 682 00e6 0E       		.uleb128 0xe
 683 00e7 3A       		.uleb128 0x3a
 684 00e8 0B       		.uleb128 0xb
 685 00e9 3B       		.uleb128 0x3b
 686 00ea 05       		.uleb128 0x5
 687 00eb 27       		.uleb128 0x27
 688 00ec 19       		.uleb128 0x19
 689 00ed 11       		.uleb128 0x11
 690 00ee 01       		.uleb128 0x1
 691 00ef 12       		.uleb128 0x12
ARM GAS  C:\Users\BRIAN~1.SEA\AppData\Local\Temp\ccVes72R.s 			page 26


 692 00f0 06       		.uleb128 0x6
 693 00f1 40       		.uleb128 0x40
 694 00f2 18       		.uleb128 0x18
 695 00f3 9742     		.uleb128 0x2117
 696 00f5 19       		.uleb128 0x19
 697 00f6 00       		.byte	0
 698 00f7 00       		.byte	0
 699 00f8 12       		.uleb128 0x12
 700 00f9 2E       		.uleb128 0x2e
 701 00fa 01       		.byte	0x1
 702 00fb 3F       		.uleb128 0x3f
 703 00fc 19       		.uleb128 0x19
 704 00fd 03       		.uleb128 0x3
 705 00fe 0E       		.uleb128 0xe
 706 00ff 3A       		.uleb128 0x3a
 707 0100 0B       		.uleb128 0xb
 708 0101 3B       		.uleb128 0x3b
 709 0102 05       		.uleb128 0x5
 710 0103 27       		.uleb128 0x27
 711 0104 19       		.uleb128 0x19
 712 0105 11       		.uleb128 0x11
 713 0106 01       		.uleb128 0x1
 714 0107 12       		.uleb128 0x12
 715 0108 06       		.uleb128 0x6
 716 0109 40       		.uleb128 0x40
 717 010a 18       		.uleb128 0x18
 718 010b 9742     		.uleb128 0x2117
 719 010d 19       		.uleb128 0x19
 720 010e 01       		.uleb128 0x1
 721 010f 13       		.uleb128 0x13
 722 0110 00       		.byte	0
 723 0111 00       		.byte	0
 724 0112 13       		.uleb128 0x13
 725 0113 34       		.uleb128 0x34
 726 0114 00       		.byte	0
 727 0115 03       		.uleb128 0x3
 728 0116 0E       		.uleb128 0xe
 729 0117 3A       		.uleb128 0x3a
 730 0118 0B       		.uleb128 0xb
 731 0119 3B       		.uleb128 0x3b
 732 011a 0B       		.uleb128 0xb
 733 011b 49       		.uleb128 0x49
 734 011c 13       		.uleb128 0x13
 735 011d 3F       		.uleb128 0x3f
 736 011e 19       		.uleb128 0x19
 737 011f 3C       		.uleb128 0x3c
 738 0120 19       		.uleb128 0x19
 739 0121 00       		.byte	0
 740 0122 00       		.byte	0
 741 0123 14       		.uleb128 0x14
 742 0124 2E       		.uleb128 0x2e
 743 0125 00       		.byte	0
 744 0126 3F       		.uleb128 0x3f
 745 0127 19       		.uleb128 0x19
 746 0128 3C       		.uleb128 0x3c
 747 0129 19       		.uleb128 0x19
 748 012a 6E       		.uleb128 0x6e
ARM GAS  C:\Users\BRIAN~1.SEA\AppData\Local\Temp\ccVes72R.s 			page 27


 749 012b 0E       		.uleb128 0xe
 750 012c 03       		.uleb128 0x3
 751 012d 0E       		.uleb128 0xe
 752 012e 3A       		.uleb128 0x3a
 753 012f 0B       		.uleb128 0xb
 754 0130 3B       		.uleb128 0x3b
 755 0131 0B       		.uleb128 0xb
 756 0132 00       		.byte	0
 757 0133 00       		.byte	0
 758 0134 00       		.byte	0
 759              		.section	.debug_aranges,"",%progbits
 760 0000 34000000 		.4byte	0x34
 761 0004 0200     		.2byte	0x2
 762 0006 00000000 		.4byte	.Ldebug_info0
 763 000a 04       		.byte	0x4
 764 000b 00       		.byte	0
 765 000c 0000     		.2byte	0
 766 000e 0000     		.2byte	0
 767 0010 00000000 		.4byte	.LFB0
 768 0014 30000000 		.4byte	.LFE0-.LFB0
 769 0018 00000000 		.4byte	.LFB1
 770 001c 38000000 		.4byte	.LFE1-.LFB1
 771 0020 00000000 		.4byte	.LFB2
 772 0024 02000000 		.4byte	.LFE2-.LFB2
 773 0028 00000000 		.4byte	.LFB3
 774 002c 08000000 		.4byte	.LFE3-.LFB3
 775 0030 00000000 		.4byte	0
 776 0034 00000000 		.4byte	0
 777              		.section	.debug_ranges,"",%progbits
 778              	.Ldebug_ranges0:
 779 0000 00000000 		.4byte	.LFB0
 780 0004 30000000 		.4byte	.LFE0
 781 0008 00000000 		.4byte	.LFB1
 782 000c 38000000 		.4byte	.LFE1
 783 0010 00000000 		.4byte	.LFB2
 784 0014 02000000 		.4byte	.LFE2
 785 0018 00000000 		.4byte	.LFB3
 786 001c 08000000 		.4byte	.LFE3
 787 0020 00000000 		.4byte	0
 788 0024 00000000 		.4byte	0
 789              		.section	.debug_line,"",%progbits
 790              	.Ldebug_line0:
 791 0000 DA000000 		.section	.debug_str,"MS",%progbits,1
 791      02007800 
 791      00000201 
 791      FB0E0D00 
 791      01010101 
 792              	.LASF38:
 793 0000 55534246 		.ascii	"USBFS_ReInitComponent\000"
 793      535F5265 
 793      496E6974 
 793      436F6D70 
 793      6F6E656E 
 794              	.LASF29:
 795 0016 65704372 		.ascii	"epCr0\000"
 795      3000
 796              	.LASF11:
ARM GAS  C:\Users\BRIAN~1.SEA\AppData\Local\Temp\ccVes72R.s 			page 28


 797 001c 666C6F61 		.ascii	"float\000"
 797      7400
 798              	.LASF3:
 799 0022 73686F72 		.ascii	"short unsigned int\000"
 799      7420756E 
 799      7369676E 
 799      65642069 
 799      6E7400
 800              	.LASF40:
 801 0035 47656E65 		.ascii	"Generated_Source\\PSoC5\\USBFS_episr.c\000"
 801      72617465 
 801      645F536F 
 801      75726365 
 801      5C50536F 
 802              	.LASF37:
 803 005a 55534246 		.ascii	"USBFS_EP_2_ISR_ExitCallback\000"
 803      535F4550 
 803      5F325F49 
 803      53525F45 
 803      78697443 
 804              	.LASF36:
 805 0076 55534246 		.ascii	"USBFS_BUS_RESET_ISR\000"
 805      535F4255 
 805      535F5245 
 805      5345545F 
 805      49535200 
 806              	.LASF27:
 807 008a 6570436E 		.ascii	"epCnt0\000"
 807      743000
 808              	.LASF28:
 809 0091 6570436E 		.ascii	"epCnt1\000"
 809      743100
 810              	.LASF20:
 811 0098 6570546F 		.ascii	"epToggle\000"
 811      67676C65 
 811      00
 812              	.LASF1:
 813 00a1 756E7369 		.ascii	"unsigned char\000"
 813      676E6564 
 813      20636861 
 813      7200
 814              	.LASF39:
 815 00af 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 815      43313120 
 815      352E342E 
 815      31203230 
 815      31363036 
 816 00e2 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 816      20726576 
 816      6973696F 
 816      6E203233 
 816      37373135 
 817 0115 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 817      66756E63 
 817      74696F6E 
 817      2D736563 
 817      74696F6E 
ARM GAS  C:\Users\BRIAN~1.SEA\AppData\Local\Temp\ccVes72R.s 			page 29


 818              	.LASF14:
 819 013d 72656738 		.ascii	"reg8\000"
 819      00
 820              	.LASF18:
 821 0142 61706945 		.ascii	"apiEpState\000"
 821      70537461 
 821      746500
 822              	.LASF5:
 823 014d 6C6F6E67 		.ascii	"long unsigned int\000"
 823      20756E73 
 823      69676E65 
 823      6420696E 
 823      7400
 824              	.LASF21:
 825 015f 61646472 		.ascii	"addr\000"
 825      00
 826              	.LASF34:
 827 0164 55534246 		.ascii	"USBFS_SOF_ISR\000"
 827      535F534F 
 827      465F4953 
 827      5200
 828              	.LASF31:
 829 0172 73696545 		.ascii	"sieEp\000"
 829      7000
 830              	.LASF42:
 831 0178 55534246 		.ascii	"USBFS_EP\000"
 831      535F4550 
 831      00
 832              	.LASF12:
 833 0181 646F7562 		.ascii	"double\000"
 833      6C6500
 834              	.LASF30:
 835 0188 55534246 		.ascii	"USBFS_sie_ep_struct\000"
 835      535F7369 
 835      655F6570 
 835      5F737472 
 835      75637400 
 836              	.LASF23:
 837 019c 62756666 		.ascii	"buffOffset\000"
 837      4F666673 
 837      657400
 838              	.LASF10:
 839 01a7 75696E74 		.ascii	"uint16\000"
 839      313600
 840              	.LASF32:
 841 01ae 55534246 		.ascii	"USBFS_sie_eps_struct\000"
 841      535F7369 
 841      655F6570 
 841      735F7374 
 841      72756374 
 842              	.LASF26:
 843 01c3 545F5553 		.ascii	"T_USBFS_EP_CTL_BLOCK\000"
 843      4246535F 
 843      45505F43 
 843      544C5F42 
 843      4C4F434B 
 844              	.LASF8:
ARM GAS  C:\Users\BRIAN~1.SEA\AppData\Local\Temp\ccVes72R.s 			page 30


 845 01d8 756E7369 		.ascii	"unsigned int\000"
 845      676E6564 
 845      20696E74 
 845      00
 846              	.LASF7:
 847 01e5 6C6F6E67 		.ascii	"long long unsigned int\000"
 847      206C6F6E 
 847      6720756E 
 847      7369676E 
 847      65642069 
 848              	.LASF19:
 849 01fc 68774570 		.ascii	"hwEpState\000"
 849      53746174 
 849      6500
 850              	.LASF33:
 851 0206 55534246 		.ascii	"USBFS_EP_1_ISR\000"
 851      535F4550 
 851      5F315F49 
 851      535200
 852              	.LASF16:
 853 0215 73697A65 		.ascii	"sizetype\000"
 853      74797065 
 853      00
 854              	.LASF17:
 855 021e 61747472 		.ascii	"attrib\000"
 855      696200
 856              	.LASF22:
 857 0225 65704D6F 		.ascii	"epMode\000"
 857      646500
 858              	.LASF6:
 859 022c 6C6F6E67 		.ascii	"long long int\000"
 859      206C6F6E 
 859      6720696E 
 859      7400
 860              	.LASF13:
 861 023a 63686172 		.ascii	"char\000"
 861      00
 862              	.LASF24:
 863 023f 62756666 		.ascii	"bufferSize\000"
 863      65725369 
 863      7A6500
 864              	.LASF2:
 865 024a 73686F72 		.ascii	"short int\000"
 865      7420696E 
 865      7400
 866              	.LASF9:
 867 0254 75696E74 		.ascii	"uint8\000"
 867      3800
 868              	.LASF25:
 869 025a 696E7465 		.ascii	"interface\000"
 869      72666163 
 869      6500
 870              	.LASF41:
 871 0264 433A5C5F 		.ascii	"C:\\_User\\GitHub Projects\\PulseGen\\PulseGen.cywr"
 871      55736572 
 871      5C476974 
 871      48756220 
ARM GAS  C:\Users\BRIAN~1.SEA\AppData\Local\Temp\ccVes72R.s 			page 31


 871      50726F6A 
 872 0293 6B5F2E41 		.ascii	"k_.Archive01\\Design93\\PulseGenerator.cydsn\000"
 872      72636869 
 872      76653031 
 872      5C446573 
 872      69676E39 
 873              	.LASF4:
 874 02be 6C6F6E67 		.ascii	"long int\000"
 874      20696E74 
 874      00
 875              	.LASF35:
 876 02c7 55534246 		.ascii	"USBFS_EP_2_ISR\000"
 876      535F4550 
 876      5F325F49 
 876      535200
 877              	.LASF15:
 878 02d6 6C6F6E67 		.ascii	"long double\000"
 878      20646F75 
 878      626C6500 
 879              	.LASF0:
 880 02e2 7369676E 		.ascii	"signed char\000"
 880      65642063 
 880      68617200 
 881              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
