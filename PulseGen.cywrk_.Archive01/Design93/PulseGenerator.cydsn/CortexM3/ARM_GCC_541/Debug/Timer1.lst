ARM GAS  C:\Users\BRIAN~1.SEA\AppData\Local\Temp\ccoSbMTd.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"Timer1.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.Timer1_Enable,"ax",%progbits
  20              		.align	2
  21              		.global	Timer1_Enable
  22              		.thumb
  23              		.thumb_func
  24              		.type	Timer1_Enable, %function
  25              	Timer1_Enable:
  26              	.LFB1:
  27              		.file 1 "Generated_Source\\PSoC5\\Timer1.c"
   1:Generated_Source\PSoC5/Timer1.c **** /*******************************************************************************
   2:Generated_Source\PSoC5/Timer1.c **** * File Name: Timer1.c
   3:Generated_Source\PSoC5/Timer1.c **** * Version 2.70
   4:Generated_Source\PSoC5/Timer1.c **** *
   5:Generated_Source\PSoC5/Timer1.c **** * Description:
   6:Generated_Source\PSoC5/Timer1.c **** *  The Timer component consists of a 8, 16, 24 or 32-bit timer with
   7:Generated_Source\PSoC5/Timer1.c **** *  a selectable period between 2 and 2^Width - 1.  The timer may free run
   8:Generated_Source\PSoC5/Timer1.c **** *  or be used as a capture timer as well.  The capture can be initiated
   9:Generated_Source\PSoC5/Timer1.c **** *  by a positive or negative edge signal as well as via software.
  10:Generated_Source\PSoC5/Timer1.c **** *  A trigger input can be programmed to enable the timer on rising edge
  11:Generated_Source\PSoC5/Timer1.c **** *  falling edge, either edge or continous run.
  12:Generated_Source\PSoC5/Timer1.c **** *  Interrupts may be generated due to a terminal count condition
  13:Generated_Source\PSoC5/Timer1.c **** *  or a capture event.
  14:Generated_Source\PSoC5/Timer1.c **** *
  15:Generated_Source\PSoC5/Timer1.c **** * Note:
  16:Generated_Source\PSoC5/Timer1.c **** *
  17:Generated_Source\PSoC5/Timer1.c **** ********************************************************************************
  18:Generated_Source\PSoC5/Timer1.c **** * Copyright 2008-2014, Cypress Semiconductor Corporation.  All rights reserved.
  19:Generated_Source\PSoC5/Timer1.c **** * You may use this file only in accordance with the license, terms, conditions,
  20:Generated_Source\PSoC5/Timer1.c **** * disclaimers, and limitations in the end user license agreement accompanying
  21:Generated_Source\PSoC5/Timer1.c **** * the software package with which this file was provided.
  22:Generated_Source\PSoC5/Timer1.c **** ********************************************************************************/
  23:Generated_Source\PSoC5/Timer1.c **** 
  24:Generated_Source\PSoC5/Timer1.c **** #include "Timer1.h"
  25:Generated_Source\PSoC5/Timer1.c **** 
  26:Generated_Source\PSoC5/Timer1.c **** uint8 Timer1_initVar = 0u;
  27:Generated_Source\PSoC5/Timer1.c **** 
  28:Generated_Source\PSoC5/Timer1.c **** 
  29:Generated_Source\PSoC5/Timer1.c **** /*******************************************************************************
  30:Generated_Source\PSoC5/Timer1.c **** * Function Name: Timer1_Init
ARM GAS  C:\Users\BRIAN~1.SEA\AppData\Local\Temp\ccoSbMTd.s 			page 2


  31:Generated_Source\PSoC5/Timer1.c **** ********************************************************************************
  32:Generated_Source\PSoC5/Timer1.c **** *
  33:Generated_Source\PSoC5/Timer1.c **** * Summary:
  34:Generated_Source\PSoC5/Timer1.c **** *  Initialize to the schematic state
  35:Generated_Source\PSoC5/Timer1.c **** *
  36:Generated_Source\PSoC5/Timer1.c **** * Parameters:
  37:Generated_Source\PSoC5/Timer1.c **** *  void
  38:Generated_Source\PSoC5/Timer1.c **** *
  39:Generated_Source\PSoC5/Timer1.c **** * Return:
  40:Generated_Source\PSoC5/Timer1.c **** *  void
  41:Generated_Source\PSoC5/Timer1.c **** *
  42:Generated_Source\PSoC5/Timer1.c **** *******************************************************************************/
  43:Generated_Source\PSoC5/Timer1.c **** void Timer1_Init(void) 
  44:Generated_Source\PSoC5/Timer1.c **** {
  45:Generated_Source\PSoC5/Timer1.c ****     #if(!Timer1_UsingFixedFunction)
  46:Generated_Source\PSoC5/Timer1.c ****             /* Interrupt State Backup for Critical Region*/
  47:Generated_Source\PSoC5/Timer1.c ****             uint8 Timer1_interruptState;
  48:Generated_Source\PSoC5/Timer1.c ****     #endif /* Interrupt state back up for Fixed Function only */
  49:Generated_Source\PSoC5/Timer1.c **** 
  50:Generated_Source\PSoC5/Timer1.c ****     #if (Timer1_UsingFixedFunction)
  51:Generated_Source\PSoC5/Timer1.c ****         /* Clear all bits but the enable bit (if it's already set) for Timer operation */
  52:Generated_Source\PSoC5/Timer1.c ****         Timer1_CONTROL &= Timer1_CTRL_ENABLE;
  53:Generated_Source\PSoC5/Timer1.c **** 
  54:Generated_Source\PSoC5/Timer1.c ****         /* Clear the mode bits for continuous run mode */
  55:Generated_Source\PSoC5/Timer1.c ****         #if (CY_PSOC5A)
  56:Generated_Source\PSoC5/Timer1.c ****             Timer1_CONTROL2 &= ((uint8)(~Timer1_CTRL_MODE_MASK));
  57:Generated_Source\PSoC5/Timer1.c ****         #endif /* Clear bits in CONTROL2 only in PSOC5A */
  58:Generated_Source\PSoC5/Timer1.c **** 
  59:Generated_Source\PSoC5/Timer1.c ****         #if (CY_PSOC3 || CY_PSOC5LP)
  60:Generated_Source\PSoC5/Timer1.c ****             Timer1_CONTROL3 &= ((uint8)(~Timer1_CTRL_MODE_MASK));
  61:Generated_Source\PSoC5/Timer1.c ****         #endif /* CONTROL3 register exists only in PSoC3 OR PSoC5LP */
  62:Generated_Source\PSoC5/Timer1.c **** 
  63:Generated_Source\PSoC5/Timer1.c ****         /* Check if One Shot mode is enabled i.e. RunMode !=0*/
  64:Generated_Source\PSoC5/Timer1.c ****         #if (Timer1_RunModeUsed != 0x0u)
  65:Generated_Source\PSoC5/Timer1.c ****             /* Set 3rd bit of Control register to enable one shot mode */
  66:Generated_Source\PSoC5/Timer1.c ****             Timer1_CONTROL |= 0x04u;
  67:Generated_Source\PSoC5/Timer1.c ****         #endif /* One Shot enabled only when RunModeUsed is not Continuous*/
  68:Generated_Source\PSoC5/Timer1.c **** 
  69:Generated_Source\PSoC5/Timer1.c ****         #if (Timer1_RunModeUsed == 2)
  70:Generated_Source\PSoC5/Timer1.c ****             #if (CY_PSOC5A)
  71:Generated_Source\PSoC5/Timer1.c ****                 /* Set last 2 bits of control2 register if one shot(halt on
  72:Generated_Source\PSoC5/Timer1.c ****                 interrupt) is enabled*/
  73:Generated_Source\PSoC5/Timer1.c ****                 Timer1_CONTROL2 |= 0x03u;
  74:Generated_Source\PSoC5/Timer1.c ****             #endif /* Set One-Shot Halt on Interrupt bit in CONTROL2 for PSoC5A */
  75:Generated_Source\PSoC5/Timer1.c **** 
  76:Generated_Source\PSoC5/Timer1.c ****             #if (CY_PSOC3 || CY_PSOC5LP)
  77:Generated_Source\PSoC5/Timer1.c ****                 /* Set last 2 bits of control3 register if one shot(halt on
  78:Generated_Source\PSoC5/Timer1.c ****                 interrupt) is enabled*/
  79:Generated_Source\PSoC5/Timer1.c ****                 Timer1_CONTROL3 |= 0x03u;
  80:Generated_Source\PSoC5/Timer1.c ****             #endif /* Set One-Shot Halt on Interrupt bit in CONTROL3 for PSoC3 or PSoC5LP */
  81:Generated_Source\PSoC5/Timer1.c **** 
  82:Generated_Source\PSoC5/Timer1.c ****         #endif /* Remove section if One Shot Halt on Interrupt is not enabled */
  83:Generated_Source\PSoC5/Timer1.c **** 
  84:Generated_Source\PSoC5/Timer1.c ****         #if (Timer1_UsingHWEnable != 0)
  85:Generated_Source\PSoC5/Timer1.c ****             #if (CY_PSOC5A)
  86:Generated_Source\PSoC5/Timer1.c ****                 /* Set the default Run Mode of the Timer to Continuous */
  87:Generated_Source\PSoC5/Timer1.c ****                 Timer1_CONTROL2 |= Timer1_CTRL_MODE_PULSEWIDTH;
ARM GAS  C:\Users\BRIAN~1.SEA\AppData\Local\Temp\ccoSbMTd.s 			page 3


  88:Generated_Source\PSoC5/Timer1.c ****             #endif /* Set Continuous Run Mode in CONTROL2 for PSoC5A */
  89:Generated_Source\PSoC5/Timer1.c **** 
  90:Generated_Source\PSoC5/Timer1.c ****             #if (CY_PSOC3 || CY_PSOC5LP)
  91:Generated_Source\PSoC5/Timer1.c ****                 /* Clear and Set ROD and COD bits of CFG2 register */
  92:Generated_Source\PSoC5/Timer1.c ****                 Timer1_CONTROL3 &= ((uint8)(~Timer1_CTRL_RCOD_MASK));
  93:Generated_Source\PSoC5/Timer1.c ****                 Timer1_CONTROL3 |= Timer1_CTRL_RCOD;
  94:Generated_Source\PSoC5/Timer1.c **** 
  95:Generated_Source\PSoC5/Timer1.c ****                 /* Clear and Enable the HW enable bit in CFG2 register */
  96:Generated_Source\PSoC5/Timer1.c ****                 Timer1_CONTROL3 &= ((uint8)(~Timer1_CTRL_ENBL_MASK));
  97:Generated_Source\PSoC5/Timer1.c ****                 Timer1_CONTROL3 |= Timer1_CTRL_ENBL;
  98:Generated_Source\PSoC5/Timer1.c **** 
  99:Generated_Source\PSoC5/Timer1.c ****                 /* Set the default Run Mode of the Timer to Continuous */
 100:Generated_Source\PSoC5/Timer1.c ****                 Timer1_CONTROL3 |= Timer1_CTRL_MODE_CONTINUOUS;
 101:Generated_Source\PSoC5/Timer1.c ****             #endif /* Set Continuous Run Mode in CONTROL3 for PSoC3ES3 or PSoC5A */
 102:Generated_Source\PSoC5/Timer1.c **** 
 103:Generated_Source\PSoC5/Timer1.c ****         #endif /* Configure Run Mode with hardware enable */
 104:Generated_Source\PSoC5/Timer1.c **** 
 105:Generated_Source\PSoC5/Timer1.c ****         /* Clear and Set SYNCTC and SYNCCMP bits of RT1 register */
 106:Generated_Source\PSoC5/Timer1.c ****         Timer1_RT1 &= ((uint8)(~Timer1_RT1_MASK));
 107:Generated_Source\PSoC5/Timer1.c ****         Timer1_RT1 |= Timer1_SYNC;
 108:Generated_Source\PSoC5/Timer1.c **** 
 109:Generated_Source\PSoC5/Timer1.c ****         /*Enable DSI Sync all all inputs of the Timer*/
 110:Generated_Source\PSoC5/Timer1.c ****         Timer1_RT1 &= ((uint8)(~Timer1_SYNCDSI_MASK));
 111:Generated_Source\PSoC5/Timer1.c ****         Timer1_RT1 |= Timer1_SYNCDSI_EN;
 112:Generated_Source\PSoC5/Timer1.c **** 
 113:Generated_Source\PSoC5/Timer1.c ****         /* Set the IRQ to use the status register interrupts */
 114:Generated_Source\PSoC5/Timer1.c ****         Timer1_CONTROL2 |= Timer1_CTRL2_IRQ_SEL;
 115:Generated_Source\PSoC5/Timer1.c ****     #endif /* Configuring registers of fixed function implementation */
 116:Generated_Source\PSoC5/Timer1.c **** 
 117:Generated_Source\PSoC5/Timer1.c ****     /* Set Initial values from Configuration */
 118:Generated_Source\PSoC5/Timer1.c ****     Timer1_WritePeriod(Timer1_INIT_PERIOD);
 119:Generated_Source\PSoC5/Timer1.c ****     Timer1_WriteCounter(Timer1_INIT_PERIOD);
 120:Generated_Source\PSoC5/Timer1.c **** 
 121:Generated_Source\PSoC5/Timer1.c ****     #if (Timer1_UsingHWCaptureCounter)/* Capture counter is enabled */
 122:Generated_Source\PSoC5/Timer1.c ****         Timer1_CAPTURE_COUNT_CTRL |= Timer1_CNTR_ENABLE;
 123:Generated_Source\PSoC5/Timer1.c ****         Timer1_SetCaptureCount(Timer1_INIT_CAPTURE_COUNT);
 124:Generated_Source\PSoC5/Timer1.c ****     #endif /* Configure capture counter value */
 125:Generated_Source\PSoC5/Timer1.c **** 
 126:Generated_Source\PSoC5/Timer1.c ****     #if (!Timer1_UsingFixedFunction)
 127:Generated_Source\PSoC5/Timer1.c ****         #if (Timer1_SoftwareCaptureMode)
 128:Generated_Source\PSoC5/Timer1.c ****             Timer1_SetCaptureMode(Timer1_INIT_CAPTURE_MODE);
 129:Generated_Source\PSoC5/Timer1.c ****         #endif /* Set Capture Mode for UDB implementation if capture mode is software controlled */
 130:Generated_Source\PSoC5/Timer1.c **** 
 131:Generated_Source\PSoC5/Timer1.c ****         #if (Timer1_SoftwareTriggerMode)
 132:Generated_Source\PSoC5/Timer1.c ****             #if (!Timer1_UDB_CONTROL_REG_REMOVED)
 133:Generated_Source\PSoC5/Timer1.c ****                 if (0u == (Timer1_CONTROL & Timer1__B_TIMER__TM_SOFTWARE))
 134:Generated_Source\PSoC5/Timer1.c ****                 {
 135:Generated_Source\PSoC5/Timer1.c ****                     Timer1_SetTriggerMode(Timer1_INIT_TRIGGER_MODE);
 136:Generated_Source\PSoC5/Timer1.c ****                 }
 137:Generated_Source\PSoC5/Timer1.c ****             #endif /* (!Timer1_UDB_CONTROL_REG_REMOVED) */
 138:Generated_Source\PSoC5/Timer1.c ****         #endif /* Set trigger mode for UDB Implementation if trigger mode is software controlled */
 139:Generated_Source\PSoC5/Timer1.c **** 
 140:Generated_Source\PSoC5/Timer1.c ****         /* CyEnterCriticalRegion and CyExitCriticalRegion are used to mark following region critica
 141:Generated_Source\PSoC5/Timer1.c ****         /* Enter Critical Region*/
 142:Generated_Source\PSoC5/Timer1.c ****         Timer1_interruptState = CyEnterCriticalSection();
 143:Generated_Source\PSoC5/Timer1.c **** 
 144:Generated_Source\PSoC5/Timer1.c ****         /* Use the interrupt output of the status register for IRQ output */
ARM GAS  C:\Users\BRIAN~1.SEA\AppData\Local\Temp\ccoSbMTd.s 			page 4


 145:Generated_Source\PSoC5/Timer1.c ****         Timer1_STATUS_AUX_CTRL |= Timer1_STATUS_ACTL_INT_EN_MASK;
 146:Generated_Source\PSoC5/Timer1.c **** 
 147:Generated_Source\PSoC5/Timer1.c ****         /* Exit Critical Region*/
 148:Generated_Source\PSoC5/Timer1.c ****         CyExitCriticalSection(Timer1_interruptState);
 149:Generated_Source\PSoC5/Timer1.c **** 
 150:Generated_Source\PSoC5/Timer1.c ****         #if (Timer1_EnableTriggerMode)
 151:Generated_Source\PSoC5/Timer1.c ****             Timer1_EnableTrigger();
 152:Generated_Source\PSoC5/Timer1.c ****         #endif /* Set Trigger enable bit for UDB implementation in the control register*/
 153:Generated_Source\PSoC5/Timer1.c **** 		
 154:Generated_Source\PSoC5/Timer1.c **** 		
 155:Generated_Source\PSoC5/Timer1.c ****         #if (Timer1_InterruptOnCaptureCount && !Timer1_UDB_CONTROL_REG_REMOVED)
 156:Generated_Source\PSoC5/Timer1.c ****             Timer1_SetInterruptCount(Timer1_INIT_INT_CAPTURE_COUNT);
 157:Generated_Source\PSoC5/Timer1.c ****         #endif /* Set interrupt count in UDB implementation if interrupt count feature is checked.*
 158:Generated_Source\PSoC5/Timer1.c **** 
 159:Generated_Source\PSoC5/Timer1.c ****         Timer1_ClearFIFO();
 160:Generated_Source\PSoC5/Timer1.c ****     #endif /* Configure additional features of UDB implementation */
 161:Generated_Source\PSoC5/Timer1.c **** 
 162:Generated_Source\PSoC5/Timer1.c ****     Timer1_SetInterruptMode(Timer1_INIT_INTERRUPT_MODE);
 163:Generated_Source\PSoC5/Timer1.c **** }
 164:Generated_Source\PSoC5/Timer1.c **** 
 165:Generated_Source\PSoC5/Timer1.c **** 
 166:Generated_Source\PSoC5/Timer1.c **** /*******************************************************************************
 167:Generated_Source\PSoC5/Timer1.c **** * Function Name: Timer1_Enable
 168:Generated_Source\PSoC5/Timer1.c **** ********************************************************************************
 169:Generated_Source\PSoC5/Timer1.c **** *
 170:Generated_Source\PSoC5/Timer1.c **** * Summary:
 171:Generated_Source\PSoC5/Timer1.c **** *  Enable the Timer
 172:Generated_Source\PSoC5/Timer1.c **** *
 173:Generated_Source\PSoC5/Timer1.c **** * Parameters:
 174:Generated_Source\PSoC5/Timer1.c **** *  void
 175:Generated_Source\PSoC5/Timer1.c **** *
 176:Generated_Source\PSoC5/Timer1.c **** * Return:
 177:Generated_Source\PSoC5/Timer1.c **** *  void
 178:Generated_Source\PSoC5/Timer1.c **** *
 179:Generated_Source\PSoC5/Timer1.c **** *******************************************************************************/
 180:Generated_Source\PSoC5/Timer1.c **** void Timer1_Enable(void) 
 181:Generated_Source\PSoC5/Timer1.c **** {
  28              		.loc 1 181 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
 182:Generated_Source\PSoC5/Timer1.c ****     /* Globally Enable the Fixed Function Block chosen */
 183:Generated_Source\PSoC5/Timer1.c ****     #if (Timer1_UsingFixedFunction)
 184:Generated_Source\PSoC5/Timer1.c ****         Timer1_GLOBAL_ENABLE |= Timer1_BLOCK_EN_MASK;
 185:Generated_Source\PSoC5/Timer1.c ****         Timer1_GLOBAL_STBY_ENABLE |= Timer1_BLOCK_STBY_EN_MASK;
 186:Generated_Source\PSoC5/Timer1.c ****     #endif /* Set Enable bit for enabling Fixed function timer*/
 187:Generated_Source\PSoC5/Timer1.c **** 
 188:Generated_Source\PSoC5/Timer1.c ****     /* Remove assignment if control register is removed */
 189:Generated_Source\PSoC5/Timer1.c ****     #if (!Timer1_UDB_CONTROL_REG_REMOVED || Timer1_UsingFixedFunction)
 190:Generated_Source\PSoC5/Timer1.c ****         Timer1_CONTROL |= Timer1_CTRL_ENABLE;
  33              		.loc 1 190 0
  34 0000 024A     		ldr	r2, .L2
  35 0002 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  36 0004 43F08003 		orr	r3, r3, #128
  37 0008 1370     		strb	r3, [r2]
  38 000a 7047     		bx	lr
ARM GAS  C:\Users\BRIAN~1.SEA\AppData\Local\Temp\ccoSbMTd.s 			page 5


  39              	.L3:
  40              		.align	2
  41              	.L2:
  42 000c 77650040 		.word	1073767799
  43              		.cfi_endproc
  44              	.LFE1:
  45              		.size	Timer1_Enable, .-Timer1_Enable
  46              		.section	.text.Timer1_Stop,"ax",%progbits
  47              		.align	2
  48              		.global	Timer1_Stop
  49              		.thumb
  50              		.thumb_func
  51              		.type	Timer1_Stop, %function
  52              	Timer1_Stop:
  53              	.LFB3:
 191:Generated_Source\PSoC5/Timer1.c ****     #endif /* Remove assignment if control register is removed */
 192:Generated_Source\PSoC5/Timer1.c **** }
 193:Generated_Source\PSoC5/Timer1.c **** 
 194:Generated_Source\PSoC5/Timer1.c **** 
 195:Generated_Source\PSoC5/Timer1.c **** /*******************************************************************************
 196:Generated_Source\PSoC5/Timer1.c **** * Function Name: Timer1_Start
 197:Generated_Source\PSoC5/Timer1.c **** ********************************************************************************
 198:Generated_Source\PSoC5/Timer1.c **** *
 199:Generated_Source\PSoC5/Timer1.c **** * Summary:
 200:Generated_Source\PSoC5/Timer1.c **** *  The start function initializes the timer with the default values, the
 201:Generated_Source\PSoC5/Timer1.c **** *  enables the timerto begin counting.  It does not enable interrupts,
 202:Generated_Source\PSoC5/Timer1.c **** *  the EnableInt command should be called if interrupt generation is required.
 203:Generated_Source\PSoC5/Timer1.c **** *
 204:Generated_Source\PSoC5/Timer1.c **** * Parameters:
 205:Generated_Source\PSoC5/Timer1.c **** *  void
 206:Generated_Source\PSoC5/Timer1.c **** *
 207:Generated_Source\PSoC5/Timer1.c **** * Return:
 208:Generated_Source\PSoC5/Timer1.c **** *  void
 209:Generated_Source\PSoC5/Timer1.c **** *
 210:Generated_Source\PSoC5/Timer1.c **** * Global variables:
 211:Generated_Source\PSoC5/Timer1.c **** *  Timer1_initVar: Is modified when this function is called for the
 212:Generated_Source\PSoC5/Timer1.c **** *   first time. Is used to ensure that initialization happens only once.
 213:Generated_Source\PSoC5/Timer1.c **** *
 214:Generated_Source\PSoC5/Timer1.c **** *******************************************************************************/
 215:Generated_Source\PSoC5/Timer1.c **** void Timer1_Start(void) 
 216:Generated_Source\PSoC5/Timer1.c **** {
 217:Generated_Source\PSoC5/Timer1.c ****     if(Timer1_initVar == 0u)
 218:Generated_Source\PSoC5/Timer1.c ****     {
 219:Generated_Source\PSoC5/Timer1.c ****         Timer1_Init();
 220:Generated_Source\PSoC5/Timer1.c **** 
 221:Generated_Source\PSoC5/Timer1.c ****         Timer1_initVar = 1u;   /* Clear this bit for Initialization */
 222:Generated_Source\PSoC5/Timer1.c ****     }
 223:Generated_Source\PSoC5/Timer1.c **** 
 224:Generated_Source\PSoC5/Timer1.c ****     /* Enable the Timer */
 225:Generated_Source\PSoC5/Timer1.c ****     Timer1_Enable();
 226:Generated_Source\PSoC5/Timer1.c **** }
 227:Generated_Source\PSoC5/Timer1.c **** 
 228:Generated_Source\PSoC5/Timer1.c **** 
 229:Generated_Source\PSoC5/Timer1.c **** /*******************************************************************************
 230:Generated_Source\PSoC5/Timer1.c **** * Function Name: Timer1_Stop
 231:Generated_Source\PSoC5/Timer1.c **** ********************************************************************************
 232:Generated_Source\PSoC5/Timer1.c **** *
ARM GAS  C:\Users\BRIAN~1.SEA\AppData\Local\Temp\ccoSbMTd.s 			page 6


 233:Generated_Source\PSoC5/Timer1.c **** * Summary:
 234:Generated_Source\PSoC5/Timer1.c **** *  The stop function halts the timer, but does not change any modes or disable
 235:Generated_Source\PSoC5/Timer1.c **** *  interrupts.
 236:Generated_Source\PSoC5/Timer1.c **** *
 237:Generated_Source\PSoC5/Timer1.c **** * Parameters:
 238:Generated_Source\PSoC5/Timer1.c **** *  void
 239:Generated_Source\PSoC5/Timer1.c **** *
 240:Generated_Source\PSoC5/Timer1.c **** * Return:
 241:Generated_Source\PSoC5/Timer1.c **** *  void
 242:Generated_Source\PSoC5/Timer1.c **** *
 243:Generated_Source\PSoC5/Timer1.c **** * Side Effects: If the Enable mode is set to Hardware only then this function
 244:Generated_Source\PSoC5/Timer1.c **** *               has no effect on the operation of the timer.
 245:Generated_Source\PSoC5/Timer1.c **** *
 246:Generated_Source\PSoC5/Timer1.c **** *******************************************************************************/
 247:Generated_Source\PSoC5/Timer1.c **** void Timer1_Stop(void) 
 248:Generated_Source\PSoC5/Timer1.c **** {
  54              		.loc 1 248 0
  55              		.cfi_startproc
  56              		@ args = 0, pretend = 0, frame = 0
  57              		@ frame_needed = 0, uses_anonymous_args = 0
  58              		@ link register save eliminated.
 249:Generated_Source\PSoC5/Timer1.c ****     /* Disable Timer */
 250:Generated_Source\PSoC5/Timer1.c ****     #if(!Timer1_UDB_CONTROL_REG_REMOVED || Timer1_UsingFixedFunction)
 251:Generated_Source\PSoC5/Timer1.c ****         Timer1_CONTROL &= ((uint8)(~Timer1_CTRL_ENABLE));
  59              		.loc 1 251 0
  60 0000 024A     		ldr	r2, .L5
  61 0002 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  62 0004 03F07F03 		and	r3, r3, #127
  63 0008 1370     		strb	r3, [r2]
  64 000a 7047     		bx	lr
  65              	.L6:
  66              		.align	2
  67              	.L5:
  68 000c 77650040 		.word	1073767799
  69              		.cfi_endproc
  70              	.LFE3:
  71              		.size	Timer1_Stop, .-Timer1_Stop
  72              		.section	.text.Timer1_SetInterruptMode,"ax",%progbits
  73              		.align	2
  74              		.global	Timer1_SetInterruptMode
  75              		.thumb
  76              		.thumb_func
  77              		.type	Timer1_SetInterruptMode, %function
  78              	Timer1_SetInterruptMode:
  79              	.LFB4:
 252:Generated_Source\PSoC5/Timer1.c ****     #endif /* Remove assignment if control register is removed */
 253:Generated_Source\PSoC5/Timer1.c **** 
 254:Generated_Source\PSoC5/Timer1.c ****     /* Globally disable the Fixed Function Block chosen */
 255:Generated_Source\PSoC5/Timer1.c ****     #if (Timer1_UsingFixedFunction)
 256:Generated_Source\PSoC5/Timer1.c ****         Timer1_GLOBAL_ENABLE &= ((uint8)(~Timer1_BLOCK_EN_MASK));
 257:Generated_Source\PSoC5/Timer1.c ****         Timer1_GLOBAL_STBY_ENABLE &= ((uint8)(~Timer1_BLOCK_STBY_EN_MASK));
 258:Generated_Source\PSoC5/Timer1.c ****     #endif /* Disable global enable for the Timer Fixed function block to stop the Timer*/
 259:Generated_Source\PSoC5/Timer1.c **** }
 260:Generated_Source\PSoC5/Timer1.c **** 
 261:Generated_Source\PSoC5/Timer1.c **** 
 262:Generated_Source\PSoC5/Timer1.c **** /*******************************************************************************
 263:Generated_Source\PSoC5/Timer1.c **** * Function Name: Timer1_SetInterruptMode
ARM GAS  C:\Users\BRIAN~1.SEA\AppData\Local\Temp\ccoSbMTd.s 			page 7


 264:Generated_Source\PSoC5/Timer1.c **** ********************************************************************************
 265:Generated_Source\PSoC5/Timer1.c **** *
 266:Generated_Source\PSoC5/Timer1.c **** * Summary:
 267:Generated_Source\PSoC5/Timer1.c **** *  This function selects which of the interrupt inputs may cause an interrupt.
 268:Generated_Source\PSoC5/Timer1.c **** *  The twosources are caputure and terminal.  One, both or neither may
 269:Generated_Source\PSoC5/Timer1.c **** *  be selected.
 270:Generated_Source\PSoC5/Timer1.c **** *
 271:Generated_Source\PSoC5/Timer1.c **** * Parameters:
 272:Generated_Source\PSoC5/Timer1.c **** *  interruptMode:   This parameter is used to enable interrups on either/or
 273:Generated_Source\PSoC5/Timer1.c **** *                   terminal count or capture.
 274:Generated_Source\PSoC5/Timer1.c **** *
 275:Generated_Source\PSoC5/Timer1.c **** * Return:
 276:Generated_Source\PSoC5/Timer1.c **** *  void
 277:Generated_Source\PSoC5/Timer1.c **** *
 278:Generated_Source\PSoC5/Timer1.c **** *******************************************************************************/
 279:Generated_Source\PSoC5/Timer1.c **** void Timer1_SetInterruptMode(uint8 interruptMode) 
 280:Generated_Source\PSoC5/Timer1.c **** {
  80              		.loc 1 280 0
  81              		.cfi_startproc
  82              		@ args = 0, pretend = 0, frame = 0
  83              		@ frame_needed = 0, uses_anonymous_args = 0
  84              		@ link register save eliminated.
  85              	.LVL0:
 281:Generated_Source\PSoC5/Timer1.c ****     Timer1_STATUS_MASK = interruptMode;
  86              		.loc 1 281 0
  87 0000 014B     		ldr	r3, .L8
  88 0002 1870     		strb	r0, [r3]
  89 0004 7047     		bx	lr
  90              	.L9:
  91 0006 00BF     		.align	2
  92              	.L8:
  93 0008 87650040 		.word	1073767815
  94              		.cfi_endproc
  95              	.LFE4:
  96              		.size	Timer1_SetInterruptMode, .-Timer1_SetInterruptMode
  97              		.section	.text.Timer1_SoftwareCapture,"ax",%progbits
  98              		.align	2
  99              		.global	Timer1_SoftwareCapture
 100              		.thumb
 101              		.thumb_func
 102              		.type	Timer1_SoftwareCapture, %function
 103              	Timer1_SoftwareCapture:
 104              	.LFB5:
 282:Generated_Source\PSoC5/Timer1.c **** }
 283:Generated_Source\PSoC5/Timer1.c **** 
 284:Generated_Source\PSoC5/Timer1.c **** 
 285:Generated_Source\PSoC5/Timer1.c **** /*******************************************************************************
 286:Generated_Source\PSoC5/Timer1.c **** * Function Name: Timer1_SoftwareCapture
 287:Generated_Source\PSoC5/Timer1.c **** ********************************************************************************
 288:Generated_Source\PSoC5/Timer1.c **** *
 289:Generated_Source\PSoC5/Timer1.c **** * Summary:
 290:Generated_Source\PSoC5/Timer1.c **** *  This function forces a capture independent of the capture signal.
 291:Generated_Source\PSoC5/Timer1.c **** *
 292:Generated_Source\PSoC5/Timer1.c **** * Parameters:
 293:Generated_Source\PSoC5/Timer1.c **** *  void
 294:Generated_Source\PSoC5/Timer1.c **** *
 295:Generated_Source\PSoC5/Timer1.c **** * Return:
ARM GAS  C:\Users\BRIAN~1.SEA\AppData\Local\Temp\ccoSbMTd.s 			page 8


 296:Generated_Source\PSoC5/Timer1.c **** *  void
 297:Generated_Source\PSoC5/Timer1.c **** *
 298:Generated_Source\PSoC5/Timer1.c **** * Side Effects:
 299:Generated_Source\PSoC5/Timer1.c **** *  An existing hardware capture could be overwritten.
 300:Generated_Source\PSoC5/Timer1.c **** *
 301:Generated_Source\PSoC5/Timer1.c **** *******************************************************************************/
 302:Generated_Source\PSoC5/Timer1.c **** void Timer1_SoftwareCapture(void) 
 303:Generated_Source\PSoC5/Timer1.c **** {
 105              		.loc 1 303 0
 106              		.cfi_startproc
 107              		@ args = 0, pretend = 0, frame = 0
 108              		@ frame_needed = 0, uses_anonymous_args = 0
 109              		@ link register save eliminated.
 304:Generated_Source\PSoC5/Timer1.c ****     /* Generate a software capture by reading the counter register */
 305:Generated_Source\PSoC5/Timer1.c ****     #if(Timer1_UsingFixedFunction)
 306:Generated_Source\PSoC5/Timer1.c ****         (void)CY_GET_REG16(Timer1_COUNTER_LSB_PTR);
 307:Generated_Source\PSoC5/Timer1.c ****     #else
 308:Generated_Source\PSoC5/Timer1.c ****         (void)CY_GET_REG8(Timer1_COUNTER_LSB_PTR_8BIT);
 110              		.loc 1 308 0
 111 0000 014B     		ldr	r3, .L11
 112 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 113 0004 7047     		bx	lr
 114              	.L12:
 115 0006 00BF     		.align	2
 116              	.L11:
 117 0008 04650040 		.word	1073767684
 118              		.cfi_endproc
 119              	.LFE5:
 120              		.size	Timer1_SoftwareCapture, .-Timer1_SoftwareCapture
 121              		.section	.text.Timer1_ReadStatusRegister,"ax",%progbits
 122              		.align	2
 123              		.global	Timer1_ReadStatusRegister
 124              		.thumb
 125              		.thumb_func
 126              		.type	Timer1_ReadStatusRegister, %function
 127              	Timer1_ReadStatusRegister:
 128              	.LFB6:
 309:Generated_Source\PSoC5/Timer1.c ****     #endif/* (Timer1_UsingFixedFunction) */
 310:Generated_Source\PSoC5/Timer1.c ****     /* Capture Data is now in the FIFO */
 311:Generated_Source\PSoC5/Timer1.c **** }
 312:Generated_Source\PSoC5/Timer1.c **** 
 313:Generated_Source\PSoC5/Timer1.c **** 
 314:Generated_Source\PSoC5/Timer1.c **** /*******************************************************************************
 315:Generated_Source\PSoC5/Timer1.c **** * Function Name: Timer1_ReadStatusRegister
 316:Generated_Source\PSoC5/Timer1.c **** ********************************************************************************
 317:Generated_Source\PSoC5/Timer1.c **** *
 318:Generated_Source\PSoC5/Timer1.c **** * Summary:
 319:Generated_Source\PSoC5/Timer1.c **** *  Reads the status register and returns it's state. This function should use
 320:Generated_Source\PSoC5/Timer1.c **** *  defined types for the bit-field information as the bits in this register may
 321:Generated_Source\PSoC5/Timer1.c **** *  be permuteable.
 322:Generated_Source\PSoC5/Timer1.c **** *
 323:Generated_Source\PSoC5/Timer1.c **** * Parameters:
 324:Generated_Source\PSoC5/Timer1.c **** *  void
 325:Generated_Source\PSoC5/Timer1.c **** *
 326:Generated_Source\PSoC5/Timer1.c **** * Return:
 327:Generated_Source\PSoC5/Timer1.c **** *  The contents of the status register
 328:Generated_Source\PSoC5/Timer1.c **** *
ARM GAS  C:\Users\BRIAN~1.SEA\AppData\Local\Temp\ccoSbMTd.s 			page 9


 329:Generated_Source\PSoC5/Timer1.c **** * Side Effects:
 330:Generated_Source\PSoC5/Timer1.c **** *  Status register bits may be clear on read.
 331:Generated_Source\PSoC5/Timer1.c **** *
 332:Generated_Source\PSoC5/Timer1.c **** *******************************************************************************/
 333:Generated_Source\PSoC5/Timer1.c **** uint8   Timer1_ReadStatusRegister(void) 
 334:Generated_Source\PSoC5/Timer1.c **** {
 129              		.loc 1 334 0
 130              		.cfi_startproc
 131              		@ args = 0, pretend = 0, frame = 0
 132              		@ frame_needed = 0, uses_anonymous_args = 0
 133              		@ link register save eliminated.
 335:Generated_Source\PSoC5/Timer1.c ****     return (Timer1_STATUS);
 134              		.loc 1 335 0
 135 0000 014B     		ldr	r3, .L14
 136 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 336:Generated_Source\PSoC5/Timer1.c **** }
 137              		.loc 1 336 0
 138 0004 7047     		bx	lr
 139              	.L15:
 140 0006 00BF     		.align	2
 141              	.L14:
 142 0008 67650040 		.word	1073767783
 143              		.cfi_endproc
 144              	.LFE6:
 145              		.size	Timer1_ReadStatusRegister, .-Timer1_ReadStatusRegister
 146              		.section	.text.Timer1_ReadControlRegister,"ax",%progbits
 147              		.align	2
 148              		.global	Timer1_ReadControlRegister
 149              		.thumb
 150              		.thumb_func
 151              		.type	Timer1_ReadControlRegister, %function
 152              	Timer1_ReadControlRegister:
 153              	.LFB7:
 337:Generated_Source\PSoC5/Timer1.c **** 
 338:Generated_Source\PSoC5/Timer1.c **** 
 339:Generated_Source\PSoC5/Timer1.c **** #if (!Timer1_UDB_CONTROL_REG_REMOVED) /* Remove API if control register is unused */
 340:Generated_Source\PSoC5/Timer1.c **** 
 341:Generated_Source\PSoC5/Timer1.c **** 
 342:Generated_Source\PSoC5/Timer1.c **** /*******************************************************************************
 343:Generated_Source\PSoC5/Timer1.c **** * Function Name: Timer1_ReadControlRegister
 344:Generated_Source\PSoC5/Timer1.c **** ********************************************************************************
 345:Generated_Source\PSoC5/Timer1.c **** *
 346:Generated_Source\PSoC5/Timer1.c **** * Summary:
 347:Generated_Source\PSoC5/Timer1.c **** *  Reads the control register and returns it's value.
 348:Generated_Source\PSoC5/Timer1.c **** *
 349:Generated_Source\PSoC5/Timer1.c **** * Parameters:
 350:Generated_Source\PSoC5/Timer1.c **** *  void
 351:Generated_Source\PSoC5/Timer1.c **** *
 352:Generated_Source\PSoC5/Timer1.c **** * Return:
 353:Generated_Source\PSoC5/Timer1.c **** *  The contents of the control register
 354:Generated_Source\PSoC5/Timer1.c **** *
 355:Generated_Source\PSoC5/Timer1.c **** *******************************************************************************/
 356:Generated_Source\PSoC5/Timer1.c **** uint8 Timer1_ReadControlRegister(void) 
 357:Generated_Source\PSoC5/Timer1.c **** {
 154              		.loc 1 357 0
 155              		.cfi_startproc
 156              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\BRIAN~1.SEA\AppData\Local\Temp\ccoSbMTd.s 			page 10


 157              		@ frame_needed = 0, uses_anonymous_args = 0
 158              		@ link register save eliminated.
 358:Generated_Source\PSoC5/Timer1.c ****     #if (!Timer1_UDB_CONTROL_REG_REMOVED) 
 359:Generated_Source\PSoC5/Timer1.c ****         return ((uint8)Timer1_CONTROL);
 159              		.loc 1 359 0
 160 0000 014B     		ldr	r3, .L17
 161 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 360:Generated_Source\PSoC5/Timer1.c ****     #else
 361:Generated_Source\PSoC5/Timer1.c ****         return (0);
 362:Generated_Source\PSoC5/Timer1.c ****     #endif /* (!Timer1_UDB_CONTROL_REG_REMOVED) */
 363:Generated_Source\PSoC5/Timer1.c **** }
 162              		.loc 1 363 0
 163 0004 7047     		bx	lr
 164              	.L18:
 165 0006 00BF     		.align	2
 166              	.L17:
 167 0008 77650040 		.word	1073767799
 168              		.cfi_endproc
 169              	.LFE7:
 170              		.size	Timer1_ReadControlRegister, .-Timer1_ReadControlRegister
 171              		.section	.text.Timer1_WriteControlRegister,"ax",%progbits
 172              		.align	2
 173              		.global	Timer1_WriteControlRegister
 174              		.thumb
 175              		.thumb_func
 176              		.type	Timer1_WriteControlRegister, %function
 177              	Timer1_WriteControlRegister:
 178              	.LFB8:
 364:Generated_Source\PSoC5/Timer1.c **** 
 365:Generated_Source\PSoC5/Timer1.c **** 
 366:Generated_Source\PSoC5/Timer1.c **** /*******************************************************************************
 367:Generated_Source\PSoC5/Timer1.c **** * Function Name: Timer1_WriteControlRegister
 368:Generated_Source\PSoC5/Timer1.c **** ********************************************************************************
 369:Generated_Source\PSoC5/Timer1.c **** *
 370:Generated_Source\PSoC5/Timer1.c **** * Summary:
 371:Generated_Source\PSoC5/Timer1.c **** *  Sets the bit-field of the control register.
 372:Generated_Source\PSoC5/Timer1.c **** *
 373:Generated_Source\PSoC5/Timer1.c **** * Parameters:
 374:Generated_Source\PSoC5/Timer1.c **** *  control: The contents of the control register
 375:Generated_Source\PSoC5/Timer1.c **** *
 376:Generated_Source\PSoC5/Timer1.c **** * Return:
 377:Generated_Source\PSoC5/Timer1.c **** *
 378:Generated_Source\PSoC5/Timer1.c **** *******************************************************************************/
 379:Generated_Source\PSoC5/Timer1.c **** void Timer1_WriteControlRegister(uint8 control) 
 380:Generated_Source\PSoC5/Timer1.c **** {
 179              		.loc 1 380 0
 180              		.cfi_startproc
 181              		@ args = 0, pretend = 0, frame = 0
 182              		@ frame_needed = 0, uses_anonymous_args = 0
 183              		@ link register save eliminated.
 184              	.LVL1:
 381:Generated_Source\PSoC5/Timer1.c ****     #if (!Timer1_UDB_CONTROL_REG_REMOVED) 
 382:Generated_Source\PSoC5/Timer1.c ****         Timer1_CONTROL = control;
 185              		.loc 1 382 0
 186 0000 014B     		ldr	r3, .L20
 187 0002 1870     		strb	r0, [r3]
 188 0004 7047     		bx	lr
ARM GAS  C:\Users\BRIAN~1.SEA\AppData\Local\Temp\ccoSbMTd.s 			page 11


 189              	.L21:
 190 0006 00BF     		.align	2
 191              	.L20:
 192 0008 77650040 		.word	1073767799
 193              		.cfi_endproc
 194              	.LFE8:
 195              		.size	Timer1_WriteControlRegister, .-Timer1_WriteControlRegister
 196              		.section	.text.Timer1_ReadPeriod,"ax",%progbits
 197              		.align	2
 198              		.global	Timer1_ReadPeriod
 199              		.thumb
 200              		.thumb_func
 201              		.type	Timer1_ReadPeriod, %function
 202              	Timer1_ReadPeriod:
 203              	.LFB9:
 383:Generated_Source\PSoC5/Timer1.c ****     #else
 384:Generated_Source\PSoC5/Timer1.c ****         control = 0u;
 385:Generated_Source\PSoC5/Timer1.c ****     #endif /* (!Timer1_UDB_CONTROL_REG_REMOVED) */
 386:Generated_Source\PSoC5/Timer1.c **** }
 387:Generated_Source\PSoC5/Timer1.c **** 
 388:Generated_Source\PSoC5/Timer1.c **** #endif /* Remove API if control register is unused */
 389:Generated_Source\PSoC5/Timer1.c **** 
 390:Generated_Source\PSoC5/Timer1.c **** 
 391:Generated_Source\PSoC5/Timer1.c **** /*******************************************************************************
 392:Generated_Source\PSoC5/Timer1.c **** * Function Name: Timer1_ReadPeriod
 393:Generated_Source\PSoC5/Timer1.c **** ********************************************************************************
 394:Generated_Source\PSoC5/Timer1.c **** *
 395:Generated_Source\PSoC5/Timer1.c **** * Summary:
 396:Generated_Source\PSoC5/Timer1.c **** *  This function returns the current value of the Period.
 397:Generated_Source\PSoC5/Timer1.c **** *
 398:Generated_Source\PSoC5/Timer1.c **** * Parameters:
 399:Generated_Source\PSoC5/Timer1.c **** *  void
 400:Generated_Source\PSoC5/Timer1.c **** *
 401:Generated_Source\PSoC5/Timer1.c **** * Return:
 402:Generated_Source\PSoC5/Timer1.c **** *  The present value of the counter.
 403:Generated_Source\PSoC5/Timer1.c **** *
 404:Generated_Source\PSoC5/Timer1.c **** *******************************************************************************/
 405:Generated_Source\PSoC5/Timer1.c **** uint32 Timer1_ReadPeriod(void) 
 406:Generated_Source\PSoC5/Timer1.c **** {
 204              		.loc 1 406 0
 205              		.cfi_startproc
 206              		@ args = 0, pretend = 0, frame = 0
 207              		@ frame_needed = 0, uses_anonymous_args = 0
 208              		@ link register save eliminated.
 407:Generated_Source\PSoC5/Timer1.c ****    #if(Timer1_UsingFixedFunction)
 408:Generated_Source\PSoC5/Timer1.c ****        return ((uint32)CY_GET_REG16(Timer1_PERIOD_LSB_PTR));
 409:Generated_Source\PSoC5/Timer1.c ****    #else
 410:Generated_Source\PSoC5/Timer1.c ****        return (CY_GET_REG32(Timer1_PERIOD_LSB_PTR));
 209              		.loc 1 410 0
 210 0000 014B     		ldr	r3, .L23
 211 0002 1868     		ldr	r0, [r3]
 411:Generated_Source\PSoC5/Timer1.c ****    #endif /* (Timer1_UsingFixedFunction) */
 412:Generated_Source\PSoC5/Timer1.c **** }
 212              		.loc 1 412 0
 213 0004 7047     		bx	lr
 214              	.L24:
 215 0006 00BF     		.align	2
ARM GAS  C:\Users\BRIAN~1.SEA\AppData\Local\Temp\ccoSbMTd.s 			page 12


 216              	.L23:
 217 0008 24650040 		.word	1073767716
 218              		.cfi_endproc
 219              	.LFE9:
 220              		.size	Timer1_ReadPeriod, .-Timer1_ReadPeriod
 221              		.section	.text.Timer1_WritePeriod,"ax",%progbits
 222              		.align	2
 223              		.global	Timer1_WritePeriod
 224              		.thumb
 225              		.thumb_func
 226              		.type	Timer1_WritePeriod, %function
 227              	Timer1_WritePeriod:
 228              	.LFB10:
 413:Generated_Source\PSoC5/Timer1.c **** 
 414:Generated_Source\PSoC5/Timer1.c **** 
 415:Generated_Source\PSoC5/Timer1.c **** /*******************************************************************************
 416:Generated_Source\PSoC5/Timer1.c **** * Function Name: Timer1_WritePeriod
 417:Generated_Source\PSoC5/Timer1.c **** ********************************************************************************
 418:Generated_Source\PSoC5/Timer1.c **** *
 419:Generated_Source\PSoC5/Timer1.c **** * Summary:
 420:Generated_Source\PSoC5/Timer1.c **** *  This function is used to change the period of the counter.  The new period
 421:Generated_Source\PSoC5/Timer1.c **** *  will be loaded the next time terminal count is detected.
 422:Generated_Source\PSoC5/Timer1.c **** *
 423:Generated_Source\PSoC5/Timer1.c **** * Parameters:
 424:Generated_Source\PSoC5/Timer1.c **** *  period: This value may be between 1 and (2^Resolution)-1.  A value of 0 will
 425:Generated_Source\PSoC5/Timer1.c **** *          result in the counter remaining at zero.
 426:Generated_Source\PSoC5/Timer1.c **** *
 427:Generated_Source\PSoC5/Timer1.c **** * Return:
 428:Generated_Source\PSoC5/Timer1.c **** *  void
 429:Generated_Source\PSoC5/Timer1.c **** *
 430:Generated_Source\PSoC5/Timer1.c **** *******************************************************************************/
 431:Generated_Source\PSoC5/Timer1.c **** void Timer1_WritePeriod(uint32 period) 
 432:Generated_Source\PSoC5/Timer1.c **** {
 229              		.loc 1 432 0
 230              		.cfi_startproc
 231              		@ args = 0, pretend = 0, frame = 0
 232              		@ frame_needed = 0, uses_anonymous_args = 0
 233              		@ link register save eliminated.
 234              	.LVL2:
 433:Generated_Source\PSoC5/Timer1.c ****     #if(Timer1_UsingFixedFunction)
 434:Generated_Source\PSoC5/Timer1.c ****         uint16 period_temp = (uint16)period;
 435:Generated_Source\PSoC5/Timer1.c ****         CY_SET_REG16(Timer1_PERIOD_LSB_PTR, period_temp);
 436:Generated_Source\PSoC5/Timer1.c ****     #else
 437:Generated_Source\PSoC5/Timer1.c ****         CY_SET_REG32(Timer1_PERIOD_LSB_PTR, period);
 235              		.loc 1 437 0
 236 0000 014B     		ldr	r3, .L26
 237 0002 1860     		str	r0, [r3]
 238 0004 7047     		bx	lr
 239              	.L27:
 240 0006 00BF     		.align	2
 241              	.L26:
 242 0008 24650040 		.word	1073767716
 243              		.cfi_endproc
 244              	.LFE10:
 245              		.size	Timer1_WritePeriod, .-Timer1_WritePeriod
 246              		.section	.text.Timer1_ReadCapture,"ax",%progbits
 247              		.align	2
ARM GAS  C:\Users\BRIAN~1.SEA\AppData\Local\Temp\ccoSbMTd.s 			page 13


 248              		.global	Timer1_ReadCapture
 249              		.thumb
 250              		.thumb_func
 251              		.type	Timer1_ReadCapture, %function
 252              	Timer1_ReadCapture:
 253              	.LFB11:
 438:Generated_Source\PSoC5/Timer1.c ****     #endif /*Write Period value with appropriate resolution suffix depending on UDB or fixed functi
 439:Generated_Source\PSoC5/Timer1.c **** }
 440:Generated_Source\PSoC5/Timer1.c **** 
 441:Generated_Source\PSoC5/Timer1.c **** 
 442:Generated_Source\PSoC5/Timer1.c **** /*******************************************************************************
 443:Generated_Source\PSoC5/Timer1.c **** * Function Name: Timer1_ReadCapture
 444:Generated_Source\PSoC5/Timer1.c **** ********************************************************************************
 445:Generated_Source\PSoC5/Timer1.c **** *
 446:Generated_Source\PSoC5/Timer1.c **** * Summary:
 447:Generated_Source\PSoC5/Timer1.c **** *  This function returns the last value captured.
 448:Generated_Source\PSoC5/Timer1.c **** *
 449:Generated_Source\PSoC5/Timer1.c **** * Parameters:
 450:Generated_Source\PSoC5/Timer1.c **** *  void
 451:Generated_Source\PSoC5/Timer1.c **** *
 452:Generated_Source\PSoC5/Timer1.c **** * Return:
 453:Generated_Source\PSoC5/Timer1.c **** *  Present Capture value.
 454:Generated_Source\PSoC5/Timer1.c **** *
 455:Generated_Source\PSoC5/Timer1.c **** *******************************************************************************/
 456:Generated_Source\PSoC5/Timer1.c **** uint32 Timer1_ReadCapture(void) 
 457:Generated_Source\PSoC5/Timer1.c **** {
 254              		.loc 1 457 0
 255              		.cfi_startproc
 256              		@ args = 0, pretend = 0, frame = 0
 257              		@ frame_needed = 0, uses_anonymous_args = 0
 258              		@ link register save eliminated.
 458:Generated_Source\PSoC5/Timer1.c ****    #if(Timer1_UsingFixedFunction)
 459:Generated_Source\PSoC5/Timer1.c ****        return ((uint32)CY_GET_REG16(Timer1_CAPTURE_LSB_PTR));
 460:Generated_Source\PSoC5/Timer1.c ****    #else
 461:Generated_Source\PSoC5/Timer1.c ****        return (CY_GET_REG32(Timer1_CAPTURE_LSB_PTR));
 259              		.loc 1 461 0
 260 0000 014B     		ldr	r3, .L29
 261 0002 1868     		ldr	r0, [r3]
 462:Generated_Source\PSoC5/Timer1.c ****    #endif /* (Timer1_UsingFixedFunction) */
 463:Generated_Source\PSoC5/Timer1.c **** }
 262              		.loc 1 463 0
 263 0004 7047     		bx	lr
 264              	.L30:
 265 0006 00BF     		.align	2
 266              	.L29:
 267 0008 44650040 		.word	1073767748
 268              		.cfi_endproc
 269              	.LFE11:
 270              		.size	Timer1_ReadCapture, .-Timer1_ReadCapture
 271              		.section	.text.Timer1_WriteCounter,"ax",%progbits
 272              		.align	2
 273              		.global	Timer1_WriteCounter
 274              		.thumb
 275              		.thumb_func
 276              		.type	Timer1_WriteCounter, %function
 277              	Timer1_WriteCounter:
 278              	.LFB12:
ARM GAS  C:\Users\BRIAN~1.SEA\AppData\Local\Temp\ccoSbMTd.s 			page 14


 464:Generated_Source\PSoC5/Timer1.c **** 
 465:Generated_Source\PSoC5/Timer1.c **** 
 466:Generated_Source\PSoC5/Timer1.c **** /*******************************************************************************
 467:Generated_Source\PSoC5/Timer1.c **** * Function Name: Timer1_WriteCounter
 468:Generated_Source\PSoC5/Timer1.c **** ********************************************************************************
 469:Generated_Source\PSoC5/Timer1.c **** *
 470:Generated_Source\PSoC5/Timer1.c **** * Summary:
 471:Generated_Source\PSoC5/Timer1.c **** *  This funtion is used to set the counter to a specific value
 472:Generated_Source\PSoC5/Timer1.c **** *
 473:Generated_Source\PSoC5/Timer1.c **** * Parameters:
 474:Generated_Source\PSoC5/Timer1.c **** *  counter:  New counter value.
 475:Generated_Source\PSoC5/Timer1.c **** *
 476:Generated_Source\PSoC5/Timer1.c **** * Return:
 477:Generated_Source\PSoC5/Timer1.c **** *  void
 478:Generated_Source\PSoC5/Timer1.c **** *
 479:Generated_Source\PSoC5/Timer1.c **** *******************************************************************************/
 480:Generated_Source\PSoC5/Timer1.c **** void Timer1_WriteCounter(uint32 counter) 
 481:Generated_Source\PSoC5/Timer1.c **** {
 279              		.loc 1 481 0
 280              		.cfi_startproc
 281              		@ args = 0, pretend = 0, frame = 0
 282              		@ frame_needed = 0, uses_anonymous_args = 0
 283              		@ link register save eliminated.
 284              	.LVL3:
 482:Generated_Source\PSoC5/Timer1.c ****    #if(Timer1_UsingFixedFunction)
 483:Generated_Source\PSoC5/Timer1.c ****         /* This functionality is removed until a FixedFunction HW update to
 484:Generated_Source\PSoC5/Timer1.c ****          * allow this register to be written
 485:Generated_Source\PSoC5/Timer1.c ****          */
 486:Generated_Source\PSoC5/Timer1.c ****         CY_SET_REG16(Timer1_COUNTER_LSB_PTR, (uint16)counter);
 487:Generated_Source\PSoC5/Timer1.c ****         
 488:Generated_Source\PSoC5/Timer1.c ****     #else
 489:Generated_Source\PSoC5/Timer1.c ****         CY_SET_REG32(Timer1_COUNTER_LSB_PTR, counter);
 285              		.loc 1 489 0
 286 0000 014B     		ldr	r3, .L32
 287 0002 1860     		str	r0, [r3]
 288 0004 7047     		bx	lr
 289              	.L33:
 290 0006 00BF     		.align	2
 291              	.L32:
 292 0008 04650040 		.word	1073767684
 293              		.cfi_endproc
 294              	.LFE12:
 295              		.size	Timer1_WriteCounter, .-Timer1_WriteCounter
 296              		.section	.text.Timer1_ReadCounter,"ax",%progbits
 297              		.align	2
 298              		.global	Timer1_ReadCounter
 299              		.thumb
 300              		.thumb_func
 301              		.type	Timer1_ReadCounter, %function
 302              	Timer1_ReadCounter:
 303              	.LFB13:
 490:Generated_Source\PSoC5/Timer1.c ****     #endif /* Set Write Counter only for the UDB implementation (Write Counter not available in fix
 491:Generated_Source\PSoC5/Timer1.c **** }
 492:Generated_Source\PSoC5/Timer1.c **** 
 493:Generated_Source\PSoC5/Timer1.c **** 
 494:Generated_Source\PSoC5/Timer1.c **** /*******************************************************************************
 495:Generated_Source\PSoC5/Timer1.c **** * Function Name: Timer1_ReadCounter
ARM GAS  C:\Users\BRIAN~1.SEA\AppData\Local\Temp\ccoSbMTd.s 			page 15


 496:Generated_Source\PSoC5/Timer1.c **** ********************************************************************************
 497:Generated_Source\PSoC5/Timer1.c **** *
 498:Generated_Source\PSoC5/Timer1.c **** * Summary:
 499:Generated_Source\PSoC5/Timer1.c **** *  This function returns the current counter value.
 500:Generated_Source\PSoC5/Timer1.c **** *
 501:Generated_Source\PSoC5/Timer1.c **** * Parameters:
 502:Generated_Source\PSoC5/Timer1.c **** *  void
 503:Generated_Source\PSoC5/Timer1.c **** *
 504:Generated_Source\PSoC5/Timer1.c **** * Return:
 505:Generated_Source\PSoC5/Timer1.c **** *  Present compare value.
 506:Generated_Source\PSoC5/Timer1.c **** *
 507:Generated_Source\PSoC5/Timer1.c **** *******************************************************************************/
 508:Generated_Source\PSoC5/Timer1.c **** uint32 Timer1_ReadCounter(void) 
 509:Generated_Source\PSoC5/Timer1.c **** {
 304              		.loc 1 509 0
 305              		.cfi_startproc
 306              		@ args = 0, pretend = 0, frame = 0
 307              		@ frame_needed = 0, uses_anonymous_args = 0
 308              		@ link register save eliminated.
 510:Generated_Source\PSoC5/Timer1.c ****     /* Force capture by reading Accumulator */
 511:Generated_Source\PSoC5/Timer1.c ****     /* Must first do a software capture to be able to read the counter */
 512:Generated_Source\PSoC5/Timer1.c ****     /* It is up to the user code to make sure there isn't already captured data in the FIFO */
 513:Generated_Source\PSoC5/Timer1.c ****     #if(Timer1_UsingFixedFunction)
 514:Generated_Source\PSoC5/Timer1.c ****         (void)CY_GET_REG16(Timer1_COUNTER_LSB_PTR);
 515:Generated_Source\PSoC5/Timer1.c ****     #else
 516:Generated_Source\PSoC5/Timer1.c ****         (void)CY_GET_REG8(Timer1_COUNTER_LSB_PTR_8BIT);
 309              		.loc 1 516 0
 310 0000 024B     		ldr	r3, .L35
 311 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 517:Generated_Source\PSoC5/Timer1.c ****     #endif/* (Timer1_UsingFixedFunction) */
 518:Generated_Source\PSoC5/Timer1.c **** 
 519:Generated_Source\PSoC5/Timer1.c ****     /* Read the data from the FIFO (or capture register for Fixed Function)*/
 520:Generated_Source\PSoC5/Timer1.c ****     #if(Timer1_UsingFixedFunction)
 521:Generated_Source\PSoC5/Timer1.c ****         return ((uint32)CY_GET_REG16(Timer1_CAPTURE_LSB_PTR));
 522:Generated_Source\PSoC5/Timer1.c ****     #else
 523:Generated_Source\PSoC5/Timer1.c ****         return (CY_GET_REG32(Timer1_CAPTURE_LSB_PTR));
 312              		.loc 1 523 0
 313 0004 024B     		ldr	r3, .L35+4
 314 0006 1868     		ldr	r0, [r3]
 524:Generated_Source\PSoC5/Timer1.c ****     #endif /* (Timer1_UsingFixedFunction) */
 525:Generated_Source\PSoC5/Timer1.c **** }
 315              		.loc 1 525 0
 316 0008 7047     		bx	lr
 317              	.L36:
 318 000a 00BF     		.align	2
 319              	.L35:
 320 000c 04650040 		.word	1073767684
 321 0010 44650040 		.word	1073767748
 322              		.cfi_endproc
 323              	.LFE13:
 324              		.size	Timer1_ReadCounter, .-Timer1_ReadCounter
 325              		.section	.text.Timer1_ClearFIFO,"ax",%progbits
 326              		.align	2
 327              		.global	Timer1_ClearFIFO
 328              		.thumb
 329              		.thumb_func
 330              		.type	Timer1_ClearFIFO, %function
ARM GAS  C:\Users\BRIAN~1.SEA\AppData\Local\Temp\ccoSbMTd.s 			page 16


 331              	Timer1_ClearFIFO:
 332              	.LFB14:
 526:Generated_Source\PSoC5/Timer1.c **** 
 527:Generated_Source\PSoC5/Timer1.c **** 
 528:Generated_Source\PSoC5/Timer1.c **** #if(!Timer1_UsingFixedFunction) /* UDB Specific Functions */
 529:Generated_Source\PSoC5/Timer1.c **** 
 530:Generated_Source\PSoC5/Timer1.c ****     
 531:Generated_Source\PSoC5/Timer1.c **** /*******************************************************************************
 532:Generated_Source\PSoC5/Timer1.c ****  * The functions below this point are only available using the UDB
 533:Generated_Source\PSoC5/Timer1.c ****  * implementation.  If a feature is selected, then the API is enabled.
 534:Generated_Source\PSoC5/Timer1.c ****  ******************************************************************************/
 535:Generated_Source\PSoC5/Timer1.c **** 
 536:Generated_Source\PSoC5/Timer1.c **** 
 537:Generated_Source\PSoC5/Timer1.c **** #if (Timer1_SoftwareCaptureMode)
 538:Generated_Source\PSoC5/Timer1.c **** 
 539:Generated_Source\PSoC5/Timer1.c **** 
 540:Generated_Source\PSoC5/Timer1.c **** /*******************************************************************************
 541:Generated_Source\PSoC5/Timer1.c **** * Function Name: Timer1_SetCaptureMode
 542:Generated_Source\PSoC5/Timer1.c **** ********************************************************************************
 543:Generated_Source\PSoC5/Timer1.c **** *
 544:Generated_Source\PSoC5/Timer1.c **** * Summary:
 545:Generated_Source\PSoC5/Timer1.c **** *  This function sets the capture mode to either rising or falling edge.
 546:Generated_Source\PSoC5/Timer1.c **** *
 547:Generated_Source\PSoC5/Timer1.c **** * Parameters:
 548:Generated_Source\PSoC5/Timer1.c **** *  captureMode: This parameter sets the capture mode of the UDB capture feature
 549:Generated_Source\PSoC5/Timer1.c **** *  The parameter values are defined using the
 550:Generated_Source\PSoC5/Timer1.c **** *  #define Timer1__B_TIMER__CM_NONE 0
 551:Generated_Source\PSoC5/Timer1.c **** #define Timer1__B_TIMER__CM_RISINGEDGE 1
 552:Generated_Source\PSoC5/Timer1.c **** #define Timer1__B_TIMER__CM_FALLINGEDGE 2
 553:Generated_Source\PSoC5/Timer1.c **** #define Timer1__B_TIMER__CM_EITHEREDGE 3
 554:Generated_Source\PSoC5/Timer1.c **** #define Timer1__B_TIMER__CM_SOFTWARE 4
 555:Generated_Source\PSoC5/Timer1.c ****  identifiers
 556:Generated_Source\PSoC5/Timer1.c **** *  The following are the possible values of the parameter
 557:Generated_Source\PSoC5/Timer1.c **** *  Timer1__B_TIMER__CM_NONE        - Set Capture mode to None
 558:Generated_Source\PSoC5/Timer1.c **** *  Timer1__B_TIMER__CM_RISINGEDGE  - Rising edge of Capture input
 559:Generated_Source\PSoC5/Timer1.c **** *  Timer1__B_TIMER__CM_FALLINGEDGE - Falling edge of Capture input
 560:Generated_Source\PSoC5/Timer1.c **** *  Timer1__B_TIMER__CM_EITHEREDGE  - Either edge of Capture input
 561:Generated_Source\PSoC5/Timer1.c **** *
 562:Generated_Source\PSoC5/Timer1.c **** * Return:
 563:Generated_Source\PSoC5/Timer1.c **** *  void
 564:Generated_Source\PSoC5/Timer1.c **** *
 565:Generated_Source\PSoC5/Timer1.c **** *******************************************************************************/
 566:Generated_Source\PSoC5/Timer1.c **** void Timer1_SetCaptureMode(uint8 captureMode) 
 567:Generated_Source\PSoC5/Timer1.c **** {
 568:Generated_Source\PSoC5/Timer1.c ****     /* This must only set to two bits of the control register associated */
 569:Generated_Source\PSoC5/Timer1.c ****     captureMode = ((uint8)((uint8)captureMode << Timer1_CTRL_CAP_MODE_SHIFT));
 570:Generated_Source\PSoC5/Timer1.c ****     captureMode &= (Timer1_CTRL_CAP_MODE_MASK);
 571:Generated_Source\PSoC5/Timer1.c **** 
 572:Generated_Source\PSoC5/Timer1.c ****     #if (!Timer1_UDB_CONTROL_REG_REMOVED)
 573:Generated_Source\PSoC5/Timer1.c ****         /* Clear the Current Setting */
 574:Generated_Source\PSoC5/Timer1.c ****         Timer1_CONTROL &= ((uint8)(~Timer1_CTRL_CAP_MODE_MASK));
 575:Generated_Source\PSoC5/Timer1.c **** 
 576:Generated_Source\PSoC5/Timer1.c ****         /* Write The New Setting */
 577:Generated_Source\PSoC5/Timer1.c ****         Timer1_CONTROL |= captureMode;
 578:Generated_Source\PSoC5/Timer1.c ****     #endif /* (!Timer1_UDB_CONTROL_REG_REMOVED) */
 579:Generated_Source\PSoC5/Timer1.c **** }
 580:Generated_Source\PSoC5/Timer1.c **** #endif /* Remove API if Capture Mode is not Software Controlled */
ARM GAS  C:\Users\BRIAN~1.SEA\AppData\Local\Temp\ccoSbMTd.s 			page 17


 581:Generated_Source\PSoC5/Timer1.c **** 
 582:Generated_Source\PSoC5/Timer1.c **** 
 583:Generated_Source\PSoC5/Timer1.c **** #if (Timer1_SoftwareTriggerMode)
 584:Generated_Source\PSoC5/Timer1.c **** 
 585:Generated_Source\PSoC5/Timer1.c **** 
 586:Generated_Source\PSoC5/Timer1.c **** /*******************************************************************************
 587:Generated_Source\PSoC5/Timer1.c **** * Function Name: Timer1_SetTriggerMode
 588:Generated_Source\PSoC5/Timer1.c **** ********************************************************************************
 589:Generated_Source\PSoC5/Timer1.c **** *
 590:Generated_Source\PSoC5/Timer1.c **** * Summary:
 591:Generated_Source\PSoC5/Timer1.c **** *  This function sets the trigger input mode
 592:Generated_Source\PSoC5/Timer1.c **** *
 593:Generated_Source\PSoC5/Timer1.c **** * Parameters:
 594:Generated_Source\PSoC5/Timer1.c **** *  triggerMode: Pass one of the pre-defined Trigger Modes (except Software)
 595:Generated_Source\PSoC5/Timer1.c ****     #define Timer1__B_TIMER__TM_NONE 0x00u
 596:Generated_Source\PSoC5/Timer1.c ****     #define Timer1__B_TIMER__TM_RISINGEDGE 0x04u
 597:Generated_Source\PSoC5/Timer1.c ****     #define Timer1__B_TIMER__TM_FALLINGEDGE 0x08u
 598:Generated_Source\PSoC5/Timer1.c ****     #define Timer1__B_TIMER__TM_EITHEREDGE 0x0Cu
 599:Generated_Source\PSoC5/Timer1.c ****     #define Timer1__B_TIMER__TM_SOFTWARE 0x10u
 600:Generated_Source\PSoC5/Timer1.c **** *
 601:Generated_Source\PSoC5/Timer1.c **** * Return:
 602:Generated_Source\PSoC5/Timer1.c **** *  void
 603:Generated_Source\PSoC5/Timer1.c **** *
 604:Generated_Source\PSoC5/Timer1.c **** *******************************************************************************/
 605:Generated_Source\PSoC5/Timer1.c **** void Timer1_SetTriggerMode(uint8 triggerMode) 
 606:Generated_Source\PSoC5/Timer1.c **** {
 607:Generated_Source\PSoC5/Timer1.c ****     /* This must only set to two bits of the control register associated */
 608:Generated_Source\PSoC5/Timer1.c ****     triggerMode &= Timer1_CTRL_TRIG_MODE_MASK;
 609:Generated_Source\PSoC5/Timer1.c **** 
 610:Generated_Source\PSoC5/Timer1.c ****     #if (!Timer1_UDB_CONTROL_REG_REMOVED)   /* Remove assignment if control register is removed */
 611:Generated_Source\PSoC5/Timer1.c ****     
 612:Generated_Source\PSoC5/Timer1.c ****         /* Clear the Current Setting */
 613:Generated_Source\PSoC5/Timer1.c ****         Timer1_CONTROL &= ((uint8)(~Timer1_CTRL_TRIG_MODE_MASK));
 614:Generated_Source\PSoC5/Timer1.c **** 
 615:Generated_Source\PSoC5/Timer1.c ****         /* Write The New Setting */
 616:Generated_Source\PSoC5/Timer1.c ****         Timer1_CONTROL |= (triggerMode | Timer1__B_TIMER__TM_SOFTWARE);
 617:Generated_Source\PSoC5/Timer1.c ****     #endif /* Remove code section if control register is not used */
 618:Generated_Source\PSoC5/Timer1.c **** }
 619:Generated_Source\PSoC5/Timer1.c **** #endif /* Remove API if Trigger Mode is not Software Controlled */
 620:Generated_Source\PSoC5/Timer1.c **** 
 621:Generated_Source\PSoC5/Timer1.c **** #if (Timer1_EnableTriggerMode)
 622:Generated_Source\PSoC5/Timer1.c **** 
 623:Generated_Source\PSoC5/Timer1.c **** 
 624:Generated_Source\PSoC5/Timer1.c **** /*******************************************************************************
 625:Generated_Source\PSoC5/Timer1.c **** * Function Name: Timer1_EnableTrigger
 626:Generated_Source\PSoC5/Timer1.c **** ********************************************************************************
 627:Generated_Source\PSoC5/Timer1.c **** *
 628:Generated_Source\PSoC5/Timer1.c **** * Summary:
 629:Generated_Source\PSoC5/Timer1.c **** *  Sets the control bit enabling Hardware Trigger mode
 630:Generated_Source\PSoC5/Timer1.c **** *
 631:Generated_Source\PSoC5/Timer1.c **** * Parameters:
 632:Generated_Source\PSoC5/Timer1.c **** *  void
 633:Generated_Source\PSoC5/Timer1.c **** *
 634:Generated_Source\PSoC5/Timer1.c **** * Return:
 635:Generated_Source\PSoC5/Timer1.c **** *  void
 636:Generated_Source\PSoC5/Timer1.c **** *
 637:Generated_Source\PSoC5/Timer1.c **** *******************************************************************************/
ARM GAS  C:\Users\BRIAN~1.SEA\AppData\Local\Temp\ccoSbMTd.s 			page 18


 638:Generated_Source\PSoC5/Timer1.c **** void Timer1_EnableTrigger(void) 
 639:Generated_Source\PSoC5/Timer1.c **** {
 640:Generated_Source\PSoC5/Timer1.c ****     #if (!Timer1_UDB_CONTROL_REG_REMOVED)   /* Remove assignment if control register is removed */
 641:Generated_Source\PSoC5/Timer1.c ****         Timer1_CONTROL |= Timer1_CTRL_TRIG_EN;
 642:Generated_Source\PSoC5/Timer1.c ****     #endif /* Remove code section if control register is not used */
 643:Generated_Source\PSoC5/Timer1.c **** }
 644:Generated_Source\PSoC5/Timer1.c **** 
 645:Generated_Source\PSoC5/Timer1.c **** 
 646:Generated_Source\PSoC5/Timer1.c **** /*******************************************************************************
 647:Generated_Source\PSoC5/Timer1.c **** * Function Name: Timer1_DisableTrigger
 648:Generated_Source\PSoC5/Timer1.c **** ********************************************************************************
 649:Generated_Source\PSoC5/Timer1.c **** *
 650:Generated_Source\PSoC5/Timer1.c **** * Summary:
 651:Generated_Source\PSoC5/Timer1.c **** *  Clears the control bit enabling Hardware Trigger mode
 652:Generated_Source\PSoC5/Timer1.c **** *
 653:Generated_Source\PSoC5/Timer1.c **** * Parameters:
 654:Generated_Source\PSoC5/Timer1.c **** *  void
 655:Generated_Source\PSoC5/Timer1.c **** *
 656:Generated_Source\PSoC5/Timer1.c **** * Return:
 657:Generated_Source\PSoC5/Timer1.c **** *  void
 658:Generated_Source\PSoC5/Timer1.c **** *
 659:Generated_Source\PSoC5/Timer1.c **** *******************************************************************************/
 660:Generated_Source\PSoC5/Timer1.c **** void Timer1_DisableTrigger(void) 
 661:Generated_Source\PSoC5/Timer1.c **** {
 662:Generated_Source\PSoC5/Timer1.c ****     #if (!Timer1_UDB_CONTROL_REG_REMOVED )   /* Remove assignment if control register is removed */
 663:Generated_Source\PSoC5/Timer1.c ****         Timer1_CONTROL &= ((uint8)(~Timer1_CTRL_TRIG_EN));
 664:Generated_Source\PSoC5/Timer1.c ****     #endif /* Remove code section if control register is not used */
 665:Generated_Source\PSoC5/Timer1.c **** }
 666:Generated_Source\PSoC5/Timer1.c **** #endif /* Remove API is Trigger Mode is set to None */
 667:Generated_Source\PSoC5/Timer1.c **** 
 668:Generated_Source\PSoC5/Timer1.c **** #if(Timer1_InterruptOnCaptureCount)
 669:Generated_Source\PSoC5/Timer1.c **** 
 670:Generated_Source\PSoC5/Timer1.c **** 
 671:Generated_Source\PSoC5/Timer1.c **** /*******************************************************************************
 672:Generated_Source\PSoC5/Timer1.c **** * Function Name: Timer1_SetInterruptCount
 673:Generated_Source\PSoC5/Timer1.c **** ********************************************************************************
 674:Generated_Source\PSoC5/Timer1.c **** *
 675:Generated_Source\PSoC5/Timer1.c **** * Summary:
 676:Generated_Source\PSoC5/Timer1.c **** *  This function sets the capture count before an interrupt is triggered.
 677:Generated_Source\PSoC5/Timer1.c **** *
 678:Generated_Source\PSoC5/Timer1.c **** * Parameters:
 679:Generated_Source\PSoC5/Timer1.c **** *  interruptCount:  A value between 0 and 3 is valid.  If the value is 0, then
 680:Generated_Source\PSoC5/Timer1.c **** *                   an interrupt will occur each time a capture occurs.
 681:Generated_Source\PSoC5/Timer1.c **** *                   A value of 1 to 3 will cause the interrupt
 682:Generated_Source\PSoC5/Timer1.c **** *                   to delay by the same number of captures.
 683:Generated_Source\PSoC5/Timer1.c **** *
 684:Generated_Source\PSoC5/Timer1.c **** * Return:
 685:Generated_Source\PSoC5/Timer1.c **** *  void
 686:Generated_Source\PSoC5/Timer1.c **** *
 687:Generated_Source\PSoC5/Timer1.c **** *******************************************************************************/
 688:Generated_Source\PSoC5/Timer1.c **** void Timer1_SetInterruptCount(uint8 interruptCount) 
 689:Generated_Source\PSoC5/Timer1.c **** {
 690:Generated_Source\PSoC5/Timer1.c ****     /* This must only set to two bits of the control register associated */
 691:Generated_Source\PSoC5/Timer1.c ****     interruptCount &= Timer1_CTRL_INTCNT_MASK;
 692:Generated_Source\PSoC5/Timer1.c **** 
 693:Generated_Source\PSoC5/Timer1.c ****     #if (!Timer1_UDB_CONTROL_REG_REMOVED)
 694:Generated_Source\PSoC5/Timer1.c ****         /* Clear the Current Setting */
ARM GAS  C:\Users\BRIAN~1.SEA\AppData\Local\Temp\ccoSbMTd.s 			page 19


 695:Generated_Source\PSoC5/Timer1.c ****         Timer1_CONTROL &= ((uint8)(~Timer1_CTRL_INTCNT_MASK));
 696:Generated_Source\PSoC5/Timer1.c ****         /* Write The New Setting */
 697:Generated_Source\PSoC5/Timer1.c ****         Timer1_CONTROL |= interruptCount;
 698:Generated_Source\PSoC5/Timer1.c ****     #endif /* (!Timer1_UDB_CONTROL_REG_REMOVED) */
 699:Generated_Source\PSoC5/Timer1.c **** }
 700:Generated_Source\PSoC5/Timer1.c **** #endif /* Timer1_InterruptOnCaptureCount */
 701:Generated_Source\PSoC5/Timer1.c **** 
 702:Generated_Source\PSoC5/Timer1.c **** 
 703:Generated_Source\PSoC5/Timer1.c **** #if (Timer1_UsingHWCaptureCounter)
 704:Generated_Source\PSoC5/Timer1.c **** 
 705:Generated_Source\PSoC5/Timer1.c **** 
 706:Generated_Source\PSoC5/Timer1.c **** /*******************************************************************************
 707:Generated_Source\PSoC5/Timer1.c **** * Function Name: Timer1_SetCaptureCount
 708:Generated_Source\PSoC5/Timer1.c **** ********************************************************************************
 709:Generated_Source\PSoC5/Timer1.c **** *
 710:Generated_Source\PSoC5/Timer1.c **** * Summary:
 711:Generated_Source\PSoC5/Timer1.c **** *  This function sets the capture count
 712:Generated_Source\PSoC5/Timer1.c **** *
 713:Generated_Source\PSoC5/Timer1.c **** * Parameters:
 714:Generated_Source\PSoC5/Timer1.c **** *  captureCount: A value between 2 and 127 inclusive is valid.  A value of 1
 715:Generated_Source\PSoC5/Timer1.c **** *                to 127 will cause the interrupt to delay by the same number of
 716:Generated_Source\PSoC5/Timer1.c **** *                captures.
 717:Generated_Source\PSoC5/Timer1.c **** *
 718:Generated_Source\PSoC5/Timer1.c **** * Return:
 719:Generated_Source\PSoC5/Timer1.c **** *  void
 720:Generated_Source\PSoC5/Timer1.c **** *
 721:Generated_Source\PSoC5/Timer1.c **** *******************************************************************************/
 722:Generated_Source\PSoC5/Timer1.c **** void Timer1_SetCaptureCount(uint8 captureCount) 
 723:Generated_Source\PSoC5/Timer1.c **** {
 724:Generated_Source\PSoC5/Timer1.c ****     Timer1_CAP_COUNT = captureCount;
 725:Generated_Source\PSoC5/Timer1.c **** }
 726:Generated_Source\PSoC5/Timer1.c **** 
 727:Generated_Source\PSoC5/Timer1.c **** 
 728:Generated_Source\PSoC5/Timer1.c **** /*******************************************************************************
 729:Generated_Source\PSoC5/Timer1.c **** * Function Name: Timer1_ReadCaptureCount
 730:Generated_Source\PSoC5/Timer1.c **** ********************************************************************************
 731:Generated_Source\PSoC5/Timer1.c **** *
 732:Generated_Source\PSoC5/Timer1.c **** * Summary:
 733:Generated_Source\PSoC5/Timer1.c **** *  This function reads the capture count setting
 734:Generated_Source\PSoC5/Timer1.c **** *
 735:Generated_Source\PSoC5/Timer1.c **** * Parameters:
 736:Generated_Source\PSoC5/Timer1.c **** *  void
 737:Generated_Source\PSoC5/Timer1.c **** *
 738:Generated_Source\PSoC5/Timer1.c **** * Return:
 739:Generated_Source\PSoC5/Timer1.c **** *  Returns the Capture Count Setting
 740:Generated_Source\PSoC5/Timer1.c **** *
 741:Generated_Source\PSoC5/Timer1.c **** *******************************************************************************/
 742:Generated_Source\PSoC5/Timer1.c **** uint8 Timer1_ReadCaptureCount(void) 
 743:Generated_Source\PSoC5/Timer1.c **** {
 744:Generated_Source\PSoC5/Timer1.c ****     return ((uint8)Timer1_CAP_COUNT);
 745:Generated_Source\PSoC5/Timer1.c **** }
 746:Generated_Source\PSoC5/Timer1.c **** #endif /* Timer1_UsingHWCaptureCounter */
 747:Generated_Source\PSoC5/Timer1.c **** 
 748:Generated_Source\PSoC5/Timer1.c **** 
 749:Generated_Source\PSoC5/Timer1.c **** /*******************************************************************************
 750:Generated_Source\PSoC5/Timer1.c **** * Function Name: Timer1_ClearFIFO
 751:Generated_Source\PSoC5/Timer1.c **** ********************************************************************************
ARM GAS  C:\Users\BRIAN~1.SEA\AppData\Local\Temp\ccoSbMTd.s 			page 20


 752:Generated_Source\PSoC5/Timer1.c **** *
 753:Generated_Source\PSoC5/Timer1.c **** * Summary:
 754:Generated_Source\PSoC5/Timer1.c **** *  This function clears all capture data from the capture FIFO
 755:Generated_Source\PSoC5/Timer1.c **** *
 756:Generated_Source\PSoC5/Timer1.c **** * Parameters:
 757:Generated_Source\PSoC5/Timer1.c **** *  void
 758:Generated_Source\PSoC5/Timer1.c **** *
 759:Generated_Source\PSoC5/Timer1.c **** * Return:
 760:Generated_Source\PSoC5/Timer1.c **** *  void
 761:Generated_Source\PSoC5/Timer1.c **** *
 762:Generated_Source\PSoC5/Timer1.c **** *******************************************************************************/
 763:Generated_Source\PSoC5/Timer1.c **** void Timer1_ClearFIFO(void) 
 764:Generated_Source\PSoC5/Timer1.c **** {
 333              		.loc 1 764 0
 334              		.cfi_startproc
 335              		@ args = 0, pretend = 0, frame = 0
 336              		@ frame_needed = 0, uses_anonymous_args = 0
 337 0000 08B5     		push	{r3, lr}
 338              		.cfi_def_cfa_offset 8
 339              		.cfi_offset 3, -8
 340              		.cfi_offset 14, -4
 765:Generated_Source\PSoC5/Timer1.c ****     while(0u != (Timer1_ReadStatusRegister() & Timer1_STATUS_FIFONEMP))
 341              		.loc 1 765 0
 342 0002 01E0     		b	.L38
 343              	.L39:
 766:Generated_Source\PSoC5/Timer1.c ****     {
 767:Generated_Source\PSoC5/Timer1.c ****         (void)Timer1_ReadCapture();
 344              		.loc 1 767 0
 345 0004 FFF7FEFF 		bl	Timer1_ReadCapture
 346              	.LVL4:
 347              	.L38:
 765:Generated_Source\PSoC5/Timer1.c ****     while(0u != (Timer1_ReadStatusRegister() & Timer1_STATUS_FIFONEMP))
 348              		.loc 1 765 0
 349 0008 FFF7FEFF 		bl	Timer1_ReadStatusRegister
 350              	.LVL5:
 351 000c 10F0080F 		tst	r0, #8
 352 0010 F8D1     		bne	.L39
 768:Generated_Source\PSoC5/Timer1.c ****     }
 769:Generated_Source\PSoC5/Timer1.c **** }
 353              		.loc 1 769 0
 354 0012 08BD     		pop	{r3, pc}
 355              		.cfi_endproc
 356              	.LFE14:
 357              		.size	Timer1_ClearFIFO, .-Timer1_ClearFIFO
 358              		.section	.text.Timer1_Init,"ax",%progbits
 359              		.align	2
 360              		.global	Timer1_Init
 361              		.thumb
 362              		.thumb_func
 363              		.type	Timer1_Init, %function
 364              	Timer1_Init:
 365              	.LFB0:
  44:Generated_Source\PSoC5/Timer1.c ****     #if(!Timer1_UsingFixedFunction)
 366              		.loc 1 44 0
 367              		.cfi_startproc
 368              		@ args = 0, pretend = 0, frame = 0
 369              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\BRIAN~1.SEA\AppData\Local\Temp\ccoSbMTd.s 			page 21


 370 0000 08B5     		push	{r3, lr}
 371              		.cfi_def_cfa_offset 8
 372              		.cfi_offset 3, -8
 373              		.cfi_offset 14, -4
 118:Generated_Source\PSoC5/Timer1.c ****     Timer1_WriteCounter(Timer1_INIT_PERIOD);
 374              		.loc 1 118 0
 375 0002 C520     		movs	r0, #197
 376 0004 FFF7FEFF 		bl	Timer1_WritePeriod
 377              	.LVL6:
 119:Generated_Source\PSoC5/Timer1.c **** 
 378              		.loc 1 119 0
 379 0008 C520     		movs	r0, #197
 380 000a FFF7FEFF 		bl	Timer1_WriteCounter
 381              	.LVL7:
 142:Generated_Source\PSoC5/Timer1.c **** 
 382              		.loc 1 142 0
 383 000e FFF7FEFF 		bl	CyEnterCriticalSection
 384              	.LVL8:
 145:Generated_Source\PSoC5/Timer1.c **** 
 385              		.loc 1 145 0
 386 0012 064A     		ldr	r2, .L43
 387 0014 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 388 0016 43F01003 		orr	r3, r3, #16
 389 001a 1370     		strb	r3, [r2]
 148:Generated_Source\PSoC5/Timer1.c **** 
 390              		.loc 1 148 0
 391 001c FFF7FEFF 		bl	CyExitCriticalSection
 392              	.LVL9:
 159:Generated_Source\PSoC5/Timer1.c ****     #endif /* Configure additional features of UDB implementation */
 393              		.loc 1 159 0
 394 0020 FFF7FEFF 		bl	Timer1_ClearFIFO
 395              	.LVL10:
 162:Generated_Source\PSoC5/Timer1.c **** }
 396              		.loc 1 162 0
 397 0024 0020     		movs	r0, #0
 398 0026 FFF7FEFF 		bl	Timer1_SetInterruptMode
 399              	.LVL11:
 400 002a 08BD     		pop	{r3, pc}
 401              	.L44:
 402              		.align	2
 403              	.L43:
 404 002c 97650040 		.word	1073767831
 405              		.cfi_endproc
 406              	.LFE0:
 407              		.size	Timer1_Init, .-Timer1_Init
 408              		.section	.text.Timer1_Start,"ax",%progbits
 409              		.align	2
 410              		.global	Timer1_Start
 411              		.thumb
 412              		.thumb_func
 413              		.type	Timer1_Start, %function
 414              	Timer1_Start:
 415              	.LFB2:
 216:Generated_Source\PSoC5/Timer1.c ****     if(Timer1_initVar == 0u)
 416              		.loc 1 216 0
 417              		.cfi_startproc
 418              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\BRIAN~1.SEA\AppData\Local\Temp\ccoSbMTd.s 			page 22


 419              		@ frame_needed = 0, uses_anonymous_args = 0
 420 0000 08B5     		push	{r3, lr}
 421              		.cfi_def_cfa_offset 8
 422              		.cfi_offset 3, -8
 423              		.cfi_offset 14, -4
 217:Generated_Source\PSoC5/Timer1.c ****     {
 424              		.loc 1 217 0
 425 0002 054B     		ldr	r3, .L48
 426 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 427 0006 23B9     		cbnz	r3, .L46
 219:Generated_Source\PSoC5/Timer1.c **** 
 428              		.loc 1 219 0
 429 0008 FFF7FEFF 		bl	Timer1_Init
 430              	.LVL12:
 221:Generated_Source\PSoC5/Timer1.c ****     }
 431              		.loc 1 221 0
 432 000c 0122     		movs	r2, #1
 433 000e 024B     		ldr	r3, .L48
 434 0010 1A70     		strb	r2, [r3]
 435              	.L46:
 225:Generated_Source\PSoC5/Timer1.c **** }
 436              		.loc 1 225 0
 437 0012 FFF7FEFF 		bl	Timer1_Enable
 438              	.LVL13:
 439 0016 08BD     		pop	{r3, pc}
 440              	.L49:
 441              		.align	2
 442              	.L48:
 443 0018 00000000 		.word	.LANCHOR0
 444              		.cfi_endproc
 445              	.LFE2:
 446              		.size	Timer1_Start, .-Timer1_Start
 447              		.global	Timer1_initVar
 448              		.bss
 449              		.set	.LANCHOR0,. + 0
 450              		.type	Timer1_initVar, %object
 451              		.size	Timer1_initVar, 1
 452              	Timer1_initVar:
 453 0000 00       		.space	1
 454              		.text
 455              	.Letext0:
 456              		.file 2 "Generated_Source\\PSoC5\\cytypes.h"
 457              		.file 3 "Generated_Source\\PSoC5\\CyLib.h"
 458              		.section	.debug_info,"",%progbits
 459              	.Ldebug_info0:
 460 0000 E8020000 		.4byte	0x2e8
 461 0004 0400     		.2byte	0x4
 462 0006 00000000 		.4byte	.Ldebug_abbrev0
 463 000a 04       		.byte	0x4
 464 000b 01       		.uleb128 0x1
 465 000c B6000000 		.4byte	.LASF39
 466 0010 0C       		.byte	0xc
 467 0011 2D030000 		.4byte	.LASF40
 468 0015 A8010000 		.4byte	.LASF41
 469 0019 00000000 		.4byte	.Ldebug_ranges0+0
 470 001d 00000000 		.4byte	0
 471 0021 00000000 		.4byte	.Ldebug_line0
ARM GAS  C:\Users\BRIAN~1.SEA\AppData\Local\Temp\ccoSbMTd.s 			page 23


 472 0025 02       		.uleb128 0x2
 473 0026 01       		.byte	0x1
 474 0027 06       		.byte	0x6
 475 0028 59030000 		.4byte	.LASF0
 476 002c 02       		.uleb128 0x2
 477 002d 01       		.byte	0x1
 478 002e 08       		.byte	0x8
 479 002f A8000000 		.4byte	.LASF1
 480 0033 02       		.uleb128 0x2
 481 0034 02       		.byte	0x2
 482 0035 05       		.byte	0x5
 483 0036 5A000000 		.4byte	.LASF2
 484 003a 02       		.uleb128 0x2
 485 003b 02       		.byte	0x2
 486 003c 07       		.byte	0x7
 487 003d 42000000 		.4byte	.LASF3
 488 0041 02       		.uleb128 0x2
 489 0042 04       		.byte	0x4
 490 0043 05       		.byte	0x5
 491 0044 1E030000 		.4byte	.LASF4
 492 0048 02       		.uleb128 0x2
 493 0049 04       		.byte	0x4
 494 004a 07       		.byte	0x7
 495 004b 74010000 		.4byte	.LASF5
 496 004f 02       		.uleb128 0x2
 497 0050 08       		.byte	0x8
 498 0051 05       		.byte	0x5
 499 0052 AE020000 		.4byte	.LASF6
 500 0056 02       		.uleb128 0x2
 501 0057 08       		.byte	0x8
 502 0058 07       		.byte	0x7
 503 0059 72000000 		.4byte	.LASF7
 504 005d 03       		.uleb128 0x3
 505 005e 04       		.byte	0x4
 506 005f 05       		.byte	0x5
 507 0060 696E7400 		.ascii	"int\000"
 508 0064 02       		.uleb128 0x2
 509 0065 04       		.byte	0x4
 510 0066 07       		.byte	0x7
 511 0067 2C020000 		.4byte	.LASF8
 512 006b 04       		.uleb128 0x4
 513 006c 86010000 		.4byte	.LASF9
 514 0070 02       		.byte	0x2
 515 0071 B4       		.byte	0xb4
 516 0072 2C000000 		.4byte	0x2c
 517 0076 04       		.uleb128 0x4
 518 0077 02020000 		.4byte	.LASF10
 519 007b 02       		.byte	0x2
 520 007c B6       		.byte	0xb6
 521 007d 48000000 		.4byte	0x48
 522 0081 02       		.uleb128 0x2
 523 0082 04       		.byte	0x4
 524 0083 04       		.byte	0x4
 525 0084 64000000 		.4byte	.LASF11
 526 0088 02       		.uleb128 0x2
 527 0089 08       		.byte	0x8
 528 008a 04       		.byte	0x4
ARM GAS  C:\Users\BRIAN~1.SEA\AppData\Local\Temp\ccoSbMTd.s 			page 24


 529 008b 94010000 		.4byte	.LASF12
 530 008f 02       		.uleb128 0x2
 531 0090 01       		.byte	0x1
 532 0091 08       		.byte	0x8
 533 0092 55000000 		.4byte	.LASF13
 534 0096 05       		.uleb128 0x5
 535 0097 70020000 		.4byte	.LASF14
 536 009b 02       		.byte	0x2
 537 009c 5E01     		.2byte	0x15e
 538 009e A2000000 		.4byte	0xa2
 539 00a2 06       		.uleb128 0x6
 540 00a3 6B000000 		.4byte	0x6b
 541 00a7 05       		.uleb128 0x5
 542 00a8 27030000 		.4byte	.LASF15
 543 00ac 02       		.byte	0x2
 544 00ad 6001     		.2byte	0x160
 545 00af B3000000 		.4byte	0xb3
 546 00b3 06       		.uleb128 0x6
 547 00b4 76000000 		.4byte	0x76
 548 00b8 02       		.uleb128 0x2
 549 00b9 08       		.byte	0x8
 550 00ba 04       		.byte	0x4
 551 00bb 4D030000 		.4byte	.LASF16
 552 00bf 02       		.uleb128 0x2
 553 00c0 04       		.byte	0x4
 554 00c1 07       		.byte	0x7
 555 00c2 89020000 		.4byte	.LASF17
 556 00c6 07       		.uleb128 0x7
 557 00c7 62020000 		.4byte	.LASF18
 558 00cb 01       		.byte	0x1
 559 00cc B4       		.byte	0xb4
 560 00cd 00000000 		.4byte	.LFB1
 561 00d1 10000000 		.4byte	.LFE1-.LFB1
 562 00d5 01       		.uleb128 0x1
 563 00d6 9C       		.byte	0x9c
 564 00d7 07       		.uleb128 0x7
 565 00d8 9C000000 		.4byte	.LASF19
 566 00dc 01       		.byte	0x1
 567 00dd F7       		.byte	0xf7
 568 00de 00000000 		.4byte	.LFB3
 569 00e2 10000000 		.4byte	.LFE3-.LFB3
 570 00e6 01       		.uleb128 0x1
 571 00e7 9C       		.byte	0x9c
 572 00e8 08       		.uleb128 0x8
 573 00e9 F4020000 		.4byte	.LASF23
 574 00ed 01       		.byte	0x1
 575 00ee 1701     		.2byte	0x117
 576 00f0 00000000 		.4byte	.LFB4
 577 00f4 0C000000 		.4byte	.LFE4-.LFB4
 578 00f8 01       		.uleb128 0x1
 579 00f9 9C       		.byte	0x9c
 580 00fa 0D010000 		.4byte	0x10d
 581 00fe 09       		.uleb128 0x9
 582 00ff BC020000 		.4byte	.LASF25
 583 0103 01       		.byte	0x1
 584 0104 1701     		.2byte	0x117
 585 0106 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\BRIAN~1.SEA\AppData\Local\Temp\ccoSbMTd.s 			page 25


 586 010a 01       		.uleb128 0x1
 587 010b 50       		.byte	0x50
 588 010c 00       		.byte	0
 589 010d 0A       		.uleb128 0xa
 590 010e 11000000 		.4byte	.LASF20
 591 0112 01       		.byte	0x1
 592 0113 2E01     		.2byte	0x12e
 593 0115 00000000 		.4byte	.LFB5
 594 0119 0C000000 		.4byte	.LFE5-.LFB5
 595 011d 01       		.uleb128 0x1
 596 011e 9C       		.byte	0x9c
 597 011f 0B       		.uleb128 0xb
 598 0120 44010000 		.4byte	.LASF21
 599 0124 01       		.byte	0x1
 600 0125 4D01     		.2byte	0x14d
 601 0127 6B000000 		.4byte	0x6b
 602 012b 00000000 		.4byte	.LFB6
 603 012f 0C000000 		.4byte	.LFE6-.LFB6
 604 0133 01       		.uleb128 0x1
 605 0134 9C       		.byte	0x9c
 606 0135 0B       		.uleb128 0xb
 607 0136 D9020000 		.4byte	.LASF22
 608 013a 01       		.byte	0x1
 609 013b 6401     		.2byte	0x164
 610 013d 6B000000 		.4byte	0x6b
 611 0141 00000000 		.4byte	.LFB7
 612 0145 0C000000 		.4byte	.LFE7-.LFB7
 613 0149 01       		.uleb128 0x1
 614 014a 9C       		.byte	0x9c
 615 014b 08       		.uleb128 0x8
 616 014c 92020000 		.4byte	.LASF24
 617 0150 01       		.byte	0x1
 618 0151 7B01     		.2byte	0x17b
 619 0153 00000000 		.4byte	.LFB8
 620 0157 0C000000 		.4byte	.LFE8-.LFB8
 621 015b 01       		.uleb128 0x1
 622 015c 9C       		.byte	0x9c
 623 015d 70010000 		.4byte	0x170
 624 0161 09       		.uleb128 0x9
 625 0162 8C010000 		.4byte	.LASF26
 626 0166 01       		.byte	0x1
 627 0167 7B01     		.2byte	0x17b
 628 0169 6B000000 		.4byte	0x6b
 629 016d 01       		.uleb128 0x1
 630 016e 50       		.byte	0x50
 631 016f 00       		.byte	0
 632 0170 0B       		.uleb128 0xb
 633 0171 0C030000 		.4byte	.LASF27
 634 0175 01       		.byte	0x1
 635 0176 9501     		.2byte	0x195
 636 0178 76000000 		.4byte	0x76
 637 017c 00000000 		.4byte	.LFB9
 638 0180 0C000000 		.4byte	.LFE9-.LFB9
 639 0184 01       		.uleb128 0x1
 640 0185 9C       		.byte	0x9c
 641 0186 08       		.uleb128 0x8
 642 0187 4F020000 		.4byte	.LASF28
ARM GAS  C:\Users\BRIAN~1.SEA\AppData\Local\Temp\ccoSbMTd.s 			page 26


 643 018b 01       		.byte	0x1
 644 018c AF01     		.2byte	0x1af
 645 018e 00000000 		.4byte	.LFB10
 646 0192 0C000000 		.4byte	.LFE10-.LFB10
 647 0196 01       		.uleb128 0x1
 648 0197 9C       		.byte	0x9c
 649 0198 AB010000 		.4byte	0x1ab
 650 019c 09       		.uleb128 0x9
 651 019d 3B000000 		.4byte	.LASF29
 652 01a1 01       		.byte	0x1
 653 01a2 AF01     		.2byte	0x1af
 654 01a4 76000000 		.4byte	0x76
 655 01a8 01       		.uleb128 0x1
 656 01a9 50       		.byte	0x50
 657 01aa 00       		.byte	0
 658 01ab 0B       		.uleb128 0xb
 659 01ac 28000000 		.4byte	.LASF30
 660 01b0 01       		.byte	0x1
 661 01b1 C801     		.2byte	0x1c8
 662 01b3 76000000 		.4byte	0x76
 663 01b7 00000000 		.4byte	.LFB11
 664 01bb 0C000000 		.4byte	.LFE11-.LFB11
 665 01bf 01       		.uleb128 0x1
 666 01c0 9C       		.byte	0x9c
 667 01c1 08       		.uleb128 0x8
 668 01c2 75020000 		.4byte	.LASF31
 669 01c6 01       		.byte	0x1
 670 01c7 E001     		.2byte	0x1e0
 671 01c9 00000000 		.4byte	.LFB12
 672 01cd 0C000000 		.4byte	.LFE12-.LFB12
 673 01d1 01       		.uleb128 0x1
 674 01d2 9C       		.byte	0x9c
 675 01d3 E6010000 		.4byte	0x1e6
 676 01d7 09       		.uleb128 0x9
 677 01d8 6A000000 		.4byte	.LASF32
 678 01dc 01       		.byte	0x1
 679 01dd E001     		.2byte	0x1e0
 680 01df 76000000 		.4byte	0x76
 681 01e3 01       		.uleb128 0x1
 682 01e4 50       		.byte	0x50
 683 01e5 00       		.byte	0
 684 01e6 0B       		.uleb128 0xb
 685 01e7 89000000 		.4byte	.LASF33
 686 01eb 01       		.byte	0x1
 687 01ec FC01     		.2byte	0x1fc
 688 01ee 76000000 		.4byte	0x76
 689 01f2 00000000 		.4byte	.LFB13
 690 01f6 14000000 		.4byte	.LFE13-.LFB13
 691 01fa 01       		.uleb128 0x1
 692 01fb 9C       		.byte	0x9c
 693 01fc 08       		.uleb128 0x8
 694 01fd 00000000 		.4byte	.LASF34
 695 0201 01       		.byte	0x1
 696 0202 FB02     		.2byte	0x2fb
 697 0204 00000000 		.4byte	.LFB14
 698 0208 14000000 		.4byte	.LFE14-.LFB14
 699 020c 01       		.uleb128 0x1
ARM GAS  C:\Users\BRIAN~1.SEA\AppData\Local\Temp\ccoSbMTd.s 			page 27


 700 020d 9C       		.byte	0x9c
 701 020e 25020000 		.4byte	0x225
 702 0212 0C       		.uleb128 0xc
 703 0213 08000000 		.4byte	.LVL4
 704 0217 AB010000 		.4byte	0x1ab
 705 021b 0C       		.uleb128 0xc
 706 021c 0C000000 		.4byte	.LVL5
 707 0220 1F010000 		.4byte	0x11f
 708 0224 00       		.byte	0
 709 0225 0D       		.uleb128 0xd
 710 0226 20020000 		.4byte	.LASF35
 711 022a 01       		.byte	0x1
 712 022b 2B       		.byte	0x2b
 713 022c 00000000 		.4byte	.LFB0
 714 0230 30000000 		.4byte	.LFE0-.LFB0
 715 0234 01       		.uleb128 0x1
 716 0235 9C       		.byte	0x9c
 717 0236 9C020000 		.4byte	0x29c
 718 023a 0E       		.uleb128 0xe
 719 023b 5E010000 		.4byte	.LASF42
 720 023f 01       		.byte	0x1
 721 0240 2F       		.byte	0x2f
 722 0241 6B000000 		.4byte	0x6b
 723 0245 00000000 		.4byte	.LLST0
 724 0249 0F       		.uleb128 0xf
 725 024a 08000000 		.4byte	.LVL6
 726 024e 86010000 		.4byte	0x186
 727 0252 5D020000 		.4byte	0x25d
 728 0256 10       		.uleb128 0x10
 729 0257 01       		.uleb128 0x1
 730 0258 50       		.byte	0x50
 731 0259 02       		.uleb128 0x2
 732 025a 08       		.byte	0x8
 733 025b C5       		.byte	0xc5
 734 025c 00       		.byte	0
 735 025d 0F       		.uleb128 0xf
 736 025e 0E000000 		.4byte	.LVL7
 737 0262 C1010000 		.4byte	0x1c1
 738 0266 71020000 		.4byte	0x271
 739 026a 10       		.uleb128 0x10
 740 026b 01       		.uleb128 0x1
 741 026c 50       		.byte	0x50
 742 026d 02       		.uleb128 0x2
 743 026e 08       		.byte	0x8
 744 026f C5       		.byte	0xc5
 745 0270 00       		.byte	0
 746 0271 0C       		.uleb128 0xc
 747 0272 12000000 		.4byte	.LVL8
 748 0276 D5020000 		.4byte	0x2d5
 749 027a 0C       		.uleb128 0xc
 750 027b 20000000 		.4byte	.LVL9
 751 027f E0020000 		.4byte	0x2e0
 752 0283 0C       		.uleb128 0xc
 753 0284 24000000 		.4byte	.LVL10
 754 0288 FC010000 		.4byte	0x1fc
 755 028c 11       		.uleb128 0x11
 756 028d 2A000000 		.4byte	.LVL11
ARM GAS  C:\Users\BRIAN~1.SEA\AppData\Local\Temp\ccoSbMTd.s 			page 28


 757 0291 E8000000 		.4byte	0xe8
 758 0295 10       		.uleb128 0x10
 759 0296 01       		.uleb128 0x1
 760 0297 50       		.byte	0x50
 761 0298 01       		.uleb128 0x1
 762 0299 30       		.byte	0x30
 763 029a 00       		.byte	0
 764 029b 00       		.byte	0
 765 029c 0D       		.uleb128 0xd
 766 029d 9B010000 		.4byte	.LASF36
 767 02a1 01       		.byte	0x1
 768 02a2 D7       		.byte	0xd7
 769 02a3 00000000 		.4byte	.LFB2
 770 02a7 1C000000 		.4byte	.LFE2-.LFB2
 771 02ab 01       		.uleb128 0x1
 772 02ac 9C       		.byte	0x9c
 773 02ad C4020000 		.4byte	0x2c4
 774 02b1 0C       		.uleb128 0xc
 775 02b2 0C000000 		.4byte	.LVL12
 776 02b6 25020000 		.4byte	0x225
 777 02ba 0C       		.uleb128 0xc
 778 02bb 16000000 		.4byte	.LVL13
 779 02bf C6000000 		.4byte	0xc6
 780 02c3 00       		.byte	0
 781 02c4 12       		.uleb128 0x12
 782 02c5 CA020000 		.4byte	.LASF43
 783 02c9 01       		.byte	0x1
 784 02ca 1A       		.byte	0x1a
 785 02cb 6B000000 		.4byte	0x6b
 786 02cf 05       		.uleb128 0x5
 787 02d0 03       		.byte	0x3
 788 02d1 00000000 		.4byte	Timer1_initVar
 789 02d5 13       		.uleb128 0x13
 790 02d6 09020000 		.4byte	.LASF37
 791 02da 09020000 		.4byte	.LASF37
 792 02de 03       		.byte	0x3
 793 02df 7E       		.byte	0x7e
 794 02e0 13       		.uleb128 0x13
 795 02e1 39020000 		.4byte	.LASF38
 796 02e5 39020000 		.4byte	.LASF38
 797 02e9 03       		.byte	0x3
 798 02ea 7F       		.byte	0x7f
 799 02eb 00       		.byte	0
 800              		.section	.debug_abbrev,"",%progbits
 801              	.Ldebug_abbrev0:
 802 0000 01       		.uleb128 0x1
 803 0001 11       		.uleb128 0x11
 804 0002 01       		.byte	0x1
 805 0003 25       		.uleb128 0x25
 806 0004 0E       		.uleb128 0xe
 807 0005 13       		.uleb128 0x13
 808 0006 0B       		.uleb128 0xb
 809 0007 03       		.uleb128 0x3
 810 0008 0E       		.uleb128 0xe
 811 0009 1B       		.uleb128 0x1b
 812 000a 0E       		.uleb128 0xe
 813 000b 55       		.uleb128 0x55
ARM GAS  C:\Users\BRIAN~1.SEA\AppData\Local\Temp\ccoSbMTd.s 			page 29


 814 000c 17       		.uleb128 0x17
 815 000d 11       		.uleb128 0x11
 816 000e 01       		.uleb128 0x1
 817 000f 10       		.uleb128 0x10
 818 0010 17       		.uleb128 0x17
 819 0011 00       		.byte	0
 820 0012 00       		.byte	0
 821 0013 02       		.uleb128 0x2
 822 0014 24       		.uleb128 0x24
 823 0015 00       		.byte	0
 824 0016 0B       		.uleb128 0xb
 825 0017 0B       		.uleb128 0xb
 826 0018 3E       		.uleb128 0x3e
 827 0019 0B       		.uleb128 0xb
 828 001a 03       		.uleb128 0x3
 829 001b 0E       		.uleb128 0xe
 830 001c 00       		.byte	0
 831 001d 00       		.byte	0
 832 001e 03       		.uleb128 0x3
 833 001f 24       		.uleb128 0x24
 834 0020 00       		.byte	0
 835 0021 0B       		.uleb128 0xb
 836 0022 0B       		.uleb128 0xb
 837 0023 3E       		.uleb128 0x3e
 838 0024 0B       		.uleb128 0xb
 839 0025 03       		.uleb128 0x3
 840 0026 08       		.uleb128 0x8
 841 0027 00       		.byte	0
 842 0028 00       		.byte	0
 843 0029 04       		.uleb128 0x4
 844 002a 16       		.uleb128 0x16
 845 002b 00       		.byte	0
 846 002c 03       		.uleb128 0x3
 847 002d 0E       		.uleb128 0xe
 848 002e 3A       		.uleb128 0x3a
 849 002f 0B       		.uleb128 0xb
 850 0030 3B       		.uleb128 0x3b
 851 0031 0B       		.uleb128 0xb
 852 0032 49       		.uleb128 0x49
 853 0033 13       		.uleb128 0x13
 854 0034 00       		.byte	0
 855 0035 00       		.byte	0
 856 0036 05       		.uleb128 0x5
 857 0037 16       		.uleb128 0x16
 858 0038 00       		.byte	0
 859 0039 03       		.uleb128 0x3
 860 003a 0E       		.uleb128 0xe
 861 003b 3A       		.uleb128 0x3a
 862 003c 0B       		.uleb128 0xb
 863 003d 3B       		.uleb128 0x3b
 864 003e 05       		.uleb128 0x5
 865 003f 49       		.uleb128 0x49
 866 0040 13       		.uleb128 0x13
 867 0041 00       		.byte	0
 868 0042 00       		.byte	0
 869 0043 06       		.uleb128 0x6
 870 0044 35       		.uleb128 0x35
ARM GAS  C:\Users\BRIAN~1.SEA\AppData\Local\Temp\ccoSbMTd.s 			page 30


 871 0045 00       		.byte	0
 872 0046 49       		.uleb128 0x49
 873 0047 13       		.uleb128 0x13
 874 0048 00       		.byte	0
 875 0049 00       		.byte	0
 876 004a 07       		.uleb128 0x7
 877 004b 2E       		.uleb128 0x2e
 878 004c 00       		.byte	0
 879 004d 3F       		.uleb128 0x3f
 880 004e 19       		.uleb128 0x19
 881 004f 03       		.uleb128 0x3
 882 0050 0E       		.uleb128 0xe
 883 0051 3A       		.uleb128 0x3a
 884 0052 0B       		.uleb128 0xb
 885 0053 3B       		.uleb128 0x3b
 886 0054 0B       		.uleb128 0xb
 887 0055 27       		.uleb128 0x27
 888 0056 19       		.uleb128 0x19
 889 0057 11       		.uleb128 0x11
 890 0058 01       		.uleb128 0x1
 891 0059 12       		.uleb128 0x12
 892 005a 06       		.uleb128 0x6
 893 005b 40       		.uleb128 0x40
 894 005c 18       		.uleb128 0x18
 895 005d 9742     		.uleb128 0x2117
 896 005f 19       		.uleb128 0x19
 897 0060 00       		.byte	0
 898 0061 00       		.byte	0
 899 0062 08       		.uleb128 0x8
 900 0063 2E       		.uleb128 0x2e
 901 0064 01       		.byte	0x1
 902 0065 3F       		.uleb128 0x3f
 903 0066 19       		.uleb128 0x19
 904 0067 03       		.uleb128 0x3
 905 0068 0E       		.uleb128 0xe
 906 0069 3A       		.uleb128 0x3a
 907 006a 0B       		.uleb128 0xb
 908 006b 3B       		.uleb128 0x3b
 909 006c 05       		.uleb128 0x5
 910 006d 27       		.uleb128 0x27
 911 006e 19       		.uleb128 0x19
 912 006f 11       		.uleb128 0x11
 913 0070 01       		.uleb128 0x1
 914 0071 12       		.uleb128 0x12
 915 0072 06       		.uleb128 0x6
 916 0073 40       		.uleb128 0x40
 917 0074 18       		.uleb128 0x18
 918 0075 9742     		.uleb128 0x2117
 919 0077 19       		.uleb128 0x19
 920 0078 01       		.uleb128 0x1
 921 0079 13       		.uleb128 0x13
 922 007a 00       		.byte	0
 923 007b 00       		.byte	0
 924 007c 09       		.uleb128 0x9
 925 007d 05       		.uleb128 0x5
 926 007e 00       		.byte	0
 927 007f 03       		.uleb128 0x3
ARM GAS  C:\Users\BRIAN~1.SEA\AppData\Local\Temp\ccoSbMTd.s 			page 31


 928 0080 0E       		.uleb128 0xe
 929 0081 3A       		.uleb128 0x3a
 930 0082 0B       		.uleb128 0xb
 931 0083 3B       		.uleb128 0x3b
 932 0084 05       		.uleb128 0x5
 933 0085 49       		.uleb128 0x49
 934 0086 13       		.uleb128 0x13
 935 0087 02       		.uleb128 0x2
 936 0088 18       		.uleb128 0x18
 937 0089 00       		.byte	0
 938 008a 00       		.byte	0
 939 008b 0A       		.uleb128 0xa
 940 008c 2E       		.uleb128 0x2e
 941 008d 00       		.byte	0
 942 008e 3F       		.uleb128 0x3f
 943 008f 19       		.uleb128 0x19
 944 0090 03       		.uleb128 0x3
 945 0091 0E       		.uleb128 0xe
 946 0092 3A       		.uleb128 0x3a
 947 0093 0B       		.uleb128 0xb
 948 0094 3B       		.uleb128 0x3b
 949 0095 05       		.uleb128 0x5
 950 0096 27       		.uleb128 0x27
 951 0097 19       		.uleb128 0x19
 952 0098 11       		.uleb128 0x11
 953 0099 01       		.uleb128 0x1
 954 009a 12       		.uleb128 0x12
 955 009b 06       		.uleb128 0x6
 956 009c 40       		.uleb128 0x40
 957 009d 18       		.uleb128 0x18
 958 009e 9742     		.uleb128 0x2117
 959 00a0 19       		.uleb128 0x19
 960 00a1 00       		.byte	0
 961 00a2 00       		.byte	0
 962 00a3 0B       		.uleb128 0xb
 963 00a4 2E       		.uleb128 0x2e
 964 00a5 00       		.byte	0
 965 00a6 3F       		.uleb128 0x3f
 966 00a7 19       		.uleb128 0x19
 967 00a8 03       		.uleb128 0x3
 968 00a9 0E       		.uleb128 0xe
 969 00aa 3A       		.uleb128 0x3a
 970 00ab 0B       		.uleb128 0xb
 971 00ac 3B       		.uleb128 0x3b
 972 00ad 05       		.uleb128 0x5
 973 00ae 27       		.uleb128 0x27
 974 00af 19       		.uleb128 0x19
 975 00b0 49       		.uleb128 0x49
 976 00b1 13       		.uleb128 0x13
 977 00b2 11       		.uleb128 0x11
 978 00b3 01       		.uleb128 0x1
 979 00b4 12       		.uleb128 0x12
 980 00b5 06       		.uleb128 0x6
 981 00b6 40       		.uleb128 0x40
 982 00b7 18       		.uleb128 0x18
 983 00b8 9742     		.uleb128 0x2117
 984 00ba 19       		.uleb128 0x19
ARM GAS  C:\Users\BRIAN~1.SEA\AppData\Local\Temp\ccoSbMTd.s 			page 32


 985 00bb 00       		.byte	0
 986 00bc 00       		.byte	0
 987 00bd 0C       		.uleb128 0xc
 988 00be 898201   		.uleb128 0x4109
 989 00c1 00       		.byte	0
 990 00c2 11       		.uleb128 0x11
 991 00c3 01       		.uleb128 0x1
 992 00c4 31       		.uleb128 0x31
 993 00c5 13       		.uleb128 0x13
 994 00c6 00       		.byte	0
 995 00c7 00       		.byte	0
 996 00c8 0D       		.uleb128 0xd
 997 00c9 2E       		.uleb128 0x2e
 998 00ca 01       		.byte	0x1
 999 00cb 3F       		.uleb128 0x3f
 1000 00cc 19       		.uleb128 0x19
 1001 00cd 03       		.uleb128 0x3
 1002 00ce 0E       		.uleb128 0xe
 1003 00cf 3A       		.uleb128 0x3a
 1004 00d0 0B       		.uleb128 0xb
 1005 00d1 3B       		.uleb128 0x3b
 1006 00d2 0B       		.uleb128 0xb
 1007 00d3 27       		.uleb128 0x27
 1008 00d4 19       		.uleb128 0x19
 1009 00d5 11       		.uleb128 0x11
 1010 00d6 01       		.uleb128 0x1
 1011 00d7 12       		.uleb128 0x12
 1012 00d8 06       		.uleb128 0x6
 1013 00d9 40       		.uleb128 0x40
 1014 00da 18       		.uleb128 0x18
 1015 00db 9742     		.uleb128 0x2117
 1016 00dd 19       		.uleb128 0x19
 1017 00de 01       		.uleb128 0x1
 1018 00df 13       		.uleb128 0x13
 1019 00e0 00       		.byte	0
 1020 00e1 00       		.byte	0
 1021 00e2 0E       		.uleb128 0xe
 1022 00e3 34       		.uleb128 0x34
 1023 00e4 00       		.byte	0
 1024 00e5 03       		.uleb128 0x3
 1025 00e6 0E       		.uleb128 0xe
 1026 00e7 3A       		.uleb128 0x3a
 1027 00e8 0B       		.uleb128 0xb
 1028 00e9 3B       		.uleb128 0x3b
 1029 00ea 0B       		.uleb128 0xb
 1030 00eb 49       		.uleb128 0x49
 1031 00ec 13       		.uleb128 0x13
 1032 00ed 02       		.uleb128 0x2
 1033 00ee 17       		.uleb128 0x17
 1034 00ef 00       		.byte	0
 1035 00f0 00       		.byte	0
 1036 00f1 0F       		.uleb128 0xf
 1037 00f2 898201   		.uleb128 0x4109
 1038 00f5 01       		.byte	0x1
 1039 00f6 11       		.uleb128 0x11
 1040 00f7 01       		.uleb128 0x1
 1041 00f8 31       		.uleb128 0x31
ARM GAS  C:\Users\BRIAN~1.SEA\AppData\Local\Temp\ccoSbMTd.s 			page 33


 1042 00f9 13       		.uleb128 0x13
 1043 00fa 01       		.uleb128 0x1
 1044 00fb 13       		.uleb128 0x13
 1045 00fc 00       		.byte	0
 1046 00fd 00       		.byte	0
 1047 00fe 10       		.uleb128 0x10
 1048 00ff 8A8201   		.uleb128 0x410a
 1049 0102 00       		.byte	0
 1050 0103 02       		.uleb128 0x2
 1051 0104 18       		.uleb128 0x18
 1052 0105 9142     		.uleb128 0x2111
 1053 0107 18       		.uleb128 0x18
 1054 0108 00       		.byte	0
 1055 0109 00       		.byte	0
 1056 010a 11       		.uleb128 0x11
 1057 010b 898201   		.uleb128 0x4109
 1058 010e 01       		.byte	0x1
 1059 010f 11       		.uleb128 0x11
 1060 0110 01       		.uleb128 0x1
 1061 0111 31       		.uleb128 0x31
 1062 0112 13       		.uleb128 0x13
 1063 0113 00       		.byte	0
 1064 0114 00       		.byte	0
 1065 0115 12       		.uleb128 0x12
 1066 0116 34       		.uleb128 0x34
 1067 0117 00       		.byte	0
 1068 0118 03       		.uleb128 0x3
 1069 0119 0E       		.uleb128 0xe
 1070 011a 3A       		.uleb128 0x3a
 1071 011b 0B       		.uleb128 0xb
 1072 011c 3B       		.uleb128 0x3b
 1073 011d 0B       		.uleb128 0xb
 1074 011e 49       		.uleb128 0x49
 1075 011f 13       		.uleb128 0x13
 1076 0120 3F       		.uleb128 0x3f
 1077 0121 19       		.uleb128 0x19
 1078 0122 02       		.uleb128 0x2
 1079 0123 18       		.uleb128 0x18
 1080 0124 00       		.byte	0
 1081 0125 00       		.byte	0
 1082 0126 13       		.uleb128 0x13
 1083 0127 2E       		.uleb128 0x2e
 1084 0128 00       		.byte	0
 1085 0129 3F       		.uleb128 0x3f
 1086 012a 19       		.uleb128 0x19
 1087 012b 3C       		.uleb128 0x3c
 1088 012c 19       		.uleb128 0x19
 1089 012d 6E       		.uleb128 0x6e
 1090 012e 0E       		.uleb128 0xe
 1091 012f 03       		.uleb128 0x3
 1092 0130 0E       		.uleb128 0xe
 1093 0131 3A       		.uleb128 0x3a
 1094 0132 0B       		.uleb128 0xb
 1095 0133 3B       		.uleb128 0x3b
 1096 0134 0B       		.uleb128 0xb
 1097 0135 00       		.byte	0
 1098 0136 00       		.byte	0
ARM GAS  C:\Users\BRIAN~1.SEA\AppData\Local\Temp\ccoSbMTd.s 			page 34


 1099 0137 00       		.byte	0
 1100              		.section	.debug_loc,"",%progbits
 1101              	.Ldebug_loc0:
 1102              	.LLST0:
 1103 0000 12000000 		.4byte	.LVL8
 1104 0004 1F000000 		.4byte	.LVL9-1
 1105 0008 0100     		.2byte	0x1
 1106 000a 50       		.byte	0x50
 1107 000b 00000000 		.4byte	0
 1108 000f 00000000 		.4byte	0
 1109              		.section	.debug_aranges,"",%progbits
 1110 0000 8C000000 		.4byte	0x8c
 1111 0004 0200     		.2byte	0x2
 1112 0006 00000000 		.4byte	.Ldebug_info0
 1113 000a 04       		.byte	0x4
 1114 000b 00       		.byte	0
 1115 000c 0000     		.2byte	0
 1116 000e 0000     		.2byte	0
 1117 0010 00000000 		.4byte	.LFB1
 1118 0014 10000000 		.4byte	.LFE1-.LFB1
 1119 0018 00000000 		.4byte	.LFB3
 1120 001c 10000000 		.4byte	.LFE3-.LFB3
 1121 0020 00000000 		.4byte	.LFB4
 1122 0024 0C000000 		.4byte	.LFE4-.LFB4
 1123 0028 00000000 		.4byte	.LFB5
 1124 002c 0C000000 		.4byte	.LFE5-.LFB5
 1125 0030 00000000 		.4byte	.LFB6
 1126 0034 0C000000 		.4byte	.LFE6-.LFB6
 1127 0038 00000000 		.4byte	.LFB7
 1128 003c 0C000000 		.4byte	.LFE7-.LFB7
 1129 0040 00000000 		.4byte	.LFB8
 1130 0044 0C000000 		.4byte	.LFE8-.LFB8
 1131 0048 00000000 		.4byte	.LFB9
 1132 004c 0C000000 		.4byte	.LFE9-.LFB9
 1133 0050 00000000 		.4byte	.LFB10
 1134 0054 0C000000 		.4byte	.LFE10-.LFB10
 1135 0058 00000000 		.4byte	.LFB11
 1136 005c 0C000000 		.4byte	.LFE11-.LFB11
 1137 0060 00000000 		.4byte	.LFB12
 1138 0064 0C000000 		.4byte	.LFE12-.LFB12
 1139 0068 00000000 		.4byte	.LFB13
 1140 006c 14000000 		.4byte	.LFE13-.LFB13
 1141 0070 00000000 		.4byte	.LFB14
 1142 0074 14000000 		.4byte	.LFE14-.LFB14
 1143 0078 00000000 		.4byte	.LFB0
 1144 007c 30000000 		.4byte	.LFE0-.LFB0
 1145 0080 00000000 		.4byte	.LFB2
 1146 0084 1C000000 		.4byte	.LFE2-.LFB2
 1147 0088 00000000 		.4byte	0
 1148 008c 00000000 		.4byte	0
 1149              		.section	.debug_ranges,"",%progbits
 1150              	.Ldebug_ranges0:
 1151 0000 00000000 		.4byte	.LFB1
 1152 0004 10000000 		.4byte	.LFE1
 1153 0008 00000000 		.4byte	.LFB3
 1154 000c 10000000 		.4byte	.LFE3
 1155 0010 00000000 		.4byte	.LFB4
ARM GAS  C:\Users\BRIAN~1.SEA\AppData\Local\Temp\ccoSbMTd.s 			page 35


 1156 0014 0C000000 		.4byte	.LFE4
 1157 0018 00000000 		.4byte	.LFB5
 1158 001c 0C000000 		.4byte	.LFE5
 1159 0020 00000000 		.4byte	.LFB6
 1160 0024 0C000000 		.4byte	.LFE6
 1161 0028 00000000 		.4byte	.LFB7
 1162 002c 0C000000 		.4byte	.LFE7
 1163 0030 00000000 		.4byte	.LFB8
 1164 0034 0C000000 		.4byte	.LFE8
 1165 0038 00000000 		.4byte	.LFB9
 1166 003c 0C000000 		.4byte	.LFE9
 1167 0040 00000000 		.4byte	.LFB10
 1168 0044 0C000000 		.4byte	.LFE10
 1169 0048 00000000 		.4byte	.LFB11
 1170 004c 0C000000 		.4byte	.LFE11
 1171 0050 00000000 		.4byte	.LFB12
 1172 0054 0C000000 		.4byte	.LFE12
 1173 0058 00000000 		.4byte	.LFB13
 1174 005c 14000000 		.4byte	.LFE13
 1175 0060 00000000 		.4byte	.LFB14
 1176 0064 14000000 		.4byte	.LFE14
 1177 0068 00000000 		.4byte	.LFB0
 1178 006c 30000000 		.4byte	.LFE0
 1179 0070 00000000 		.4byte	.LFB2
 1180 0074 1C000000 		.4byte	.LFE2
 1181 0078 00000000 		.4byte	0
 1182 007c 00000000 		.4byte	0
 1183              		.section	.debug_line,"",%progbits
 1184              	.Ldebug_line0:
 1185 0000 6D010000 		.section	.debug_str,"MS",%progbits,1
 1185      02004E00 
 1185      00000201 
 1185      FB0E0D00 
 1185      01010101 
 1186              	.LASF34:
 1187 0000 54696D65 		.ascii	"Timer1_ClearFIFO\000"
 1187      72315F43 
 1187      6C656172 
 1187      4649464F 
 1187      00
 1188              	.LASF20:
 1189 0011 54696D65 		.ascii	"Timer1_SoftwareCapture\000"
 1189      72315F53 
 1189      6F667477 
 1189      61726543 
 1189      61707475 
 1190              	.LASF30:
 1191 0028 54696D65 		.ascii	"Timer1_ReadCapture\000"
 1191      72315F52 
 1191      65616443 
 1191      61707475 
 1191      726500
 1192              	.LASF29:
 1193 003b 70657269 		.ascii	"period\000"
 1193      6F6400
 1194              	.LASF3:
 1195 0042 73686F72 		.ascii	"short unsigned int\000"
ARM GAS  C:\Users\BRIAN~1.SEA\AppData\Local\Temp\ccoSbMTd.s 			page 36


 1195      7420756E 
 1195      7369676E 
 1195      65642069 
 1195      6E7400
 1196              	.LASF13:
 1197 0055 63686172 		.ascii	"char\000"
 1197      00
 1198              	.LASF2:
 1199 005a 73686F72 		.ascii	"short int\000"
 1199      7420696E 
 1199      7400
 1200              	.LASF11:
 1201 0064 666C6F61 		.ascii	"float\000"
 1201      7400
 1202              	.LASF32:
 1203 006a 636F756E 		.ascii	"counter\000"
 1203      74657200 
 1204              	.LASF7:
 1205 0072 6C6F6E67 		.ascii	"long long unsigned int\000"
 1205      206C6F6E 
 1205      6720756E 
 1205      7369676E 
 1205      65642069 
 1206              	.LASF33:
 1207 0089 54696D65 		.ascii	"Timer1_ReadCounter\000"
 1207      72315F52 
 1207      65616443 
 1207      6F756E74 
 1207      657200
 1208              	.LASF19:
 1209 009c 54696D65 		.ascii	"Timer1_Stop\000"
 1209      72315F53 
 1209      746F7000 
 1210              	.LASF1:
 1211 00a8 756E7369 		.ascii	"unsigned char\000"
 1211      676E6564 
 1211      20636861 
 1211      7200
 1212              	.LASF39:
 1213 00b6 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 1213      43313120 
 1213      352E342E 
 1213      31203230 
 1213      31363036 
 1214 00e9 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 1214      20726576 
 1214      6973696F 
 1214      6E203233 
 1214      37373135 
 1215 011c 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 1215      66756E63 
 1215      74696F6E 
 1215      2D736563 
 1215      74696F6E 
 1216              	.LASF21:
 1217 0144 54696D65 		.ascii	"Timer1_ReadStatusRegister\000"
 1217      72315F52 
ARM GAS  C:\Users\BRIAN~1.SEA\AppData\Local\Temp\ccoSbMTd.s 			page 37


 1217      65616453 
 1217      74617475 
 1217      73526567 
 1218              	.LASF42:
 1219 015e 54696D65 		.ascii	"Timer1_interruptState\000"
 1219      72315F69 
 1219      6E746572 
 1219      72757074 
 1219      53746174 
 1220              	.LASF5:
 1221 0174 6C6F6E67 		.ascii	"long unsigned int\000"
 1221      20756E73 
 1221      69676E65 
 1221      6420696E 
 1221      7400
 1222              	.LASF9:
 1223 0186 75696E74 		.ascii	"uint8\000"
 1223      3800
 1224              	.LASF26:
 1225 018c 636F6E74 		.ascii	"control\000"
 1225      726F6C00 
 1226              	.LASF12:
 1227 0194 646F7562 		.ascii	"double\000"
 1227      6C6500
 1228              	.LASF36:
 1229 019b 54696D65 		.ascii	"Timer1_Start\000"
 1229      72315F53 
 1229      74617274 
 1229      00
 1230              	.LASF41:
 1231 01a8 433A5C5F 		.ascii	"C:\\_User\\GitHub Projects\\PulseGen\\PulseGen.cywr"
 1231      55736572 
 1231      5C476974 
 1231      48756220 
 1231      50726F6A 
 1232 01d7 6B5F2E41 		.ascii	"k_.Archive01\\Design93\\PulseGenerator.cydsn\000"
 1232      72636869 
 1232      76653031 
 1232      5C446573 
 1232      69676E39 
 1233              	.LASF10:
 1234 0202 75696E74 		.ascii	"uint32\000"
 1234      333200
 1235              	.LASF37:
 1236 0209 4379456E 		.ascii	"CyEnterCriticalSection\000"
 1236      74657243 
 1236      72697469 
 1236      63616C53 
 1236      65637469 
 1237              	.LASF35:
 1238 0220 54696D65 		.ascii	"Timer1_Init\000"
 1238      72315F49 
 1238      6E697400 
 1239              	.LASF8:
 1240 022c 756E7369 		.ascii	"unsigned int\000"
 1240      676E6564 
 1240      20696E74 
ARM GAS  C:\Users\BRIAN~1.SEA\AppData\Local\Temp\ccoSbMTd.s 			page 38


 1240      00
 1241              	.LASF38:
 1242 0239 43794578 		.ascii	"CyExitCriticalSection\000"
 1242      69744372 
 1242      69746963 
 1242      616C5365 
 1242      6374696F 
 1243              	.LASF28:
 1244 024f 54696D65 		.ascii	"Timer1_WritePeriod\000"
 1244      72315F57 
 1244      72697465 
 1244      50657269 
 1244      6F6400
 1245              	.LASF18:
 1246 0262 54696D65 		.ascii	"Timer1_Enable\000"
 1246      72315F45 
 1246      6E61626C 
 1246      6500
 1247              	.LASF14:
 1248 0270 72656738 		.ascii	"reg8\000"
 1248      00
 1249              	.LASF31:
 1250 0275 54696D65 		.ascii	"Timer1_WriteCounter\000"
 1250      72315F57 
 1250      72697465 
 1250      436F756E 
 1250      74657200 
 1251              	.LASF17:
 1252 0289 73697A65 		.ascii	"sizetype\000"
 1252      74797065 
 1252      00
 1253              	.LASF24:
 1254 0292 54696D65 		.ascii	"Timer1_WriteControlRegister\000"
 1254      72315F57 
 1254      72697465 
 1254      436F6E74 
 1254      726F6C52 
 1255              	.LASF6:
 1256 02ae 6C6F6E67 		.ascii	"long long int\000"
 1256      206C6F6E 
 1256      6720696E 
 1256      7400
 1257              	.LASF25:
 1258 02bc 696E7465 		.ascii	"interruptMode\000"
 1258      72727570 
 1258      744D6F64 
 1258      6500
 1259              	.LASF43:
 1260 02ca 54696D65 		.ascii	"Timer1_initVar\000"
 1260      72315F69 
 1260      6E697456 
 1260      617200
 1261              	.LASF22:
 1262 02d9 54696D65 		.ascii	"Timer1_ReadControlRegister\000"
 1262      72315F52 
 1262      65616443 
 1262      6F6E7472 
ARM GAS  C:\Users\BRIAN~1.SEA\AppData\Local\Temp\ccoSbMTd.s 			page 39


 1262      6F6C5265 
 1263              	.LASF23:
 1264 02f4 54696D65 		.ascii	"Timer1_SetInterruptMode\000"
 1264      72315F53 
 1264      6574496E 
 1264      74657272 
 1264      7570744D 
 1265              	.LASF27:
 1266 030c 54696D65 		.ascii	"Timer1_ReadPeriod\000"
 1266      72315F52 
 1266      65616450 
 1266      6572696F 
 1266      6400
 1267              	.LASF4:
 1268 031e 6C6F6E67 		.ascii	"long int\000"
 1268      20696E74 
 1268      00
 1269              	.LASF15:
 1270 0327 72656733 		.ascii	"reg32\000"
 1270      3200
 1271              	.LASF40:
 1272 032d 47656E65 		.ascii	"Generated_Source\\PSoC5\\Timer1.c\000"
 1272      72617465 
 1272      645F536F 
 1272      75726365 
 1272      5C50536F 
 1273              	.LASF16:
 1274 034d 6C6F6E67 		.ascii	"long double\000"
 1274      20646F75 
 1274      626C6500 
 1275              	.LASF0:
 1276 0359 7369676E 		.ascii	"signed char\000"
 1276      65642063 
 1276      68617200 
 1277              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
